/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgParameterAcl;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The table <code>pg_catalog.pg_parameter_acl</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgParameterAclRecord extends UpdatableRecordImpl<PgParameterAclRecord> implements Record3<Long, String, String[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_parameter_acl.oid</code>.
     */
    public void setOid(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_parameter_acl.oid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getOid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_parameter_acl.parname</code>.
     */
    public void setParname(@NotNull String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_parameter_acl.parname</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getParname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_parameter_acl.paracl</code>.
     */
    public void setParacl(@Nullable String[] value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_parameter_acl.paracl</code>.
     */
    @Nullable
    public String[] getParacl() {
        return (String[]) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row3<Long, String, String[]> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row3<Long, String, String[]> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return PgParameterAcl.PG_PARAMETER_ACL.OID;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return PgParameterAcl.PG_PARAMETER_ACL.PARNAME;
    }

    @Override
    @NotNull
    public Field<String[]> field3() {
        return PgParameterAcl.PG_PARAMETER_ACL.PARACL;
    }

    @Override
    @NotNull
    public Long component1() {
        return getOid();
    }

    @Override
    @NotNull
    public String component2() {
        return getParname();
    }

    @Override
    @Nullable
    public String[] component3() {
        return getParacl();
    }

    @Override
    @NotNull
    public Long value1() {
        return getOid();
    }

    @Override
    @NotNull
    public String value2() {
        return getParname();
    }

    @Override
    @Nullable
    public String[] value3() {
        return getParacl();
    }

    @Override
    @NotNull
    public PgParameterAclRecord value1(@NotNull Long value) {
        setOid(value);
        return this;
    }

    @Override
    @NotNull
    public PgParameterAclRecord value2(@NotNull String value) {
        setParname(value);
        return this;
    }

    @Override
    @NotNull
    public PgParameterAclRecord value3(@Nullable String[] value) {
        setParacl(value);
        return this;
    }

    @Override
    @NotNull
    public PgParameterAclRecord values(@NotNull Long value1, @NotNull String value2, @Nullable String[] value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgParameterAclRecord
     */
    public PgParameterAclRecord() {
        super(PgParameterAcl.PG_PARAMETER_ACL);
    }

    /**
     * Create a detached, initialised PgParameterAclRecord
     */
    @ConstructorProperties({ "oid", "parname", "paracl" })
    public PgParameterAclRecord(@NotNull Long oid, @NotNull String parname, @Nullable String[] paracl) {
        super(PgParameterAcl.PG_PARAMETER_ACL);

        setOid(oid);
        setParname(parname);
        setParacl(paracl);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PgParameterAclRecord
     */
    public PgParameterAclRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgParameterAcl value) {
        super(PgParameterAcl.PG_PARAMETER_ACL);

        if (value != null) {
            setOid(value.getOid());
            setParname(value.getParname());
            setParacl(value.getParacl());
            resetChangedOnNotNull();
        }
    }
}
