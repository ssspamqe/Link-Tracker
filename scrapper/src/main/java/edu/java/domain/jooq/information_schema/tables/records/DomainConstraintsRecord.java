/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.information_schema.tables.records;


import edu.java.domain.jooq.information_schema.tables.DomainConstraints;

import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;


/**
 * The table <code>information_schema.domain_constraints</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class DomainConstraintsRecord extends TableRecordImpl<DomainConstraintsRecord> implements Record8<String, String, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>information_schema.domain_constraints.constraint_catalog</code>.
     */
    public void setConstraintCatalog(@Nullable String value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>information_schema.domain_constraints.constraint_catalog</code>.
     */
    @Nullable
    public String getConstraintCatalog() {
        return (String) get(0);
    }

    /**
     * Setter for
     * <code>information_schema.domain_constraints.constraint_schema</code>.
     */
    public void setConstraintSchema(@Nullable String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>information_schema.domain_constraints.constraint_schema</code>.
     */
    @Nullable
    public String getConstraintSchema() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>information_schema.domain_constraints.constraint_name</code>.
     */
    public void setConstraintName(@Nullable String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>information_schema.domain_constraints.constraint_name</code>.
     */
    @Nullable
    public String getConstraintName() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>information_schema.domain_constraints.domain_catalog</code>.
     */
    public void setDomainCatalog(@Nullable String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>information_schema.domain_constraints.domain_catalog</code>.
     */
    @Nullable
    public String getDomainCatalog() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>information_schema.domain_constraints.domain_schema</code>.
     */
    public void setDomainSchema(@Nullable String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>information_schema.domain_constraints.domain_schema</code>.
     */
    @Nullable
    public String getDomainSchema() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>information_schema.domain_constraints.domain_name</code>.
     */
    public void setDomainName(@Nullable String value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>information_schema.domain_constraints.domain_name</code>.
     */
    @Nullable
    public String getDomainName() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>information_schema.domain_constraints.is_deferrable</code>.
     */
    public void setIsDeferrable(@Nullable String value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>information_schema.domain_constraints.is_deferrable</code>.
     */
    @Size(max = 3)
    @Nullable
    public String getIsDeferrable() {
        return (String) get(6);
    }

    /**
     * Setter for
     * <code>information_schema.domain_constraints.initially_deferred</code>.
     */
    public void setInitiallyDeferred(@Nullable String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>information_schema.domain_constraints.initially_deferred</code>.
     */
    @Size(max = 3)
    @Nullable
    public String getInitiallyDeferred() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row8<String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row8<String, String, String, String, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return DomainConstraints.DOMAIN_CONSTRAINTS.CONSTRAINT_CATALOG;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return DomainConstraints.DOMAIN_CONSTRAINTS.CONSTRAINT_SCHEMA;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return DomainConstraints.DOMAIN_CONSTRAINTS.CONSTRAINT_NAME;
    }

    @Override
    @NotNull
    public Field<String> field4() {
        return DomainConstraints.DOMAIN_CONSTRAINTS.DOMAIN_CATALOG;
    }

    @Override
    @NotNull
    public Field<String> field5() {
        return DomainConstraints.DOMAIN_CONSTRAINTS.DOMAIN_SCHEMA;
    }

    @Override
    @NotNull
    public Field<String> field6() {
        return DomainConstraints.DOMAIN_CONSTRAINTS.DOMAIN_NAME;
    }

    @Override
    @NotNull
    public Field<String> field7() {
        return DomainConstraints.DOMAIN_CONSTRAINTS.IS_DEFERRABLE;
    }

    @Override
    @NotNull
    public Field<String> field8() {
        return DomainConstraints.DOMAIN_CONSTRAINTS.INITIALLY_DEFERRED;
    }

    @Override
    @Nullable
    public String component1() {
        return getConstraintCatalog();
    }

    @Override
    @Nullable
    public String component2() {
        return getConstraintSchema();
    }

    @Override
    @Nullable
    public String component3() {
        return getConstraintName();
    }

    @Override
    @Nullable
    public String component4() {
        return getDomainCatalog();
    }

    @Override
    @Nullable
    public String component5() {
        return getDomainSchema();
    }

    @Override
    @Nullable
    public String component6() {
        return getDomainName();
    }

    @Override
    @Nullable
    public String component7() {
        return getIsDeferrable();
    }

    @Override
    @Nullable
    public String component8() {
        return getInitiallyDeferred();
    }

    @Override
    @Nullable
    public String value1() {
        return getConstraintCatalog();
    }

    @Override
    @Nullable
    public String value2() {
        return getConstraintSchema();
    }

    @Override
    @Nullable
    public String value3() {
        return getConstraintName();
    }

    @Override
    @Nullable
    public String value4() {
        return getDomainCatalog();
    }

    @Override
    @Nullable
    public String value5() {
        return getDomainSchema();
    }

    @Override
    @Nullable
    public String value6() {
        return getDomainName();
    }

    @Override
    @Nullable
    public String value7() {
        return getIsDeferrable();
    }

    @Override
    @Nullable
    public String value8() {
        return getInitiallyDeferred();
    }

    @Override
    @NotNull
    public DomainConstraintsRecord value1(@Nullable String value) {
        setConstraintCatalog(value);
        return this;
    }

    @Override
    @NotNull
    public DomainConstraintsRecord value2(@Nullable String value) {
        setConstraintSchema(value);
        return this;
    }

    @Override
    @NotNull
    public DomainConstraintsRecord value3(@Nullable String value) {
        setConstraintName(value);
        return this;
    }

    @Override
    @NotNull
    public DomainConstraintsRecord value4(@Nullable String value) {
        setDomainCatalog(value);
        return this;
    }

    @Override
    @NotNull
    public DomainConstraintsRecord value5(@Nullable String value) {
        setDomainSchema(value);
        return this;
    }

    @Override
    @NotNull
    public DomainConstraintsRecord value6(@Nullable String value) {
        setDomainName(value);
        return this;
    }

    @Override
    @NotNull
    public DomainConstraintsRecord value7(@Nullable String value) {
        setIsDeferrable(value);
        return this;
    }

    @Override
    @NotNull
    public DomainConstraintsRecord value8(@Nullable String value) {
        setInitiallyDeferred(value);
        return this;
    }

    @Override
    @NotNull
    public DomainConstraintsRecord values(@Nullable String value1, @Nullable String value2, @Nullable String value3, @Nullable String value4, @Nullable String value5, @Nullable String value6, @Nullable String value7, @Nullable String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DomainConstraintsRecord
     */
    public DomainConstraintsRecord() {
        super(DomainConstraints.DOMAIN_CONSTRAINTS);
    }

    /**
     * Create a detached, initialised DomainConstraintsRecord
     */
    @ConstructorProperties({ "constraintCatalog", "constraintSchema", "constraintName", "domainCatalog", "domainSchema", "domainName", "isDeferrable", "initiallyDeferred" })
    public DomainConstraintsRecord(@Nullable String constraintCatalog, @Nullable String constraintSchema, @Nullable String constraintName, @Nullable String domainCatalog, @Nullable String domainSchema, @Nullable String domainName, @Nullable String isDeferrable, @Nullable String initiallyDeferred) {
        super(DomainConstraints.DOMAIN_CONSTRAINTS);

        setConstraintCatalog(constraintCatalog);
        setConstraintSchema(constraintSchema);
        setConstraintName(constraintName);
        setDomainCatalog(domainCatalog);
        setDomainSchema(domainSchema);
        setDomainName(domainName);
        setIsDeferrable(isDeferrable);
        setInitiallyDeferred(initiallyDeferred);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised DomainConstraintsRecord
     */
    public DomainConstraintsRecord(edu.java.domain.jooq.information_schema.tables.pojos.DomainConstraints value) {
        super(DomainConstraints.DOMAIN_CONSTRAINTS);

        if (value != null) {
            setConstraintCatalog(value.getConstraintCatalog());
            setConstraintSchema(value.getConstraintSchema());
            setConstraintName(value.getConstraintName());
            setDomainCatalog(value.getDomainCatalog());
            setDomainSchema(value.getDomainSchema());
            setDomainName(value.getDomainName());
            setIsDeferrable(value.getIsDeferrable());
            setInitiallyDeferred(value.getInitiallyDeferred());
            resetChangedOnNotNull();
        }
    }
}
