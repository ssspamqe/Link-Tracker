/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgSubscription;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgSubscriptionRecord extends UpdatableRecordImpl<PgSubscriptionRecord> implements Record17<Long, Long, Object, String, Long, Boolean, Boolean, String, String, Boolean, Boolean, Boolean, String, String, String, String[], String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_subscription.oid</code>.
     */
    public void setOid(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_subscription.oid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getOid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_subscription.subdbid</code>.
     */
    public void setSubdbid(@NotNull Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_subscription.subdbid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getSubdbid() {
        return (Long) get(1);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setSubskiplsn(@NotNull Object value) {
        set(2, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Object getSubskiplsn() {
        return get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_subscription.subname</code>.
     */
    public void setSubname(@NotNull String value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_subscription.subname</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getSubname() {
        return (String) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_subscription.subowner</code>.
     */
    public void setSubowner(@NotNull Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_subscription.subowner</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getSubowner() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_subscription.subenabled</code>.
     */
    public void setSubenabled(@NotNull Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_subscription.subenabled</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getSubenabled() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_subscription.subbinary</code>.
     */
    public void setSubbinary(@NotNull Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_subscription.subbinary</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getSubbinary() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_subscription.substream</code>.
     */
    public void setSubstream(@NotNull String value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_subscription.substream</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getSubstream() {
        return (String) get(7);
    }

    /**
     * Setter for <code>pg_catalog.pg_subscription.subtwophasestate</code>.
     */
    public void setSubtwophasestate(@NotNull String value) {
        set(8, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_subscription.subtwophasestate</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getSubtwophasestate() {
        return (String) get(8);
    }

    /**
     * Setter for <code>pg_catalog.pg_subscription.subdisableonerr</code>.
     */
    public void setSubdisableonerr(@NotNull Boolean value) {
        set(9, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_subscription.subdisableonerr</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getSubdisableonerr() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>pg_catalog.pg_subscription.subpasswordrequired</code>.
     */
    public void setSubpasswordrequired(@NotNull Boolean value) {
        set(10, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_subscription.subpasswordrequired</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getSubpasswordrequired() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>pg_catalog.pg_subscription.subrunasowner</code>.
     */
    public void setSubrunasowner(@NotNull Boolean value) {
        set(11, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_subscription.subrunasowner</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getSubrunasowner() {
        return (Boolean) get(11);
    }

    /**
     * Setter for <code>pg_catalog.pg_subscription.subconninfo</code>.
     */
    public void setSubconninfo(@NotNull String value) {
        set(12, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_subscription.subconninfo</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getSubconninfo() {
        return (String) get(12);
    }

    /**
     * Setter for <code>pg_catalog.pg_subscription.subslotname</code>.
     */
    public void setSubslotname(@Nullable String value) {
        set(13, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_subscription.subslotname</code>.
     */
    @Nullable
    public String getSubslotname() {
        return (String) get(13);
    }

    /**
     * Setter for <code>pg_catalog.pg_subscription.subsynccommit</code>.
     */
    public void setSubsynccommit(@NotNull String value) {
        set(14, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_subscription.subsynccommit</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getSubsynccommit() {
        return (String) get(14);
    }

    /**
     * Setter for <code>pg_catalog.pg_subscription.subpublications</code>.
     */
    public void setSubpublications(@NotNull String[] value) {
        set(15, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_subscription.subpublications</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String[] getSubpublications() {
        return (String[]) get(15);
    }

    /**
     * Setter for <code>pg_catalog.pg_subscription.suborigin</code>.
     */
    public void setSuborigin(@Nullable String value) {
        set(16, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_subscription.suborigin</code>.
     */
    @Nullable
    public String getSuborigin() {
        return (String) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row17<Long, Long, Object, String, Long, Boolean, Boolean, String, String, Boolean, Boolean, Boolean, String, String, String, String[], String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row17<Long, Long, Object, String, Long, Boolean, Boolean, String, String, Boolean, Boolean, Boolean, String, String, String, String[], String> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return PgSubscription.PG_SUBSCRIPTION.OID;
    }

    @Override
    @NotNull
    public Field<Long> field2() {
        return PgSubscription.PG_SUBSCRIPTION.SUBDBID;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    @NotNull
    public Field<Object> field3() {
        return PgSubscription.PG_SUBSCRIPTION.SUBSKIPLSN;
    }

    @Override
    @NotNull
    public Field<String> field4() {
        return PgSubscription.PG_SUBSCRIPTION.SUBNAME;
    }

    @Override
    @NotNull
    public Field<Long> field5() {
        return PgSubscription.PG_SUBSCRIPTION.SUBOWNER;
    }

    @Override
    @NotNull
    public Field<Boolean> field6() {
        return PgSubscription.PG_SUBSCRIPTION.SUBENABLED;
    }

    @Override
    @NotNull
    public Field<Boolean> field7() {
        return PgSubscription.PG_SUBSCRIPTION.SUBBINARY;
    }

    @Override
    @NotNull
    public Field<String> field8() {
        return PgSubscription.PG_SUBSCRIPTION.SUBSTREAM;
    }

    @Override
    @NotNull
    public Field<String> field9() {
        return PgSubscription.PG_SUBSCRIPTION.SUBTWOPHASESTATE;
    }

    @Override
    @NotNull
    public Field<Boolean> field10() {
        return PgSubscription.PG_SUBSCRIPTION.SUBDISABLEONERR;
    }

    @Override
    @NotNull
    public Field<Boolean> field11() {
        return PgSubscription.PG_SUBSCRIPTION.SUBPASSWORDREQUIRED;
    }

    @Override
    @NotNull
    public Field<Boolean> field12() {
        return PgSubscription.PG_SUBSCRIPTION.SUBRUNASOWNER;
    }

    @Override
    @NotNull
    public Field<String> field13() {
        return PgSubscription.PG_SUBSCRIPTION.SUBCONNINFO;
    }

    @Override
    @NotNull
    public Field<String> field14() {
        return PgSubscription.PG_SUBSCRIPTION.SUBSLOTNAME;
    }

    @Override
    @NotNull
    public Field<String> field15() {
        return PgSubscription.PG_SUBSCRIPTION.SUBSYNCCOMMIT;
    }

    @Override
    @NotNull
    public Field<String[]> field16() {
        return PgSubscription.PG_SUBSCRIPTION.SUBPUBLICATIONS;
    }

    @Override
    @NotNull
    public Field<String> field17() {
        return PgSubscription.PG_SUBSCRIPTION.SUBORIGIN;
    }

    @Override
    @NotNull
    public Long component1() {
        return getOid();
    }

    @Override
    @NotNull
    public Long component2() {
        return getSubdbid();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    @NotNull
    public Object component3() {
        return getSubskiplsn();
    }

    @Override
    @NotNull
    public String component4() {
        return getSubname();
    }

    @Override
    @NotNull
    public Long component5() {
        return getSubowner();
    }

    @Override
    @NotNull
    public Boolean component6() {
        return getSubenabled();
    }

    @Override
    @NotNull
    public Boolean component7() {
        return getSubbinary();
    }

    @Override
    @NotNull
    public String component8() {
        return getSubstream();
    }

    @Override
    @NotNull
    public String component9() {
        return getSubtwophasestate();
    }

    @Override
    @NotNull
    public Boolean component10() {
        return getSubdisableonerr();
    }

    @Override
    @NotNull
    public Boolean component11() {
        return getSubpasswordrequired();
    }

    @Override
    @NotNull
    public Boolean component12() {
        return getSubrunasowner();
    }

    @Override
    @NotNull
    public String component13() {
        return getSubconninfo();
    }

    @Override
    @Nullable
    public String component14() {
        return getSubslotname();
    }

    @Override
    @NotNull
    public String component15() {
        return getSubsynccommit();
    }

    @Override
    @NotNull
    public String[] component16() {
        return getSubpublications();
    }

    @Override
    @Nullable
    public String component17() {
        return getSuborigin();
    }

    @Override
    @NotNull
    public Long value1() {
        return getOid();
    }

    @Override
    @NotNull
    public Long value2() {
        return getSubdbid();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    @NotNull
    public Object value3() {
        return getSubskiplsn();
    }

    @Override
    @NotNull
    public String value4() {
        return getSubname();
    }

    @Override
    @NotNull
    public Long value5() {
        return getSubowner();
    }

    @Override
    @NotNull
    public Boolean value6() {
        return getSubenabled();
    }

    @Override
    @NotNull
    public Boolean value7() {
        return getSubbinary();
    }

    @Override
    @NotNull
    public String value8() {
        return getSubstream();
    }

    @Override
    @NotNull
    public String value9() {
        return getSubtwophasestate();
    }

    @Override
    @NotNull
    public Boolean value10() {
        return getSubdisableonerr();
    }

    @Override
    @NotNull
    public Boolean value11() {
        return getSubpasswordrequired();
    }

    @Override
    @NotNull
    public Boolean value12() {
        return getSubrunasowner();
    }

    @Override
    @NotNull
    public String value13() {
        return getSubconninfo();
    }

    @Override
    @Nullable
    public String value14() {
        return getSubslotname();
    }

    @Override
    @NotNull
    public String value15() {
        return getSubsynccommit();
    }

    @Override
    @NotNull
    public String[] value16() {
        return getSubpublications();
    }

    @Override
    @Nullable
    public String value17() {
        return getSuborigin();
    }

    @Override
    @NotNull
    public PgSubscriptionRecord value1(@NotNull Long value) {
        setOid(value);
        return this;
    }

    @Override
    @NotNull
    public PgSubscriptionRecord value2(@NotNull Long value) {
        setSubdbid(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    @NotNull
    public PgSubscriptionRecord value3(@NotNull Object value) {
        setSubskiplsn(value);
        return this;
    }

    @Override
    @NotNull
    public PgSubscriptionRecord value4(@NotNull String value) {
        setSubname(value);
        return this;
    }

    @Override
    @NotNull
    public PgSubscriptionRecord value5(@NotNull Long value) {
        setSubowner(value);
        return this;
    }

    @Override
    @NotNull
    public PgSubscriptionRecord value6(@NotNull Boolean value) {
        setSubenabled(value);
        return this;
    }

    @Override
    @NotNull
    public PgSubscriptionRecord value7(@NotNull Boolean value) {
        setSubbinary(value);
        return this;
    }

    @Override
    @NotNull
    public PgSubscriptionRecord value8(@NotNull String value) {
        setSubstream(value);
        return this;
    }

    @Override
    @NotNull
    public PgSubscriptionRecord value9(@NotNull String value) {
        setSubtwophasestate(value);
        return this;
    }

    @Override
    @NotNull
    public PgSubscriptionRecord value10(@NotNull Boolean value) {
        setSubdisableonerr(value);
        return this;
    }

    @Override
    @NotNull
    public PgSubscriptionRecord value11(@NotNull Boolean value) {
        setSubpasswordrequired(value);
        return this;
    }

    @Override
    @NotNull
    public PgSubscriptionRecord value12(@NotNull Boolean value) {
        setSubrunasowner(value);
        return this;
    }

    @Override
    @NotNull
    public PgSubscriptionRecord value13(@NotNull String value) {
        setSubconninfo(value);
        return this;
    }

    @Override
    @NotNull
    public PgSubscriptionRecord value14(@Nullable String value) {
        setSubslotname(value);
        return this;
    }

    @Override
    @NotNull
    public PgSubscriptionRecord value15(@NotNull String value) {
        setSubsynccommit(value);
        return this;
    }

    @Override
    @NotNull
    public PgSubscriptionRecord value16(@NotNull String[] value) {
        setSubpublications(value);
        return this;
    }

    @Override
    @NotNull
    public PgSubscriptionRecord value17(@Nullable String value) {
        setSuborigin(value);
        return this;
    }

    @Override
    @NotNull
    public PgSubscriptionRecord values(@NotNull Long value1, @NotNull Long value2, @NotNull Object value3, @NotNull String value4, @NotNull Long value5, @NotNull Boolean value6, @NotNull Boolean value7, @NotNull String value8, @NotNull String value9, @NotNull Boolean value10, @NotNull Boolean value11, @NotNull Boolean value12, @NotNull String value13, @Nullable String value14, @NotNull String value15, @NotNull String[] value16, @Nullable String value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgSubscriptionRecord
     */
    public PgSubscriptionRecord() {
        super(PgSubscription.PG_SUBSCRIPTION);
    }

    /**
     * Create a detached, initialised PgSubscriptionRecord
     */
    @ConstructorProperties({ "oid", "subdbid", "subskiplsn", "subname", "subowner", "subenabled", "subbinary", "substream", "subtwophasestate", "subdisableonerr", "subpasswordrequired", "subrunasowner", "subconninfo", "subslotname", "subsynccommit", "subpublications", "suborigin" })
    public PgSubscriptionRecord(@NotNull Long oid, @NotNull Long subdbid, @NotNull Object subskiplsn, @NotNull String subname, @NotNull Long subowner, @NotNull Boolean subenabled, @NotNull Boolean subbinary, @NotNull String substream, @NotNull String subtwophasestate, @NotNull Boolean subdisableonerr, @NotNull Boolean subpasswordrequired, @NotNull Boolean subrunasowner, @NotNull String subconninfo, @Nullable String subslotname, @NotNull String subsynccommit, @NotNull String[] subpublications, @Nullable String suborigin) {
        super(PgSubscription.PG_SUBSCRIPTION);

        setOid(oid);
        setSubdbid(subdbid);
        setSubskiplsn(subskiplsn);
        setSubname(subname);
        setSubowner(subowner);
        setSubenabled(subenabled);
        setSubbinary(subbinary);
        setSubstream(substream);
        setSubtwophasestate(subtwophasestate);
        setSubdisableonerr(subdisableonerr);
        setSubpasswordrequired(subpasswordrequired);
        setSubrunasowner(subrunasowner);
        setSubconninfo(subconninfo);
        setSubslotname(subslotname);
        setSubsynccommit(subsynccommit);
        setSubpublications(subpublications);
        setSuborigin(suborigin);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PgSubscriptionRecord
     */
    public PgSubscriptionRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgSubscription value) {
        super(PgSubscription.PG_SUBSCRIPTION);

        if (value != null) {
            setOid(value.getOid());
            setSubdbid(value.getSubdbid());
            setSubskiplsn(value.getSubskiplsn());
            setSubname(value.getSubname());
            setSubowner(value.getSubowner());
            setSubenabled(value.getSubenabled());
            setSubbinary(value.getSubbinary());
            setSubstream(value.getSubstream());
            setSubtwophasestate(value.getSubtwophasestate());
            setSubdisableonerr(value.getSubdisableonerr());
            setSubpasswordrequired(value.getSubpasswordrequired());
            setSubrunasowner(value.getSubrunasowner());
            setSubconninfo(value.getSubconninfo());
            setSubslotname(value.getSubslotname());
            setSubsynccommit(value.getSubsynccommit());
            setSubpublications(value.getSubpublications());
            setSuborigin(value.getSuborigin());
            resetChangedOnNotNull();
        }
    }
}
