/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.routines;


import edu.java.domain.jooq.pg_catalog.PgCatalog;

import javax.annotation.processing.Generated;

import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgBackupStop extends AbstractRoutine<java.lang.Void> {

    private static final long serialVersionUID = 1L;

    public static final Parameter<Boolean> WAIT_FOR_ARCHIVE = Internal.createParameter("wait_for_archive", SQLDataType.BOOLEAN.defaultValue(DSL.field(DSL.raw("true"), SQLDataType.BOOLEAN)), true, false);

    @Deprecated
    public static final Parameter<Object> LSN = Internal.createParameter("lsn", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"pg_lsn\""), false, false);

    public static final Parameter<String> LABELFILE = Internal.createParameter("labelfile", SQLDataType.CLOB, false, false);

    public static final Parameter<String> SPCMAPFILE = Internal.createParameter("spcmapfile", SQLDataType.CLOB, false, false);

    public PgBackupStop() {
        super("pg_backup_stop", PgCatalog.PG_CATALOG);

        addInParameter(WAIT_FOR_ARCHIVE);
        addOutParameter(LSN);
        addOutParameter(LABELFILE);
        addOutParameter(SPCMAPFILE);
    }

    public void setWaitForArchive(Boolean value) {
        setValue(WAIT_FOR_ARCHIVE, value);
    }

    @Deprecated
    public Object getLsn() {
        return get(LSN);
    }

    public String getLabelfile() {
        return get(LABELFILE);
    }

    public String getSpcmapfile() {
        return get(SPCMAPFILE);
    }
}
