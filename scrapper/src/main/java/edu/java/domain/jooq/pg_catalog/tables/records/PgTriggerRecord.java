/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgTrigger;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record19;
import org.jooq.Row19;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The table <code>pg_catalog.pg_trigger</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgTriggerRecord extends UpdatableRecordImpl<PgTriggerRecord> implements Record19<Long, Long, Long, String, Long, Short, String, Boolean, Long, Long, Long, Boolean, Boolean, Short, Object[], byte[], Object, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_trigger.oid</code>.
     */
    public void setOid(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.oid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getOid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgrelid</code>.
     */
    public void setTgrelid(@NotNull Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgrelid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTgrelid() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgparentid</code>.
     */
    public void setTgparentid(@NotNull Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgparentid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTgparentid() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgname</code>.
     */
    public void setTgname(@NotNull String value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgname</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getTgname() {
        return (String) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgfoid</code>.
     */
    public void setTgfoid(@NotNull Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgfoid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTgfoid() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgtype</code>.
     */
    public void setTgtype(@NotNull Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgtype</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Short getTgtype() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgenabled</code>.
     */
    public void setTgenabled(@NotNull String value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgenabled</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getTgenabled() {
        return (String) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgisinternal</code>.
     */
    public void setTgisinternal(@NotNull Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgisinternal</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getTgisinternal() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgconstrrelid</code>.
     */
    public void setTgconstrrelid(@NotNull Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgconstrrelid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTgconstrrelid() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgconstrindid</code>.
     */
    public void setTgconstrindid(@NotNull Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgconstrindid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTgconstrindid() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgconstraint</code>.
     */
    public void setTgconstraint(@NotNull Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgconstraint</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTgconstraint() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgdeferrable</code>.
     */
    public void setTgdeferrable(@NotNull Boolean value) {
        set(11, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgdeferrable</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getTgdeferrable() {
        return (Boolean) get(11);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tginitdeferred</code>.
     */
    public void setTginitdeferred(@NotNull Boolean value) {
        set(12, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tginitdeferred</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getTginitdeferred() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgnargs</code>.
     */
    public void setTgnargs(@NotNull Short value) {
        set(13, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgnargs</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Short getTgnargs() {
        return (Short) get(13);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgattr</code>.
     */
    public void setTgattr(@NotNull Object[] value) {
        set(14, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgattr</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Object[] getTgattr() {
        return (Object[]) get(14);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgargs</code>.
     */
    public void setTgargs(@NotNull byte[] value) {
        set(15, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgargs</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public byte[] getTgargs() {
        return (byte[]) get(15);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setTgqual(@Nullable Object value) {
        set(16, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Nullable
    public Object getTgqual() {
        return get(16);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgoldtable</code>.
     */
    public void setTgoldtable(@Nullable String value) {
        set(17, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgoldtable</code>.
     */
    @Nullable
    public String getTgoldtable() {
        return (String) get(17);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgnewtable</code>.
     */
    public void setTgnewtable(@Nullable String value) {
        set(18, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgnewtable</code>.
     */
    @Nullable
    public String getTgnewtable() {
        return (String) get(18);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record19 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row19<Long, Long, Long, String, Long, Short, String, Boolean, Long, Long, Long, Boolean, Boolean, Short, Object[], byte[], Object, String, String> fieldsRow() {
        return (Row19) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row19<Long, Long, Long, String, Long, Short, String, Boolean, Long, Long, Long, Boolean, Boolean, Short, Object[], byte[], Object, String, String> valuesRow() {
        return (Row19) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return PgTrigger.PG_TRIGGER.OID;
    }

    @Override
    @NotNull
    public Field<Long> field2() {
        return PgTrigger.PG_TRIGGER.TGRELID;
    }

    @Override
    @NotNull
    public Field<Long> field3() {
        return PgTrigger.PG_TRIGGER.TGPARENTID;
    }

    @Override
    @NotNull
    public Field<String> field4() {
        return PgTrigger.PG_TRIGGER.TGNAME;
    }

    @Override
    @NotNull
    public Field<Long> field5() {
        return PgTrigger.PG_TRIGGER.TGFOID;
    }

    @Override
    @NotNull
    public Field<Short> field6() {
        return PgTrigger.PG_TRIGGER.TGTYPE;
    }

    @Override
    @NotNull
    public Field<String> field7() {
        return PgTrigger.PG_TRIGGER.TGENABLED;
    }

    @Override
    @NotNull
    public Field<Boolean> field8() {
        return PgTrigger.PG_TRIGGER.TGISINTERNAL;
    }

    @Override
    @NotNull
    public Field<Long> field9() {
        return PgTrigger.PG_TRIGGER.TGCONSTRRELID;
    }

    @Override
    @NotNull
    public Field<Long> field10() {
        return PgTrigger.PG_TRIGGER.TGCONSTRINDID;
    }

    @Override
    @NotNull
    public Field<Long> field11() {
        return PgTrigger.PG_TRIGGER.TGCONSTRAINT;
    }

    @Override
    @NotNull
    public Field<Boolean> field12() {
        return PgTrigger.PG_TRIGGER.TGDEFERRABLE;
    }

    @Override
    @NotNull
    public Field<Boolean> field13() {
        return PgTrigger.PG_TRIGGER.TGINITDEFERRED;
    }

    @Override
    @NotNull
    public Field<Short> field14() {
        return PgTrigger.PG_TRIGGER.TGNARGS;
    }

    @Override
    @NotNull
    public Field<Object[]> field15() {
        return PgTrigger.PG_TRIGGER.TGATTR;
    }

    @Override
    @NotNull
    public Field<byte[]> field16() {
        return PgTrigger.PG_TRIGGER.TGARGS;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    @NotNull
    public Field<Object> field17() {
        return PgTrigger.PG_TRIGGER.TGQUAL;
    }

    @Override
    @NotNull
    public Field<String> field18() {
        return PgTrigger.PG_TRIGGER.TGOLDTABLE;
    }

    @Override
    @NotNull
    public Field<String> field19() {
        return PgTrigger.PG_TRIGGER.TGNEWTABLE;
    }

    @Override
    @NotNull
    public Long component1() {
        return getOid();
    }

    @Override
    @NotNull
    public Long component2() {
        return getTgrelid();
    }

    @Override
    @NotNull
    public Long component3() {
        return getTgparentid();
    }

    @Override
    @NotNull
    public String component4() {
        return getTgname();
    }

    @Override
    @NotNull
    public Long component5() {
        return getTgfoid();
    }

    @Override
    @NotNull
    public Short component6() {
        return getTgtype();
    }

    @Override
    @NotNull
    public String component7() {
        return getTgenabled();
    }

    @Override
    @NotNull
    public Boolean component8() {
        return getTgisinternal();
    }

    @Override
    @NotNull
    public Long component9() {
        return getTgconstrrelid();
    }

    @Override
    @NotNull
    public Long component10() {
        return getTgconstrindid();
    }

    @Override
    @NotNull
    public Long component11() {
        return getTgconstraint();
    }

    @Override
    @NotNull
    public Boolean component12() {
        return getTgdeferrable();
    }

    @Override
    @NotNull
    public Boolean component13() {
        return getTginitdeferred();
    }

    @Override
    @NotNull
    public Short component14() {
        return getTgnargs();
    }

    @Override
    @NotNull
    public Object[] component15() {
        return getTgattr();
    }

    @Override
    @NotNull
    public byte[] component16() {
        return getTgargs();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    @Nullable
    public Object component17() {
        return getTgqual();
    }

    @Override
    @Nullable
    public String component18() {
        return getTgoldtable();
    }

    @Override
    @Nullable
    public String component19() {
        return getTgnewtable();
    }

    @Override
    @NotNull
    public Long value1() {
        return getOid();
    }

    @Override
    @NotNull
    public Long value2() {
        return getTgrelid();
    }

    @Override
    @NotNull
    public Long value3() {
        return getTgparentid();
    }

    @Override
    @NotNull
    public String value4() {
        return getTgname();
    }

    @Override
    @NotNull
    public Long value5() {
        return getTgfoid();
    }

    @Override
    @NotNull
    public Short value6() {
        return getTgtype();
    }

    @Override
    @NotNull
    public String value7() {
        return getTgenabled();
    }

    @Override
    @NotNull
    public Boolean value8() {
        return getTgisinternal();
    }

    @Override
    @NotNull
    public Long value9() {
        return getTgconstrrelid();
    }

    @Override
    @NotNull
    public Long value10() {
        return getTgconstrindid();
    }

    @Override
    @NotNull
    public Long value11() {
        return getTgconstraint();
    }

    @Override
    @NotNull
    public Boolean value12() {
        return getTgdeferrable();
    }

    @Override
    @NotNull
    public Boolean value13() {
        return getTginitdeferred();
    }

    @Override
    @NotNull
    public Short value14() {
        return getTgnargs();
    }

    @Override
    @NotNull
    public Object[] value15() {
        return getTgattr();
    }

    @Override
    @NotNull
    public byte[] value16() {
        return getTgargs();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    @Nullable
    public Object value17() {
        return getTgqual();
    }

    @Override
    @Nullable
    public String value18() {
        return getTgoldtable();
    }

    @Override
    @Nullable
    public String value19() {
        return getTgnewtable();
    }

    @Override
    @NotNull
    public PgTriggerRecord value1(@NotNull Long value) {
        setOid(value);
        return this;
    }

    @Override
    @NotNull
    public PgTriggerRecord value2(@NotNull Long value) {
        setTgrelid(value);
        return this;
    }

    @Override
    @NotNull
    public PgTriggerRecord value3(@NotNull Long value) {
        setTgparentid(value);
        return this;
    }

    @Override
    @NotNull
    public PgTriggerRecord value4(@NotNull String value) {
        setTgname(value);
        return this;
    }

    @Override
    @NotNull
    public PgTriggerRecord value5(@NotNull Long value) {
        setTgfoid(value);
        return this;
    }

    @Override
    @NotNull
    public PgTriggerRecord value6(@NotNull Short value) {
        setTgtype(value);
        return this;
    }

    @Override
    @NotNull
    public PgTriggerRecord value7(@NotNull String value) {
        setTgenabled(value);
        return this;
    }

    @Override
    @NotNull
    public PgTriggerRecord value8(@NotNull Boolean value) {
        setTgisinternal(value);
        return this;
    }

    @Override
    @NotNull
    public PgTriggerRecord value9(@NotNull Long value) {
        setTgconstrrelid(value);
        return this;
    }

    @Override
    @NotNull
    public PgTriggerRecord value10(@NotNull Long value) {
        setTgconstrindid(value);
        return this;
    }

    @Override
    @NotNull
    public PgTriggerRecord value11(@NotNull Long value) {
        setTgconstraint(value);
        return this;
    }

    @Override
    @NotNull
    public PgTriggerRecord value12(@NotNull Boolean value) {
        setTgdeferrable(value);
        return this;
    }

    @Override
    @NotNull
    public PgTriggerRecord value13(@NotNull Boolean value) {
        setTginitdeferred(value);
        return this;
    }

    @Override
    @NotNull
    public PgTriggerRecord value14(@NotNull Short value) {
        setTgnargs(value);
        return this;
    }

    @Override
    @NotNull
    public PgTriggerRecord value15(@NotNull Object[] value) {
        setTgattr(value);
        return this;
    }

    @Override
    @NotNull
    public PgTriggerRecord value16(@NotNull byte[] value) {
        setTgargs(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    @NotNull
    public PgTriggerRecord value17(@Nullable Object value) {
        setTgqual(value);
        return this;
    }

    @Override
    @NotNull
    public PgTriggerRecord value18(@Nullable String value) {
        setTgoldtable(value);
        return this;
    }

    @Override
    @NotNull
    public PgTriggerRecord value19(@Nullable String value) {
        setTgnewtable(value);
        return this;
    }

    @Override
    @NotNull
    public PgTriggerRecord values(@NotNull Long value1, @NotNull Long value2, @NotNull Long value3, @NotNull String value4, @NotNull Long value5, @NotNull Short value6, @NotNull String value7, @NotNull Boolean value8, @NotNull Long value9, @NotNull Long value10, @NotNull Long value11, @NotNull Boolean value12, @NotNull Boolean value13, @NotNull Short value14, @NotNull Object[] value15, @NotNull byte[] value16, @Nullable Object value17, @Nullable String value18, @Nullable String value19) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgTriggerRecord
     */
    public PgTriggerRecord() {
        super(PgTrigger.PG_TRIGGER);
    }

    /**
     * Create a detached, initialised PgTriggerRecord
     */
    @ConstructorProperties({ "oid", "tgrelid", "tgparentid", "tgname", "tgfoid", "tgtype", "tgenabled", "tgisinternal", "tgconstrrelid", "tgconstrindid", "tgconstraint", "tgdeferrable", "tginitdeferred", "tgnargs", "tgattr", "tgargs", "tgqual", "tgoldtable", "tgnewtable" })
    public PgTriggerRecord(@NotNull Long oid, @NotNull Long tgrelid, @NotNull Long tgparentid, @NotNull String tgname, @NotNull Long tgfoid, @NotNull Short tgtype, @NotNull String tgenabled, @NotNull Boolean tgisinternal, @NotNull Long tgconstrrelid, @NotNull Long tgconstrindid, @NotNull Long tgconstraint, @NotNull Boolean tgdeferrable, @NotNull Boolean tginitdeferred, @NotNull Short tgnargs, @NotNull Object[] tgattr, @NotNull byte[] tgargs, @Nullable Object tgqual, @Nullable String tgoldtable, @Nullable String tgnewtable) {
        super(PgTrigger.PG_TRIGGER);

        setOid(oid);
        setTgrelid(tgrelid);
        setTgparentid(tgparentid);
        setTgname(tgname);
        setTgfoid(tgfoid);
        setTgtype(tgtype);
        setTgenabled(tgenabled);
        setTgisinternal(tgisinternal);
        setTgconstrrelid(tgconstrrelid);
        setTgconstrindid(tgconstrindid);
        setTgconstraint(tgconstraint);
        setTgdeferrable(tgdeferrable);
        setTginitdeferred(tginitdeferred);
        setTgnargs(tgnargs);
        setTgattr(tgattr);
        setTgargs(tgargs);
        setTgqual(tgqual);
        setTgoldtable(tgoldtable);
        setTgnewtable(tgnewtable);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PgTriggerRecord
     */
    public PgTriggerRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgTrigger value) {
        super(PgTrigger.PG_TRIGGER);

        if (value != null) {
            setOid(value.getOid());
            setTgrelid(value.getTgrelid());
            setTgparentid(value.getTgparentid());
            setTgname(value.getTgname());
            setTgfoid(value.getTgfoid());
            setTgtype(value.getTgtype());
            setTgenabled(value.getTgenabled());
            setTgisinternal(value.getTgisinternal());
            setTgconstrrelid(value.getTgconstrrelid());
            setTgconstrindid(value.getTgconstrindid());
            setTgconstraint(value.getTgconstraint());
            setTgdeferrable(value.getTgdeferrable());
            setTginitdeferred(value.getTginitdeferred());
            setTgnargs(value.getTgnargs());
            setTgattr(value.getTgattr());
            setTgargs(value.getTgargs());
            setTgqual(value.getTgqual());
            setTgoldtable(value.getTgoldtable());
            setTgnewtable(value.getTgnewtable());
            resetChangedOnNotNull();
        }
    }
}
