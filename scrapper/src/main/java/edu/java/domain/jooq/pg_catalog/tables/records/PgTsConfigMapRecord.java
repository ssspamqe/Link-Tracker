/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgTsConfigMap;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgTsConfigMapRecord extends UpdatableRecordImpl<PgTsConfigMapRecord> implements Record4<Long, Integer, Integer, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_ts_config_map.mapcfg</code>.
     */
    public void setMapcfg(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_ts_config_map.mapcfg</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getMapcfg() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_ts_config_map.maptokentype</code>.
     */
    public void setMaptokentype(@NotNull Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_ts_config_map.maptokentype</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getMaptokentype() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_ts_config_map.mapseqno</code>.
     */
    public void setMapseqno(@NotNull Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_ts_config_map.mapseqno</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getMapseqno() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_ts_config_map.mapdict</code>.
     */
    public void setMapdict(@NotNull Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_ts_config_map.mapdict</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getMapdict() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record3<Long, Integer, Integer> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row4<Long, Integer, Integer, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row4<Long, Integer, Integer, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return PgTsConfigMap.PG_TS_CONFIG_MAP.MAPCFG;
    }

    @Override
    @NotNull
    public Field<Integer> field2() {
        return PgTsConfigMap.PG_TS_CONFIG_MAP.MAPTOKENTYPE;
    }

    @Override
    @NotNull
    public Field<Integer> field3() {
        return PgTsConfigMap.PG_TS_CONFIG_MAP.MAPSEQNO;
    }

    @Override
    @NotNull
    public Field<Long> field4() {
        return PgTsConfigMap.PG_TS_CONFIG_MAP.MAPDICT;
    }

    @Override
    @NotNull
    public Long component1() {
        return getMapcfg();
    }

    @Override
    @NotNull
    public Integer component2() {
        return getMaptokentype();
    }

    @Override
    @NotNull
    public Integer component3() {
        return getMapseqno();
    }

    @Override
    @NotNull
    public Long component4() {
        return getMapdict();
    }

    @Override
    @NotNull
    public Long value1() {
        return getMapcfg();
    }

    @Override
    @NotNull
    public Integer value2() {
        return getMaptokentype();
    }

    @Override
    @NotNull
    public Integer value3() {
        return getMapseqno();
    }

    @Override
    @NotNull
    public Long value4() {
        return getMapdict();
    }

    @Override
    @NotNull
    public PgTsConfigMapRecord value1(@NotNull Long value) {
        setMapcfg(value);
        return this;
    }

    @Override
    @NotNull
    public PgTsConfigMapRecord value2(@NotNull Integer value) {
        setMaptokentype(value);
        return this;
    }

    @Override
    @NotNull
    public PgTsConfigMapRecord value3(@NotNull Integer value) {
        setMapseqno(value);
        return this;
    }

    @Override
    @NotNull
    public PgTsConfigMapRecord value4(@NotNull Long value) {
        setMapdict(value);
        return this;
    }

    @Override
    @NotNull
    public PgTsConfigMapRecord values(@NotNull Long value1, @NotNull Integer value2, @NotNull Integer value3, @NotNull Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgTsConfigMapRecord
     */
    public PgTsConfigMapRecord() {
        super(PgTsConfigMap.PG_TS_CONFIG_MAP);
    }

    /**
     * Create a detached, initialised PgTsConfigMapRecord
     */
    @ConstructorProperties({ "mapcfg", "maptokentype", "mapseqno", "mapdict" })
    public PgTsConfigMapRecord(@NotNull Long mapcfg, @NotNull Integer maptokentype, @NotNull Integer mapseqno, @NotNull Long mapdict) {
        super(PgTsConfigMap.PG_TS_CONFIG_MAP);

        setMapcfg(mapcfg);
        setMaptokentype(maptokentype);
        setMapseqno(mapseqno);
        setMapdict(mapdict);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PgTsConfigMapRecord
     */
    public PgTsConfigMapRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgTsConfigMap value) {
        super(PgTsConfigMap.PG_TS_CONFIG_MAP);

        if (value != null) {
            setMapcfg(value.getMapcfg());
            setMaptokentype(value.getMaptokentype());
            setMapseqno(value.getMapseqno());
            setMapdict(value.getMapdict());
            resetChangedOnNotNull();
        }
    }
}
