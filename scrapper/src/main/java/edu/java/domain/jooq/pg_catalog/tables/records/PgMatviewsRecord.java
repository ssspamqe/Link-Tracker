/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgMatviews;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgMatviewsRecord extends TableRecordImpl<PgMatviewsRecord> implements Record7<String, String, String, String, Boolean, Boolean, String> {

    private static final long serialVersionUID = 1L;

    public void setSchemaname(@Nullable String value) {
        set(0, value);
    }

    @Nullable
    public String getSchemaname() {
        return (String) get(0);
    }

    public void setMatviewname(@Nullable String value) {
        set(1, value);
    }

    @Nullable
    public String getMatviewname() {
        return (String) get(1);
    }

    public void setMatviewowner(@Nullable String value) {
        set(2, value);
    }

    @Nullable
    public String getMatviewowner() {
        return (String) get(2);
    }

    public void setTablespace(@Nullable String value) {
        set(3, value);
    }

    @Nullable
    public String getTablespace() {
        return (String) get(3);
    }

    public void setHasindexes(@Nullable Boolean value) {
        set(4, value);
    }

    @Nullable
    public Boolean getHasindexes() {
        return (Boolean) get(4);
    }

    public void setIspopulated(@Nullable Boolean value) {
        set(5, value);
    }

    @Nullable
    public Boolean getIspopulated() {
        return (Boolean) get(5);
    }

    public void setDefinition(@Nullable String value) {
        set(6, value);
    }

    @Nullable
    public String getDefinition() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row7<String, String, String, String, Boolean, Boolean, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row7<String, String, String, String, Boolean, Boolean, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return PgMatviews.PG_MATVIEWS.SCHEMANAME;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return PgMatviews.PG_MATVIEWS.MATVIEWNAME;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return PgMatviews.PG_MATVIEWS.MATVIEWOWNER;
    }

    @Override
    @NotNull
    public Field<String> field4() {
        return PgMatviews.PG_MATVIEWS.TABLESPACE;
    }

    @Override
    @NotNull
    public Field<Boolean> field5() {
        return PgMatviews.PG_MATVIEWS.HASINDEXES;
    }

    @Override
    @NotNull
    public Field<Boolean> field6() {
        return PgMatviews.PG_MATVIEWS.ISPOPULATED;
    }

    @Override
    @NotNull
    public Field<String> field7() {
        return PgMatviews.PG_MATVIEWS.DEFINITION;
    }

    @Override
    @Nullable
    public String component1() {
        return getSchemaname();
    }

    @Override
    @Nullable
    public String component2() {
        return getMatviewname();
    }

    @Override
    @Nullable
    public String component3() {
        return getMatviewowner();
    }

    @Override
    @Nullable
    public String component4() {
        return getTablespace();
    }

    @Override
    @Nullable
    public Boolean component5() {
        return getHasindexes();
    }

    @Override
    @Nullable
    public Boolean component6() {
        return getIspopulated();
    }

    @Override
    @Nullable
    public String component7() {
        return getDefinition();
    }

    @Override
    @Nullable
    public String value1() {
        return getSchemaname();
    }

    @Override
    @Nullable
    public String value2() {
        return getMatviewname();
    }

    @Override
    @Nullable
    public String value3() {
        return getMatviewowner();
    }

    @Override
    @Nullable
    public String value4() {
        return getTablespace();
    }

    @Override
    @Nullable
    public Boolean value5() {
        return getHasindexes();
    }

    @Override
    @Nullable
    public Boolean value6() {
        return getIspopulated();
    }

    @Override
    @Nullable
    public String value7() {
        return getDefinition();
    }

    @Override
    @NotNull
    public PgMatviewsRecord value1(@Nullable String value) {
        setSchemaname(value);
        return this;
    }

    @Override
    @NotNull
    public PgMatviewsRecord value2(@Nullable String value) {
        setMatviewname(value);
        return this;
    }

    @Override
    @NotNull
    public PgMatviewsRecord value3(@Nullable String value) {
        setMatviewowner(value);
        return this;
    }

    @Override
    @NotNull
    public PgMatviewsRecord value4(@Nullable String value) {
        setTablespace(value);
        return this;
    }

    @Override
    @NotNull
    public PgMatviewsRecord value5(@Nullable Boolean value) {
        setHasindexes(value);
        return this;
    }

    @Override
    @NotNull
    public PgMatviewsRecord value6(@Nullable Boolean value) {
        setIspopulated(value);
        return this;
    }

    @Override
    @NotNull
    public PgMatviewsRecord value7(@Nullable String value) {
        setDefinition(value);
        return this;
    }

    @Override
    @NotNull
    public PgMatviewsRecord values(@Nullable String value1, @Nullable String value2, @Nullable String value3, @Nullable String value4, @Nullable Boolean value5, @Nullable Boolean value6, @Nullable String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public PgMatviewsRecord() {
        super(PgMatviews.PG_MATVIEWS);
    }

    @ConstructorProperties({ "schemaname", "matviewname", "matviewowner", "tablespace", "hasindexes", "ispopulated", "definition" })
    public PgMatviewsRecord(@Nullable String schemaname, @Nullable String matviewname, @Nullable String matviewowner, @Nullable String tablespace, @Nullable Boolean hasindexes, @Nullable Boolean ispopulated, @Nullable String definition) {
        super(PgMatviews.PG_MATVIEWS);

        setSchemaname(schemaname);
        setMatviewname(matviewname);
        setMatviewowner(matviewowner);
        setTablespace(tablespace);
        setHasindexes(hasindexes);
        setIspopulated(ispopulated);
        setDefinition(definition);
        resetChangedOnNotNull();
    }

    public PgMatviewsRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgMatviews value) {
        super(PgMatviews.PG_MATVIEWS);

        if (value != null) {
            setSchemaname(value.getSchemaname());
            setMatviewname(value.getMatviewname());
            setMatviewowner(value.getMatviewowner());
            setTablespace(value.getTablespace());
            setHasindexes(value.getHasindexes());
            setIspopulated(value.getIspopulated());
            setDefinition(value.getDefinition());
            resetChangedOnNotNull();
        }
    }
}
