/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatReplicationSlots implements Serializable {

    private static final long serialVersionUID = 1L;

    private String slotName;
    private Long spillTxns;
    private Long spillCount;
    private Long spillBytes;
    private Long streamTxns;
    private Long streamCount;
    private Long streamBytes;
    private Long totalTxns;
    private Long totalBytes;
    private OffsetDateTime statsReset;

    public PgStatReplicationSlots() {}

    public PgStatReplicationSlots(PgStatReplicationSlots value) {
        this.slotName = value.slotName;
        this.spillTxns = value.spillTxns;
        this.spillCount = value.spillCount;
        this.spillBytes = value.spillBytes;
        this.streamTxns = value.streamTxns;
        this.streamCount = value.streamCount;
        this.streamBytes = value.streamBytes;
        this.totalTxns = value.totalTxns;
        this.totalBytes = value.totalBytes;
        this.statsReset = value.statsReset;
    }

    @ConstructorProperties({ "slotName", "spillTxns", "spillCount", "spillBytes", "streamTxns", "streamCount", "streamBytes", "totalTxns", "totalBytes", "statsReset" })
    public PgStatReplicationSlots(
        @Nullable String slotName,
        @Nullable Long spillTxns,
        @Nullable Long spillCount,
        @Nullable Long spillBytes,
        @Nullable Long streamTxns,
        @Nullable Long streamCount,
        @Nullable Long streamBytes,
        @Nullable Long totalTxns,
        @Nullable Long totalBytes,
        @Nullable OffsetDateTime statsReset
    ) {
        this.slotName = slotName;
        this.spillTxns = spillTxns;
        this.spillCount = spillCount;
        this.spillBytes = spillBytes;
        this.streamTxns = streamTxns;
        this.streamCount = streamCount;
        this.streamBytes = streamBytes;
        this.totalTxns = totalTxns;
        this.totalBytes = totalBytes;
        this.statsReset = statsReset;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_replication_slots.slot_name</code>.
     */
    @Nullable
    public String getSlotName() {
        return this.slotName;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_replication_slots.slot_name</code>.
     */
    public void setSlotName(@Nullable String slotName) {
        this.slotName = slotName;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_replication_slots.spill_txns</code>.
     */
    @Nullable
    public Long getSpillTxns() {
        return this.spillTxns;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_replication_slots.spill_txns</code>.
     */
    public void setSpillTxns(@Nullable Long spillTxns) {
        this.spillTxns = spillTxns;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_replication_slots.spill_count</code>.
     */
    @Nullable
    public Long getSpillCount() {
        return this.spillCount;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_replication_slots.spill_count</code>.
     */
    public void setSpillCount(@Nullable Long spillCount) {
        this.spillCount = spillCount;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_replication_slots.spill_bytes</code>.
     */
    @Nullable
    public Long getSpillBytes() {
        return this.spillBytes;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_replication_slots.spill_bytes</code>.
     */
    public void setSpillBytes(@Nullable Long spillBytes) {
        this.spillBytes = spillBytes;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_replication_slots.stream_txns</code>.
     */
    @Nullable
    public Long getStreamTxns() {
        return this.streamTxns;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_replication_slots.stream_txns</code>.
     */
    public void setStreamTxns(@Nullable Long streamTxns) {
        this.streamTxns = streamTxns;
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_replication_slots.stream_count</code>.
     */
    @Nullable
    public Long getStreamCount() {
        return this.streamCount;
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_replication_slots.stream_count</code>.
     */
    public void setStreamCount(@Nullable Long streamCount) {
        this.streamCount = streamCount;
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_replication_slots.stream_bytes</code>.
     */
    @Nullable
    public Long getStreamBytes() {
        return this.streamBytes;
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_replication_slots.stream_bytes</code>.
     */
    public void setStreamBytes(@Nullable Long streamBytes) {
        this.streamBytes = streamBytes;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_replication_slots.total_txns</code>.
     */
    @Nullable
    public Long getTotalTxns() {
        return this.totalTxns;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_replication_slots.total_txns</code>.
     */
    public void setTotalTxns(@Nullable Long totalTxns) {
        this.totalTxns = totalTxns;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_replication_slots.total_bytes</code>.
     */
    @Nullable
    public Long getTotalBytes() {
        return this.totalBytes;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_replication_slots.total_bytes</code>.
     */
    public void setTotalBytes(@Nullable Long totalBytes) {
        this.totalBytes = totalBytes;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_replication_slots.stats_reset</code>.
     */
    @Nullable
    public OffsetDateTime getStatsReset() {
        return this.statsReset;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_replication_slots.stats_reset</code>.
     */
    public void setStatsReset(@Nullable OffsetDateTime statsReset) {
        this.statsReset = statsReset;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PgStatReplicationSlots other = (PgStatReplicationSlots) obj;
        if (this.slotName == null) {
            if (other.slotName != null)
                return false;
        }
        else if (!this.slotName.equals(other.slotName))
            return false;
        if (this.spillTxns == null) {
            if (other.spillTxns != null)
                return false;
        }
        else if (!this.spillTxns.equals(other.spillTxns))
            return false;
        if (this.spillCount == null) {
            if (other.spillCount != null)
                return false;
        }
        else if (!this.spillCount.equals(other.spillCount))
            return false;
        if (this.spillBytes == null) {
            if (other.spillBytes != null)
                return false;
        }
        else if (!this.spillBytes.equals(other.spillBytes))
            return false;
        if (this.streamTxns == null) {
            if (other.streamTxns != null)
                return false;
        }
        else if (!this.streamTxns.equals(other.streamTxns))
            return false;
        if (this.streamCount == null) {
            if (other.streamCount != null)
                return false;
        }
        else if (!this.streamCount.equals(other.streamCount))
            return false;
        if (this.streamBytes == null) {
            if (other.streamBytes != null)
                return false;
        }
        else if (!this.streamBytes.equals(other.streamBytes))
            return false;
        if (this.totalTxns == null) {
            if (other.totalTxns != null)
                return false;
        }
        else if (!this.totalTxns.equals(other.totalTxns))
            return false;
        if (this.totalBytes == null) {
            if (other.totalBytes != null)
                return false;
        }
        else if (!this.totalBytes.equals(other.totalBytes))
            return false;
        if (this.statsReset == null) {
            if (other.statsReset != null)
                return false;
        }
        else if (!this.statsReset.equals(other.statsReset))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.slotName == null) ? 0 : this.slotName.hashCode());
        result = prime * result + ((this.spillTxns == null) ? 0 : this.spillTxns.hashCode());
        result = prime * result + ((this.spillCount == null) ? 0 : this.spillCount.hashCode());
        result = prime * result + ((this.spillBytes == null) ? 0 : this.spillBytes.hashCode());
        result = prime * result + ((this.streamTxns == null) ? 0 : this.streamTxns.hashCode());
        result = prime * result + ((this.streamCount == null) ? 0 : this.streamCount.hashCode());
        result = prime * result + ((this.streamBytes == null) ? 0 : this.streamBytes.hashCode());
        result = prime * result + ((this.totalTxns == null) ? 0 : this.totalTxns.hashCode());
        result = prime * result + ((this.totalBytes == null) ? 0 : this.totalBytes.hashCode());
        result = prime * result + ((this.statsReset == null) ? 0 : this.statsReset.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PgStatReplicationSlots (");

        sb.append(slotName);
        sb.append(", ").append(spillTxns);
        sb.append(", ").append(spillCount);
        sb.append(", ").append(spillBytes);
        sb.append(", ").append(streamTxns);
        sb.append(", ").append(streamCount);
        sb.append(", ").append(streamBytes);
        sb.append(", ").append(totalTxns);
        sb.append(", ").append(totalBytes);
        sb.append(", ").append(statsReset);

        sb.append(")");
        return sb.toString();
    }
}
