/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgStatProgressBasebackup;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatProgressBasebackupRecord extends TableRecordImpl<PgStatProgressBasebackupRecord> implements Record6<Integer, String, Long, Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_stat_progress_basebackup.pid</code>.
     */
    public void setPid(@Nullable Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_progress_basebackup.pid</code>.
     */
    @Nullable
    public Integer getPid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_progress_basebackup.phase</code>.
     */
    public void setPhase(@Nullable String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_progress_basebackup.phase</code>.
     */
    @Nullable
    public String getPhase() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_basebackup.backup_total</code>.
     */
    public void setBackupTotal(@Nullable Long value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_basebackup.backup_total</code>.
     */
    @Nullable
    public Long getBackupTotal() {
        return (Long) get(2);
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_basebackup.backup_streamed</code>.
     */
    public void setBackupStreamed(@Nullable Long value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_basebackup.backup_streamed</code>.
     */
    @Nullable
    public Long getBackupStreamed() {
        return (Long) get(3);
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_basebackup.tablespaces_total</code>.
     */
    public void setTablespacesTotal(@Nullable Long value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_basebackup.tablespaces_total</code>.
     */
    @Nullable
    public Long getTablespacesTotal() {
        return (Long) get(4);
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_basebackup.tablespaces_streamed</code>.
     */
    public void setTablespacesStreamed(@Nullable Long value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_basebackup.tablespaces_streamed</code>.
     */
    @Nullable
    public Long getTablespacesStreamed() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row6<Integer, String, Long, Long, Long, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row6<Integer, String, Long, Long, Long, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Integer> field1() {
        return PgStatProgressBasebackup.PG_STAT_PROGRESS_BASEBACKUP.PID;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return PgStatProgressBasebackup.PG_STAT_PROGRESS_BASEBACKUP.PHASE;
    }

    @Override
    @NotNull
    public Field<Long> field3() {
        return PgStatProgressBasebackup.PG_STAT_PROGRESS_BASEBACKUP.BACKUP_TOTAL;
    }

    @Override
    @NotNull
    public Field<Long> field4() {
        return PgStatProgressBasebackup.PG_STAT_PROGRESS_BASEBACKUP.BACKUP_STREAMED;
    }

    @Override
    @NotNull
    public Field<Long> field5() {
        return PgStatProgressBasebackup.PG_STAT_PROGRESS_BASEBACKUP.TABLESPACES_TOTAL;
    }

    @Override
    @NotNull
    public Field<Long> field6() {
        return PgStatProgressBasebackup.PG_STAT_PROGRESS_BASEBACKUP.TABLESPACES_STREAMED;
    }

    @Override
    @Nullable
    public Integer component1() {
        return getPid();
    }

    @Override
    @Nullable
    public String component2() {
        return getPhase();
    }

    @Override
    @Nullable
    public Long component3() {
        return getBackupTotal();
    }

    @Override
    @Nullable
    public Long component4() {
        return getBackupStreamed();
    }

    @Override
    @Nullable
    public Long component5() {
        return getTablespacesTotal();
    }

    @Override
    @Nullable
    public Long component6() {
        return getTablespacesStreamed();
    }

    @Override
    @Nullable
    public Integer value1() {
        return getPid();
    }

    @Override
    @Nullable
    public String value2() {
        return getPhase();
    }

    @Override
    @Nullable
    public Long value3() {
        return getBackupTotal();
    }

    @Override
    @Nullable
    public Long value4() {
        return getBackupStreamed();
    }

    @Override
    @Nullable
    public Long value5() {
        return getTablespacesTotal();
    }

    @Override
    @Nullable
    public Long value6() {
        return getTablespacesStreamed();
    }

    @Override
    @NotNull
    public PgStatProgressBasebackupRecord value1(@Nullable Integer value) {
        setPid(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatProgressBasebackupRecord value2(@Nullable String value) {
        setPhase(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatProgressBasebackupRecord value3(@Nullable Long value) {
        setBackupTotal(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatProgressBasebackupRecord value4(@Nullable Long value) {
        setBackupStreamed(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatProgressBasebackupRecord value5(@Nullable Long value) {
        setTablespacesTotal(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatProgressBasebackupRecord value6(@Nullable Long value) {
        setTablespacesStreamed(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatProgressBasebackupRecord values(@Nullable Integer value1, @Nullable String value2, @Nullable Long value3, @Nullable Long value4, @Nullable Long value5, @Nullable Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgStatProgressBasebackupRecord
     */
    public PgStatProgressBasebackupRecord() {
        super(PgStatProgressBasebackup.PG_STAT_PROGRESS_BASEBACKUP);
    }

    /**
     * Create a detached, initialised PgStatProgressBasebackupRecord
     */
    @ConstructorProperties({ "pid", "phase", "backupTotal", "backupStreamed", "tablespacesTotal", "tablespacesStreamed" })
    public PgStatProgressBasebackupRecord(@Nullable Integer pid, @Nullable String phase, @Nullable Long backupTotal, @Nullable Long backupStreamed, @Nullable Long tablespacesTotal, @Nullable Long tablespacesStreamed) {
        super(PgStatProgressBasebackup.PG_STAT_PROGRESS_BASEBACKUP);

        setPid(pid);
        setPhase(phase);
        setBackupTotal(backupTotal);
        setBackupStreamed(backupStreamed);
        setTablespacesTotal(tablespacesTotal);
        setTablespacesStreamed(tablespacesStreamed);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PgStatProgressBasebackupRecord
     */
    public PgStatProgressBasebackupRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgStatProgressBasebackup value) {
        super(PgStatProgressBasebackup.PG_STAT_PROGRESS_BASEBACKUP);

        if (value != null) {
            setPid(value.getPid());
            setPhase(value.getPhase());
            setBackupTotal(value.getBackupTotal());
            setBackupStreamed(value.getBackupStreamed());
            setTablespacesTotal(value.getTablespacesTotal());
            setTablespacesStreamed(value.getTablespacesStreamed());
            resetChangedOnNotNull();
        }
    }
}
