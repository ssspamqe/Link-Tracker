/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgStatArchiver;

import java.beans.ConstructorProperties;
import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatArchiverRecord extends TableRecordImpl<PgStatArchiverRecord> implements Record7<Long, String, OffsetDateTime, Long, String, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_stat_archiver.archived_count</code>.
     */
    public void setArchivedCount(@Nullable Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_archiver.archived_count</code>.
     */
    @Nullable
    public Long getArchivedCount() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_archiver.last_archived_wal</code>.
     */
    public void setLastArchivedWal(@Nullable String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_archiver.last_archived_wal</code>.
     */
    @Nullable
    public String getLastArchivedWal() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_archiver.last_archived_time</code>.
     */
    public void setLastArchivedTime(@Nullable OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_archiver.last_archived_time</code>.
     */
    @Nullable
    public OffsetDateTime getLastArchivedTime() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_archiver.failed_count</code>.
     */
    public void setFailedCount(@Nullable Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_archiver.failed_count</code>.
     */
    @Nullable
    public Long getFailedCount() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_archiver.last_failed_wal</code>.
     */
    public void setLastFailedWal(@Nullable String value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_archiver.last_failed_wal</code>.
     */
    @Nullable
    public String getLastFailedWal() {
        return (String) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_archiver.last_failed_time</code>.
     */
    public void setLastFailedTime(@Nullable OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_archiver.last_failed_time</code>.
     */
    @Nullable
    public OffsetDateTime getLastFailedTime() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_archiver.stats_reset</code>.
     */
    public void setStatsReset(@Nullable OffsetDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_archiver.stats_reset</code>.
     */
    @Nullable
    public OffsetDateTime getStatsReset() {
        return (OffsetDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row7<Long, String, OffsetDateTime, Long, String, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row7<Long, String, OffsetDateTime, Long, String, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return PgStatArchiver.PG_STAT_ARCHIVER.ARCHIVED_COUNT;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return PgStatArchiver.PG_STAT_ARCHIVER.LAST_ARCHIVED_WAL;
    }

    @Override
    @NotNull
    public Field<OffsetDateTime> field3() {
        return PgStatArchiver.PG_STAT_ARCHIVER.LAST_ARCHIVED_TIME;
    }

    @Override
    @NotNull
    public Field<Long> field4() {
        return PgStatArchiver.PG_STAT_ARCHIVER.FAILED_COUNT;
    }

    @Override
    @NotNull
    public Field<String> field5() {
        return PgStatArchiver.PG_STAT_ARCHIVER.LAST_FAILED_WAL;
    }

    @Override
    @NotNull
    public Field<OffsetDateTime> field6() {
        return PgStatArchiver.PG_STAT_ARCHIVER.LAST_FAILED_TIME;
    }

    @Override
    @NotNull
    public Field<OffsetDateTime> field7() {
        return PgStatArchiver.PG_STAT_ARCHIVER.STATS_RESET;
    }

    @Override
    @Nullable
    public Long component1() {
        return getArchivedCount();
    }

    @Override
    @Nullable
    public String component2() {
        return getLastArchivedWal();
    }

    @Override
    @Nullable
    public OffsetDateTime component3() {
        return getLastArchivedTime();
    }

    @Override
    @Nullable
    public Long component4() {
        return getFailedCount();
    }

    @Override
    @Nullable
    public String component5() {
        return getLastFailedWal();
    }

    @Override
    @Nullable
    public OffsetDateTime component6() {
        return getLastFailedTime();
    }

    @Override
    @Nullable
    public OffsetDateTime component7() {
        return getStatsReset();
    }

    @Override
    @Nullable
    public Long value1() {
        return getArchivedCount();
    }

    @Override
    @Nullable
    public String value2() {
        return getLastArchivedWal();
    }

    @Override
    @Nullable
    public OffsetDateTime value3() {
        return getLastArchivedTime();
    }

    @Override
    @Nullable
    public Long value4() {
        return getFailedCount();
    }

    @Override
    @Nullable
    public String value5() {
        return getLastFailedWal();
    }

    @Override
    @Nullable
    public OffsetDateTime value6() {
        return getLastFailedTime();
    }

    @Override
    @Nullable
    public OffsetDateTime value7() {
        return getStatsReset();
    }

    @Override
    @NotNull
    public PgStatArchiverRecord value1(@Nullable Long value) {
        setArchivedCount(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatArchiverRecord value2(@Nullable String value) {
        setLastArchivedWal(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatArchiverRecord value3(@Nullable OffsetDateTime value) {
        setLastArchivedTime(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatArchiverRecord value4(@Nullable Long value) {
        setFailedCount(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatArchiverRecord value5(@Nullable String value) {
        setLastFailedWal(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatArchiverRecord value6(@Nullable OffsetDateTime value) {
        setLastFailedTime(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatArchiverRecord value7(@Nullable OffsetDateTime value) {
        setStatsReset(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatArchiverRecord values(@Nullable Long value1, @Nullable String value2, @Nullable OffsetDateTime value3, @Nullable Long value4, @Nullable String value5, @Nullable OffsetDateTime value6, @Nullable OffsetDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgStatArchiverRecord
     */
    public PgStatArchiverRecord() {
        super(PgStatArchiver.PG_STAT_ARCHIVER);
    }

    /**
     * Create a detached, initialised PgStatArchiverRecord
     */
    @ConstructorProperties({ "archivedCount", "lastArchivedWal", "lastArchivedTime", "failedCount", "lastFailedWal", "lastFailedTime", "statsReset" })
    public PgStatArchiverRecord(@Nullable Long archivedCount, @Nullable String lastArchivedWal, @Nullable OffsetDateTime lastArchivedTime, @Nullable Long failedCount, @Nullable String lastFailedWal, @Nullable OffsetDateTime lastFailedTime, @Nullable OffsetDateTime statsReset) {
        super(PgStatArchiver.PG_STAT_ARCHIVER);

        setArchivedCount(archivedCount);
        setLastArchivedWal(lastArchivedWal);
        setLastArchivedTime(lastArchivedTime);
        setFailedCount(failedCount);
        setLastFailedWal(lastFailedWal);
        setLastFailedTime(lastFailedTime);
        setStatsReset(statsReset);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PgStatArchiverRecord
     */
    public PgStatArchiverRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgStatArchiver value) {
        super(PgStatArchiver.PG_STAT_ARCHIVER);

        if (value != null) {
            setArchivedCount(value.getArchivedCount());
            setLastArchivedWal(value.getLastArchivedWal());
            setLastArchivedTime(value.getLastArchivedTime());
            setFailedCount(value.getFailedCount());
            setLastFailedWal(value.getLastFailedWal());
            setLastFailedTime(value.getLastFailedTime());
            setStatsReset(value.getStatsReset());
            resetChangedOnNotNull();
        }
    }
}
