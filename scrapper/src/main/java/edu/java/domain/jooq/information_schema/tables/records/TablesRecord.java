/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.information_schema.tables.records;


import edu.java.domain.jooq.information_schema.tables.Tables;

import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TablesRecord extends TableRecordImpl<TablesRecord> implements Record12<String, String, String, String, String, String, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>information_schema.tables.table_catalog</code>.
     */
    public void setTableCatalog(@Nullable String value) {
        set(0, value);
    }

    /**
     * Getter for <code>information_schema.tables.table_catalog</code>.
     */
    @Nullable
    public String getTableCatalog() {
        return (String) get(0);
    }

    /**
     * Setter for <code>information_schema.tables.table_schema</code>.
     */
    public void setTableSchema(@Nullable String value) {
        set(1, value);
    }

    /**
     * Getter for <code>information_schema.tables.table_schema</code>.
     */
    @Nullable
    public String getTableSchema() {
        return (String) get(1);
    }

    /**
     * Setter for <code>information_schema.tables.table_name</code>.
     */
    public void setTableName(@Nullable String value) {
        set(2, value);
    }

    /**
     * Getter for <code>information_schema.tables.table_name</code>.
     */
    @Nullable
    public String getTableName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>information_schema.tables.table_type</code>.
     */
    public void setTableType(@Nullable String value) {
        set(3, value);
    }

    /**
     * Getter for <code>information_schema.tables.table_type</code>.
     */
    @Nullable
    public String getTableType() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>information_schema.tables.self_referencing_column_name</code>.
     */
    public void setSelfReferencingColumnName(@Nullable String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>information_schema.tables.self_referencing_column_name</code>.
     */
    @Nullable
    public String getSelfReferencingColumnName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>information_schema.tables.reference_generation</code>.
     */
    public void setReferenceGeneration(@Nullable String value) {
        set(5, value);
    }

    /**
     * Getter for <code>information_schema.tables.reference_generation</code>.
     */
    @Nullable
    public String getReferenceGeneration() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>information_schema.tables.user_defined_type_catalog</code>.
     */
    public void setUserDefinedTypeCatalog(@Nullable String value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>information_schema.tables.user_defined_type_catalog</code>.
     */
    @Nullable
    public String getUserDefinedTypeCatalog() {
        return (String) get(6);
    }

    /**
     * Setter for
     * <code>information_schema.tables.user_defined_type_schema</code>.
     */
    public void setUserDefinedTypeSchema(@Nullable String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>information_schema.tables.user_defined_type_schema</code>.
     */
    @Nullable
    public String getUserDefinedTypeSchema() {
        return (String) get(7);
    }

    /**
     * Setter for <code>information_schema.tables.user_defined_type_name</code>.
     */
    public void setUserDefinedTypeName(@Nullable String value) {
        set(8, value);
    }

    /**
     * Getter for <code>information_schema.tables.user_defined_type_name</code>.
     */
    @Nullable
    public String getUserDefinedTypeName() {
        return (String) get(8);
    }

    /**
     * Setter for <code>information_schema.tables.is_insertable_into</code>.
     */
    public void setIsInsertableInto(@Nullable String value) {
        set(9, value);
    }

    /**
     * Getter for <code>information_schema.tables.is_insertable_into</code>.
     */
    @Size(max = 3)
    @Nullable
    public String getIsInsertableInto() {
        return (String) get(9);
    }

    /**
     * Setter for <code>information_schema.tables.is_typed</code>.
     */
    public void setIsTyped(@Nullable String value) {
        set(10, value);
    }

    /**
     * Getter for <code>information_schema.tables.is_typed</code>.
     */
    @Size(max = 3)
    @Nullable
    public String getIsTyped() {
        return (String) get(10);
    }

    /**
     * Setter for <code>information_schema.tables.commit_action</code>.
     */
    public void setCommitAction(@Nullable String value) {
        set(11, value);
    }

    /**
     * Getter for <code>information_schema.tables.commit_action</code>.
     */
    @Nullable
    public String getCommitAction() {
        return (String) get(11);
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row12<String, String, String, String, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row12<String, String, String, String, String, String, String, String, String, String, String, String> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return Tables.TABLES.TABLE_CATALOG;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return Tables.TABLES.TABLE_SCHEMA;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return Tables.TABLES.TABLE_NAME;
    }

    @Override
    @NotNull
    public Field<String> field4() {
        return Tables.TABLES.TABLE_TYPE;
    }

    @Override
    @NotNull
    public Field<String> field5() {
        return Tables.TABLES.SELF_REFERENCING_COLUMN_NAME;
    }

    @Override
    @NotNull
    public Field<String> field6() {
        return Tables.TABLES.REFERENCE_GENERATION;
    }

    @Override
    @NotNull
    public Field<String> field7() {
        return Tables.TABLES.USER_DEFINED_TYPE_CATALOG;
    }

    @Override
    @NotNull
    public Field<String> field8() {
        return Tables.TABLES.USER_DEFINED_TYPE_SCHEMA;
    }

    @Override
    @NotNull
    public Field<String> field9() {
        return Tables.TABLES.USER_DEFINED_TYPE_NAME;
    }

    @Override
    @NotNull
    public Field<String> field10() {
        return Tables.TABLES.IS_INSERTABLE_INTO;
    }

    @Override
    @NotNull
    public Field<String> field11() {
        return Tables.TABLES.IS_TYPED;
    }

    @Override
    @NotNull
    public Field<String> field12() {
        return Tables.TABLES.COMMIT_ACTION;
    }

    @Override
    @Nullable
    public String component1() {
        return getTableCatalog();
    }

    @Override
    @Nullable
    public String component2() {
        return getTableSchema();
    }

    @Override
    @Nullable
    public String component3() {
        return getTableName();
    }

    @Override
    @Nullable
    public String component4() {
        return getTableType();
    }

    @Override
    @Nullable
    public String component5() {
        return getSelfReferencingColumnName();
    }

    @Override
    @Nullable
    public String component6() {
        return getReferenceGeneration();
    }

    @Override
    @Nullable
    public String component7() {
        return getUserDefinedTypeCatalog();
    }

    @Override
    @Nullable
    public String component8() {
        return getUserDefinedTypeSchema();
    }

    @Override
    @Nullable
    public String component9() {
        return getUserDefinedTypeName();
    }

    @Override
    @Nullable
    public String component10() {
        return getIsInsertableInto();
    }

    @Override
    @Nullable
    public String component11() {
        return getIsTyped();
    }

    @Override
    @Nullable
    public String component12() {
        return getCommitAction();
    }

    @Override
    @Nullable
    public String value1() {
        return getTableCatalog();
    }

    @Override
    @Nullable
    public String value2() {
        return getTableSchema();
    }

    @Override
    @Nullable
    public String value3() {
        return getTableName();
    }

    @Override
    @Nullable
    public String value4() {
        return getTableType();
    }

    @Override
    @Nullable
    public String value5() {
        return getSelfReferencingColumnName();
    }

    @Override
    @Nullable
    public String value6() {
        return getReferenceGeneration();
    }

    @Override
    @Nullable
    public String value7() {
        return getUserDefinedTypeCatalog();
    }

    @Override
    @Nullable
    public String value8() {
        return getUserDefinedTypeSchema();
    }

    @Override
    @Nullable
    public String value9() {
        return getUserDefinedTypeName();
    }

    @Override
    @Nullable
    public String value10() {
        return getIsInsertableInto();
    }

    @Override
    @Nullable
    public String value11() {
        return getIsTyped();
    }

    @Override
    @Nullable
    public String value12() {
        return getCommitAction();
    }

    @Override
    @NotNull
    public TablesRecord value1(@Nullable String value) {
        setTableCatalog(value);
        return this;
    }

    @Override
    @NotNull
    public TablesRecord value2(@Nullable String value) {
        setTableSchema(value);
        return this;
    }

    @Override
    @NotNull
    public TablesRecord value3(@Nullable String value) {
        setTableName(value);
        return this;
    }

    @Override
    @NotNull
    public TablesRecord value4(@Nullable String value) {
        setTableType(value);
        return this;
    }

    @Override
    @NotNull
    public TablesRecord value5(@Nullable String value) {
        setSelfReferencingColumnName(value);
        return this;
    }

    @Override
    @NotNull
    public TablesRecord value6(@Nullable String value) {
        setReferenceGeneration(value);
        return this;
    }

    @Override
    @NotNull
    public TablesRecord value7(@Nullable String value) {
        setUserDefinedTypeCatalog(value);
        return this;
    }

    @Override
    @NotNull
    public TablesRecord value8(@Nullable String value) {
        setUserDefinedTypeSchema(value);
        return this;
    }

    @Override
    @NotNull
    public TablesRecord value9(@Nullable String value) {
        setUserDefinedTypeName(value);
        return this;
    }

    @Override
    @NotNull
    public TablesRecord value10(@Nullable String value) {
        setIsInsertableInto(value);
        return this;
    }

    @Override
    @NotNull
    public TablesRecord value11(@Nullable String value) {
        setIsTyped(value);
        return this;
    }

    @Override
    @NotNull
    public TablesRecord value12(@Nullable String value) {
        setCommitAction(value);
        return this;
    }

    @Override
    @NotNull
    public TablesRecord values(@Nullable String value1, @Nullable String value2, @Nullable String value3, @Nullable String value4, @Nullable String value5, @Nullable String value6, @Nullable String value7, @Nullable String value8, @Nullable String value9, @Nullable String value10, @Nullable String value11, @Nullable String value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TablesRecord
     */
    public TablesRecord() {
        super(Tables.TABLES);
    }

    /**
     * Create a detached, initialised TablesRecord
     */
    @ConstructorProperties({ "tableCatalog", "tableSchema", "tableName", "tableType", "selfReferencingColumnName", "referenceGeneration", "userDefinedTypeCatalog", "userDefinedTypeSchema", "userDefinedTypeName", "isInsertableInto", "isTyped", "commitAction" })
    public TablesRecord(@Nullable String tableCatalog, @Nullable String tableSchema, @Nullable String tableName, @Nullable String tableType, @Nullable String selfReferencingColumnName, @Nullable String referenceGeneration, @Nullable String userDefinedTypeCatalog, @Nullable String userDefinedTypeSchema, @Nullable String userDefinedTypeName, @Nullable String isInsertableInto, @Nullable String isTyped, @Nullable String commitAction) {
        super(Tables.TABLES);

        setTableCatalog(tableCatalog);
        setTableSchema(tableSchema);
        setTableName(tableName);
        setTableType(tableType);
        setSelfReferencingColumnName(selfReferencingColumnName);
        setReferenceGeneration(referenceGeneration);
        setUserDefinedTypeCatalog(userDefinedTypeCatalog);
        setUserDefinedTypeSchema(userDefinedTypeSchema);
        setUserDefinedTypeName(userDefinedTypeName);
        setIsInsertableInto(isInsertableInto);
        setIsTyped(isTyped);
        setCommitAction(commitAction);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TablesRecord
     */
    public TablesRecord(edu.java.domain.jooq.information_schema.tables.pojos.Tables value) {
        super(Tables.TABLES);

        if (value != null) {
            setTableCatalog(value.getTableCatalog());
            setTableSchema(value.getTableSchema());
            setTableName(value.getTableName());
            setTableType(value.getTableType());
            setSelfReferencingColumnName(value.getSelfReferencingColumnName());
            setReferenceGeneration(value.getReferenceGeneration());
            setUserDefinedTypeCatalog(value.getUserDefinedTypeCatalog());
            setUserDefinedTypeSchema(value.getUserDefinedTypeSchema());
            setUserDefinedTypeName(value.getUserDefinedTypeName());
            setIsInsertableInto(value.getIsInsertableInto());
            setIsTyped(value.getIsTyped());
            setCommitAction(value.getCommitAction());
            resetChangedOnNotNull();
        }
    }
}
