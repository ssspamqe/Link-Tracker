/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.routines;


import edu.java.domain.jooq.pg_catalog.PgCatalog;

import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatGetReplicationSlot extends AbstractRoutine<java.lang.Void> {

    private static final long serialVersionUID = 1L;

    public static final Parameter<String> SLOT_NAME1 = Internal.createParameter("slot_name", SQLDataType.CLOB, false, false);

    public static final Parameter<String> SLOT_NAME2 = Internal.createParameter("slot_name", SQLDataType.CLOB, false, false);

    public static final Parameter<Long> SPILL_TXNS = Internal.createParameter("spill_txns", SQLDataType.BIGINT, false, false);

    public static final Parameter<Long> SPILL_COUNT = Internal.createParameter("spill_count", SQLDataType.BIGINT, false, false);

    public static final Parameter<Long> SPILL_BYTES = Internal.createParameter("spill_bytes", SQLDataType.BIGINT, false, false);

    public static final Parameter<Long> STREAM_TXNS = Internal.createParameter("stream_txns", SQLDataType.BIGINT, false, false);

    public static final Parameter<Long> STREAM_COUNT = Internal.createParameter("stream_count", SQLDataType.BIGINT, false, false);

    public static final Parameter<Long> STREAM_BYTES = Internal.createParameter("stream_bytes", SQLDataType.BIGINT, false, false);

    public static final Parameter<Long> TOTAL_TXNS = Internal.createParameter("total_txns", SQLDataType.BIGINT, false, false);

    public static final Parameter<Long> TOTAL_BYTES = Internal.createParameter("total_bytes", SQLDataType.BIGINT, false, false);

    public static final Parameter<OffsetDateTime> STATS_RESET = Internal.createParameter("stats_reset", SQLDataType.TIMESTAMPWITHTIMEZONE(6), false, false);

    public PgStatGetReplicationSlot() {
        super("pg_stat_get_replication_slot", PgCatalog.PG_CATALOG);

        addInOutParameter(SLOT_NAME1);
        addInOutParameter(SLOT_NAME2);
        addOutParameter(SPILL_TXNS);
        addOutParameter(SPILL_COUNT);
        addOutParameter(SPILL_BYTES);
        addOutParameter(STREAM_TXNS);
        addOutParameter(STREAM_COUNT);
        addOutParameter(STREAM_BYTES);
        addOutParameter(TOTAL_TXNS);
        addOutParameter(TOTAL_BYTES);
        addOutParameter(STATS_RESET);
    }

    public void setSlotName1(String value) {
        setValue(SLOT_NAME1, value);
    }

    public String getSlotName1() {
        return get(SLOT_NAME1);
    }

    public String getSlotName2() {
        return get(SLOT_NAME2);
    }

    public Long getSpillTxns() {
        return get(SPILL_TXNS);
    }

    public Long getSpillCount() {
        return get(SPILL_COUNT);
    }

    public Long getSpillBytes() {
        return get(SPILL_BYTES);
    }

    public Long getStreamTxns() {
        return get(STREAM_TXNS);
    }

    public Long getStreamCount() {
        return get(STREAM_COUNT);
    }

    public Long getStreamBytes() {
        return get(STREAM_BYTES);
    }

    public Long getTotalTxns() {
        return get(TOTAL_TXNS);
    }

    public Long getTotalBytes() {
        return get(TOTAL_BYTES);
    }

    public OffsetDateTime getStatsReset() {
        return get(STATS_RESET);
    }
}
