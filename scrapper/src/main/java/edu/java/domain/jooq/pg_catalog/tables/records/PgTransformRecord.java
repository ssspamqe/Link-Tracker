/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgTransform;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgTransformRecord extends UpdatableRecordImpl<PgTransformRecord> implements Record5<Long, Long, Long, String, String> {

    private static final long serialVersionUID = 1L;

    public void setOid(@NotNull Long value) {
        set(0, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getOid() {
        return (Long) get(0);
    }

    public void setTrftype(@NotNull Long value) {
        set(1, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTrftype() {
        return (Long) get(1);
    }

    public void setTrflang(@NotNull Long value) {
        set(2, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTrflang() {
        return (Long) get(2);
    }

    public void setTrffromsql(@NotNull String value) {
        set(3, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getTrffromsql() {
        return (String) get(3);
    }

    public void setTrftosql(@NotNull String value) {
        set(4, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getTrftosql() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row5<Long, Long, Long, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row5<Long, Long, Long, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return PgTransform.PG_TRANSFORM.OID;
    }

    @Override
    @NotNull
    public Field<Long> field2() {
        return PgTransform.PG_TRANSFORM.TRFTYPE;
    }

    @Override
    @NotNull
    public Field<Long> field3() {
        return PgTransform.PG_TRANSFORM.TRFLANG;
    }

    @Override
    @NotNull
    public Field<String> field4() {
        return PgTransform.PG_TRANSFORM.TRFFROMSQL;
    }

    @Override
    @NotNull
    public Field<String> field5() {
        return PgTransform.PG_TRANSFORM.TRFTOSQL;
    }

    @Override
    @NotNull
    public Long component1() {
        return getOid();
    }

    @Override
    @NotNull
    public Long component2() {
        return getTrftype();
    }

    @Override
    @NotNull
    public Long component3() {
        return getTrflang();
    }

    @Override
    @NotNull
    public String component4() {
        return getTrffromsql();
    }

    @Override
    @NotNull
    public String component5() {
        return getTrftosql();
    }

    @Override
    @NotNull
    public Long value1() {
        return getOid();
    }

    @Override
    @NotNull
    public Long value2() {
        return getTrftype();
    }

    @Override
    @NotNull
    public Long value3() {
        return getTrflang();
    }

    @Override
    @NotNull
    public String value4() {
        return getTrffromsql();
    }

    @Override
    @NotNull
    public String value5() {
        return getTrftosql();
    }

    @Override
    @NotNull
    public PgTransformRecord value1(@NotNull Long value) {
        setOid(value);
        return this;
    }

    @Override
    @NotNull
    public PgTransformRecord value2(@NotNull Long value) {
        setTrftype(value);
        return this;
    }

    @Override
    @NotNull
    public PgTransformRecord value3(@NotNull Long value) {
        setTrflang(value);
        return this;
    }

    @Override
    @NotNull
    public PgTransformRecord value4(@NotNull String value) {
        setTrffromsql(value);
        return this;
    }

    @Override
    @NotNull
    public PgTransformRecord value5(@NotNull String value) {
        setTrftosql(value);
        return this;
    }

    @Override
    @NotNull
    public PgTransformRecord values(@NotNull Long value1, @NotNull Long value2, @NotNull Long value3, @NotNull String value4, @NotNull String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public PgTransformRecord() {
        super(PgTransform.PG_TRANSFORM);
    }

    @ConstructorProperties({ "oid", "trftype", "trflang", "trffromsql", "trftosql" })
    public PgTransformRecord(@NotNull Long oid, @NotNull Long trftype, @NotNull Long trflang, @NotNull String trffromsql, @NotNull String trftosql) {
        super(PgTransform.PG_TRANSFORM);

        setOid(oid);
        setTrftype(trftype);
        setTrflang(trflang);
        setTrffromsql(trffromsql);
        setTrftosql(trftosql);
        resetChangedOnNotNull();
    }

    public PgTransformRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgTransform value) {
        super(PgTransform.PG_TRANSFORM);

        if (value != null) {
            setOid(value.getOid());
            setTrftype(value.getTrftype());
            setTrflang(value.getTrflang());
            setTrffromsql(value.getTrffromsql());
            setTrftosql(value.getTrftosql());
            resetChangedOnNotNull();
        }
    }
}
