/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.TsStat;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TsStatRecord extends TableRecordImpl<TsStatRecord> implements Record3<String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    public void setWord(@Nullable String value) {
        set(0, value);
    }

    @Nullable
    public String getWord() {
        return (String) get(0);
    }

    public void setNdoc(@Nullable Integer value) {
        set(1, value);
    }

    @Nullable
    public Integer getNdoc() {
        return (Integer) get(1);
    }

    public void setNentry(@Nullable Integer value) {
        set(2, value);
    }

    @Nullable
    public Integer getNentry() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row3<String, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row3<String, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return TsStat.TS_STAT.WORD;
    }

    @Override
    @NotNull
    public Field<Integer> field2() {
        return TsStat.TS_STAT.NDOC;
    }

    @Override
    @NotNull
    public Field<Integer> field3() {
        return TsStat.TS_STAT.NENTRY;
    }

    @Override
    @Nullable
    public String component1() {
        return getWord();
    }

    @Override
    @Nullable
    public Integer component2() {
        return getNdoc();
    }

    @Override
    @Nullable
    public Integer component3() {
        return getNentry();
    }

    @Override
    @Nullable
    public String value1() {
        return getWord();
    }

    @Override
    @Nullable
    public Integer value2() {
        return getNdoc();
    }

    @Override
    @Nullable
    public Integer value3() {
        return getNentry();
    }

    @Override
    @NotNull
    public TsStatRecord value1(@Nullable String value) {
        setWord(value);
        return this;
    }

    @Override
    @NotNull
    public TsStatRecord value2(@Nullable Integer value) {
        setNdoc(value);
        return this;
    }

    @Override
    @NotNull
    public TsStatRecord value3(@Nullable Integer value) {
        setNentry(value);
        return this;
    }

    @Override
    @NotNull
    public TsStatRecord values(@Nullable String value1, @Nullable Integer value2, @Nullable Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public TsStatRecord() {
        super(TsStat.TS_STAT);
    }

    @ConstructorProperties({ "word", "ndoc", "nentry" })
    public TsStatRecord(@Nullable String word, @Nullable Integer ndoc, @Nullable Integer nentry) {
        super(TsStat.TS_STAT);

        setWord(word);
        setNdoc(ndoc);
        setNentry(nentry);
        resetChangedOnNotNull();
    }

    public TsStatRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.TsStat value) {
        super(TsStat.TS_STAT);

        if (value != null) {
            setWord(value.getWord());
            setNdoc(value.getNdoc());
            setNentry(value.getNentry());
            resetChangedOnNotNull();
        }
    }
}
