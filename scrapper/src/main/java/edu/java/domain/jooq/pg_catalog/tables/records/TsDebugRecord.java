/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.TsDebug;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TsDebugRecord extends TableRecordImpl<TsDebugRecord> implements Record6<String, String, String, Object[], Object, String[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.ts_debug.alias</code>.
     */
    public void setAlias(@Nullable String value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.ts_debug.alias</code>.
     */
    @Nullable
    public String getAlias() {
        return (String) get(0);
    }

    /**
     * Setter for <code>pg_catalog.ts_debug.description</code>.
     */
    public void setDescription(@Nullable String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.ts_debug.description</code>.
     */
    @Nullable
    public String getDescription() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pg_catalog.ts_debug.token</code>.
     */
    public void setToken(@Nullable String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.ts_debug.token</code>.
     */
    @Nullable
    public String getToken() {
        return (String) get(2);
    }

    /**
     * Setter for <code>pg_catalog.ts_debug.dictionaries</code>.
     */
    public void setDictionaries(@Nullable Object[] value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.ts_debug.dictionaries</code>.
     */
    @Nullable
    public Object[] getDictionaries() {
        return (Object[]) get(3);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setDictionary(@Nullable Object value) {
        set(4, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Nullable
    public Object getDictionary() {
        return get(4);
    }

    /**
     * Setter for <code>pg_catalog.ts_debug.lexemes</code>.
     */
    public void setLexemes(@Nullable String[] value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.ts_debug.lexemes</code>.
     */
    @Nullable
    public String[] getLexemes() {
        return (String[]) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row6<String, String, String, Object[], Object, String[]> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row6<String, String, String, Object[], Object, String[]> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return TsDebug.TS_DEBUG.ALIAS;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return TsDebug.TS_DEBUG.DESCRIPTION;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return TsDebug.TS_DEBUG.TOKEN;
    }

    @Override
    @NotNull
    public Field<Object[]> field4() {
        return TsDebug.TS_DEBUG.DICTIONARIES;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    @NotNull
    public Field<Object> field5() {
        return TsDebug.TS_DEBUG.DICTIONARY;
    }

    @Override
    @NotNull
    public Field<String[]> field6() {
        return TsDebug.TS_DEBUG.LEXEMES;
    }

    @Override
    @Nullable
    public String component1() {
        return getAlias();
    }

    @Override
    @Nullable
    public String component2() {
        return getDescription();
    }

    @Override
    @Nullable
    public String component3() {
        return getToken();
    }

    @Override
    @Nullable
    public Object[] component4() {
        return getDictionaries();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    @Nullable
    public Object component5() {
        return getDictionary();
    }

    @Override
    @Nullable
    public String[] component6() {
        return getLexemes();
    }

    @Override
    @Nullable
    public String value1() {
        return getAlias();
    }

    @Override
    @Nullable
    public String value2() {
        return getDescription();
    }

    @Override
    @Nullable
    public String value3() {
        return getToken();
    }

    @Override
    @Nullable
    public Object[] value4() {
        return getDictionaries();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    @Nullable
    public Object value5() {
        return getDictionary();
    }

    @Override
    @Nullable
    public String[] value6() {
        return getLexemes();
    }

    @Override
    @NotNull
    public TsDebugRecord value1(@Nullable String value) {
        setAlias(value);
        return this;
    }

    @Override
    @NotNull
    public TsDebugRecord value2(@Nullable String value) {
        setDescription(value);
        return this;
    }

    @Override
    @NotNull
    public TsDebugRecord value3(@Nullable String value) {
        setToken(value);
        return this;
    }

    @Override
    @NotNull
    public TsDebugRecord value4(@Nullable Object[] value) {
        setDictionaries(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    @NotNull
    public TsDebugRecord value5(@Nullable Object value) {
        setDictionary(value);
        return this;
    }

    @Override
    @NotNull
    public TsDebugRecord value6(@Nullable String[] value) {
        setLexemes(value);
        return this;
    }

    @Override
    @NotNull
    public TsDebugRecord values(@Nullable String value1, @Nullable String value2, @Nullable String value3, @Nullable Object[] value4, @Nullable Object value5, @Nullable String[] value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TsDebugRecord
     */
    public TsDebugRecord() {
        super(TsDebug.TS_DEBUG);
    }

    /**
     * Create a detached, initialised TsDebugRecord
     */
    @ConstructorProperties({ "alias", "description", "token", "dictionaries", "dictionary", "lexemes" })
    public TsDebugRecord(@Nullable String alias, @Nullable String description, @Nullable String token, @Nullable Object[] dictionaries, @Nullable Object dictionary, @Nullable String[] lexemes) {
        super(TsDebug.TS_DEBUG);

        setAlias(alias);
        setDescription(description);
        setToken(token);
        setDictionaries(dictionaries);
        setDictionary(dictionary);
        setLexemes(lexemes);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TsDebugRecord
     */
    public TsDebugRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.TsDebug value) {
        super(TsDebug.TS_DEBUG);

        if (value != null) {
            setAlias(value.getAlias());
            setDescription(value.getDescription());
            setToken(value.getToken());
            setDictionaries(value.getDictionaries());
            setDictionary(value.getDictionary());
            setLexemes(value.getLexemes());
            resetChangedOnNotNull();
        }
    }
}
