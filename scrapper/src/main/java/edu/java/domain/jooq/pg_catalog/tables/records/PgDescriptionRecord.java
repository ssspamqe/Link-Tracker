/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgDescription;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The table <code>pg_catalog.pg_description</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgDescriptionRecord extends UpdatableRecordImpl<PgDescriptionRecord> implements Record4<Long, Long, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_description.objoid</code>.
     */
    public void setObjoid(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_description.objoid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getObjoid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_description.classoid</code>.
     */
    public void setClassoid(@NotNull Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_description.classoid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getClassoid() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_description.objsubid</code>.
     */
    public void setObjsubid(@NotNull Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_description.objsubid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getObjsubid() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_description.description</code>.
     */
    public void setDescription(@NotNull String value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_description.description</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getDescription() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record3<Long, Long, Integer> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row4<Long, Long, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row4<Long, Long, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return PgDescription.PG_DESCRIPTION.OBJOID;
    }

    @Override
    @NotNull
    public Field<Long> field2() {
        return PgDescription.PG_DESCRIPTION.CLASSOID;
    }

    @Override
    @NotNull
    public Field<Integer> field3() {
        return PgDescription.PG_DESCRIPTION.OBJSUBID;
    }

    @Override
    @NotNull
    public Field<String> field4() {
        return PgDescription.PG_DESCRIPTION.DESCRIPTION;
    }

    @Override
    @NotNull
    public Long component1() {
        return getObjoid();
    }

    @Override
    @NotNull
    public Long component2() {
        return getClassoid();
    }

    @Override
    @NotNull
    public Integer component3() {
        return getObjsubid();
    }

    @Override
    @NotNull
    public String component4() {
        return getDescription();
    }

    @Override
    @NotNull
    public Long value1() {
        return getObjoid();
    }

    @Override
    @NotNull
    public Long value2() {
        return getClassoid();
    }

    @Override
    @NotNull
    public Integer value3() {
        return getObjsubid();
    }

    @Override
    @NotNull
    public String value4() {
        return getDescription();
    }

    @Override
    @NotNull
    public PgDescriptionRecord value1(@NotNull Long value) {
        setObjoid(value);
        return this;
    }

    @Override
    @NotNull
    public PgDescriptionRecord value2(@NotNull Long value) {
        setClassoid(value);
        return this;
    }

    @Override
    @NotNull
    public PgDescriptionRecord value3(@NotNull Integer value) {
        setObjsubid(value);
        return this;
    }

    @Override
    @NotNull
    public PgDescriptionRecord value4(@NotNull String value) {
        setDescription(value);
        return this;
    }

    @Override
    @NotNull
    public PgDescriptionRecord values(@NotNull Long value1, @NotNull Long value2, @NotNull Integer value3, @NotNull String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgDescriptionRecord
     */
    public PgDescriptionRecord() {
        super(PgDescription.PG_DESCRIPTION);
    }

    /**
     * Create a detached, initialised PgDescriptionRecord
     */
    @ConstructorProperties({ "objoid", "classoid", "objsubid", "description" })
    public PgDescriptionRecord(@NotNull Long objoid, @NotNull Long classoid, @NotNull Integer objsubid, @NotNull String description) {
        super(PgDescription.PG_DESCRIPTION);

        setObjoid(objoid);
        setClassoid(classoid);
        setObjsubid(objsubid);
        setDescription(description);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PgDescriptionRecord
     */
    public PgDescriptionRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgDescription value) {
        super(PgDescription.PG_DESCRIPTION);

        if (value != null) {
            setObjoid(value.getObjoid());
            setClassoid(value.getClassoid());
            setObjsubid(value.getObjsubid());
            setDescription(value.getDescription());
            resetChangedOnNotNull();
        }
    }
}
