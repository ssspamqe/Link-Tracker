/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.information_schema.tables.records;


import edu.java.domain.jooq.information_schema.tables.ReferentialConstraints;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.TableRecordImpl;


/**
 * The table <code>information_schema.referential_constraints</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ReferentialConstraintsRecord extends TableRecordImpl<ReferentialConstraintsRecord> implements Record9<String, String, String, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>information_schema.referential_constraints.constraint_catalog</code>.
     */
    public void setConstraintCatalog(@Nullable String value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>information_schema.referential_constraints.constraint_catalog</code>.
     */
    @Nullable
    public String getConstraintCatalog() {
        return (String) get(0);
    }

    /**
     * Setter for
     * <code>information_schema.referential_constraints.constraint_schema</code>.
     */
    public void setConstraintSchema(@Nullable String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>information_schema.referential_constraints.constraint_schema</code>.
     */
    @Nullable
    public String getConstraintSchema() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>information_schema.referential_constraints.constraint_name</code>.
     */
    public void setConstraintName(@Nullable String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>information_schema.referential_constraints.constraint_name</code>.
     */
    @Nullable
    public String getConstraintName() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>information_schema.referential_constraints.unique_constraint_catalog</code>.
     */
    public void setUniqueConstraintCatalog(@Nullable String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>information_schema.referential_constraints.unique_constraint_catalog</code>.
     */
    @Nullable
    public String getUniqueConstraintCatalog() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>information_schema.referential_constraints.unique_constraint_schema</code>.
     */
    public void setUniqueConstraintSchema(@Nullable String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>information_schema.referential_constraints.unique_constraint_schema</code>.
     */
    @Nullable
    public String getUniqueConstraintSchema() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>information_schema.referential_constraints.unique_constraint_name</code>.
     */
    public void setUniqueConstraintName(@Nullable String value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>information_schema.referential_constraints.unique_constraint_name</code>.
     */
    @Nullable
    public String getUniqueConstraintName() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>information_schema.referential_constraints.match_option</code>.
     */
    public void setMatchOption(@Nullable String value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>information_schema.referential_constraints.match_option</code>.
     */
    @Nullable
    public String getMatchOption() {
        return (String) get(6);
    }

    /**
     * Setter for
     * <code>information_schema.referential_constraints.update_rule</code>.
     */
    public void setUpdateRule(@Nullable String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>information_schema.referential_constraints.update_rule</code>.
     */
    @Nullable
    public String getUpdateRule() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>information_schema.referential_constraints.delete_rule</code>.
     */
    public void setDeleteRule(@Nullable String value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>information_schema.referential_constraints.delete_rule</code>.
     */
    @Nullable
    public String getDeleteRule() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row9<String, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row9<String, String, String, String, String, String, String, String, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return ReferentialConstraints.REFERENTIAL_CONSTRAINTS.CONSTRAINT_CATALOG;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return ReferentialConstraints.REFERENTIAL_CONSTRAINTS.CONSTRAINT_SCHEMA;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return ReferentialConstraints.REFERENTIAL_CONSTRAINTS.CONSTRAINT_NAME;
    }

    @Override
    @NotNull
    public Field<String> field4() {
        return ReferentialConstraints.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_CATALOG;
    }

    @Override
    @NotNull
    public Field<String> field5() {
        return ReferentialConstraints.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_SCHEMA;
    }

    @Override
    @NotNull
    public Field<String> field6() {
        return ReferentialConstraints.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_NAME;
    }

    @Override
    @NotNull
    public Field<String> field7() {
        return ReferentialConstraints.REFERENTIAL_CONSTRAINTS.MATCH_OPTION;
    }

    @Override
    @NotNull
    public Field<String> field8() {
        return ReferentialConstraints.REFERENTIAL_CONSTRAINTS.UPDATE_RULE;
    }

    @Override
    @NotNull
    public Field<String> field9() {
        return ReferentialConstraints.REFERENTIAL_CONSTRAINTS.DELETE_RULE;
    }

    @Override
    @Nullable
    public String component1() {
        return getConstraintCatalog();
    }

    @Override
    @Nullable
    public String component2() {
        return getConstraintSchema();
    }

    @Override
    @Nullable
    public String component3() {
        return getConstraintName();
    }

    @Override
    @Nullable
    public String component4() {
        return getUniqueConstraintCatalog();
    }

    @Override
    @Nullable
    public String component5() {
        return getUniqueConstraintSchema();
    }

    @Override
    @Nullable
    public String component6() {
        return getUniqueConstraintName();
    }

    @Override
    @Nullable
    public String component7() {
        return getMatchOption();
    }

    @Override
    @Nullable
    public String component8() {
        return getUpdateRule();
    }

    @Override
    @Nullable
    public String component9() {
        return getDeleteRule();
    }

    @Override
    @Nullable
    public String value1() {
        return getConstraintCatalog();
    }

    @Override
    @Nullable
    public String value2() {
        return getConstraintSchema();
    }

    @Override
    @Nullable
    public String value3() {
        return getConstraintName();
    }

    @Override
    @Nullable
    public String value4() {
        return getUniqueConstraintCatalog();
    }

    @Override
    @Nullable
    public String value5() {
        return getUniqueConstraintSchema();
    }

    @Override
    @Nullable
    public String value6() {
        return getUniqueConstraintName();
    }

    @Override
    @Nullable
    public String value7() {
        return getMatchOption();
    }

    @Override
    @Nullable
    public String value8() {
        return getUpdateRule();
    }

    @Override
    @Nullable
    public String value9() {
        return getDeleteRule();
    }

    @Override
    @NotNull
    public ReferentialConstraintsRecord value1(@Nullable String value) {
        setConstraintCatalog(value);
        return this;
    }

    @Override
    @NotNull
    public ReferentialConstraintsRecord value2(@Nullable String value) {
        setConstraintSchema(value);
        return this;
    }

    @Override
    @NotNull
    public ReferentialConstraintsRecord value3(@Nullable String value) {
        setConstraintName(value);
        return this;
    }

    @Override
    @NotNull
    public ReferentialConstraintsRecord value4(@Nullable String value) {
        setUniqueConstraintCatalog(value);
        return this;
    }

    @Override
    @NotNull
    public ReferentialConstraintsRecord value5(@Nullable String value) {
        setUniqueConstraintSchema(value);
        return this;
    }

    @Override
    @NotNull
    public ReferentialConstraintsRecord value6(@Nullable String value) {
        setUniqueConstraintName(value);
        return this;
    }

    @Override
    @NotNull
    public ReferentialConstraintsRecord value7(@Nullable String value) {
        setMatchOption(value);
        return this;
    }

    @Override
    @NotNull
    public ReferentialConstraintsRecord value8(@Nullable String value) {
        setUpdateRule(value);
        return this;
    }

    @Override
    @NotNull
    public ReferentialConstraintsRecord value9(@Nullable String value) {
        setDeleteRule(value);
        return this;
    }

    @Override
    @NotNull
    public ReferentialConstraintsRecord values(@Nullable String value1, @Nullable String value2, @Nullable String value3, @Nullable String value4, @Nullable String value5, @Nullable String value6, @Nullable String value7, @Nullable String value8, @Nullable String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReferentialConstraintsRecord
     */
    public ReferentialConstraintsRecord() {
        super(ReferentialConstraints.REFERENTIAL_CONSTRAINTS);
    }

    /**
     * Create a detached, initialised ReferentialConstraintsRecord
     */
    @ConstructorProperties({ "constraintCatalog", "constraintSchema", "constraintName", "uniqueConstraintCatalog", "uniqueConstraintSchema", "uniqueConstraintName", "matchOption", "updateRule", "deleteRule" })
    public ReferentialConstraintsRecord(@Nullable String constraintCatalog, @Nullable String constraintSchema, @Nullable String constraintName, @Nullable String uniqueConstraintCatalog, @Nullable String uniqueConstraintSchema, @Nullable String uniqueConstraintName, @Nullable String matchOption, @Nullable String updateRule, @Nullable String deleteRule) {
        super(ReferentialConstraints.REFERENTIAL_CONSTRAINTS);

        setConstraintCatalog(constraintCatalog);
        setConstraintSchema(constraintSchema);
        setConstraintName(constraintName);
        setUniqueConstraintCatalog(uniqueConstraintCatalog);
        setUniqueConstraintSchema(uniqueConstraintSchema);
        setUniqueConstraintName(uniqueConstraintName);
        setMatchOption(matchOption);
        setUpdateRule(updateRule);
        setDeleteRule(deleteRule);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ReferentialConstraintsRecord
     */
    public ReferentialConstraintsRecord(edu.java.domain.jooq.information_schema.tables.pojos.ReferentialConstraints value) {
        super(ReferentialConstraints.REFERENTIAL_CONSTRAINTS);

        if (value != null) {
            setConstraintCatalog(value.getConstraintCatalog());
            setConstraintSchema(value.getConstraintSchema());
            setConstraintName(value.getConstraintName());
            setUniqueConstraintCatalog(value.getUniqueConstraintCatalog());
            setUniqueConstraintSchema(value.getUniqueConstraintSchema());
            setUniqueConstraintName(value.getUniqueConstraintName());
            setMatchOption(value.getMatchOption());
            setUpdateRule(value.getUpdateRule());
            setDeleteRule(value.getDeleteRule());
            resetChangedOnNotNull();
        }
    }
}
