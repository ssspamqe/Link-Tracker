/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgPreparedStatements;

import java.beans.ConstructorProperties;
import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgPreparedStatementsRecord extends TableRecordImpl<PgPreparedStatementsRecord> implements Record8<String, String, OffsetDateTime, Object[], Object[], Boolean, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_prepared_statements.name</code>.
     */
    public void setName(@Nullable String value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_prepared_statements.name</code>.
     */
    @Nullable
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_prepared_statements.statement</code>.
     */
    public void setStatement(@Nullable String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_prepared_statements.statement</code>.
     */
    @Nullable
    public String getStatement() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_prepared_statements.prepare_time</code>.
     */
    public void setPrepareTime(@Nullable OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_prepared_statements.prepare_time</code>.
     */
    @Nullable
    public OffsetDateTime getPrepareTime() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_prepared_statements.parameter_types</code>.
     */
    public void setParameterTypes(@Nullable Object[] value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_prepared_statements.parameter_types</code>.
     */
    @Nullable
    public Object[] getParameterTypes() {
        return (Object[]) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_prepared_statements.result_types</code>.
     */
    public void setResultTypes(@Nullable Object[] value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_prepared_statements.result_types</code>.
     */
    @Nullable
    public Object[] getResultTypes() {
        return (Object[]) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_prepared_statements.from_sql</code>.
     */
    public void setFromSql(@Nullable Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_prepared_statements.from_sql</code>.
     */
    @Nullable
    public Boolean getFromSql() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_prepared_statements.generic_plans</code>.
     */
    public void setGenericPlans(@Nullable Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_prepared_statements.generic_plans</code>.
     */
    @Nullable
    public Long getGenericPlans() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_prepared_statements.custom_plans</code>.
     */
    public void setCustomPlans(@Nullable Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_prepared_statements.custom_plans</code>.
     */
    @Nullable
    public Long getCustomPlans() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row8<String, String, OffsetDateTime, Object[], Object[], Boolean, Long, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row8<String, String, OffsetDateTime, Object[], Object[], Boolean, Long, Long> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return PgPreparedStatements.PG_PREPARED_STATEMENTS.NAME;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return PgPreparedStatements.PG_PREPARED_STATEMENTS.STATEMENT;
    }

    @Override
    @NotNull
    public Field<OffsetDateTime> field3() {
        return PgPreparedStatements.PG_PREPARED_STATEMENTS.PREPARE_TIME;
    }

    @Override
    @NotNull
    public Field<Object[]> field4() {
        return PgPreparedStatements.PG_PREPARED_STATEMENTS.PARAMETER_TYPES;
    }

    @Override
    @NotNull
    public Field<Object[]> field5() {
        return PgPreparedStatements.PG_PREPARED_STATEMENTS.RESULT_TYPES;
    }

    @Override
    @NotNull
    public Field<Boolean> field6() {
        return PgPreparedStatements.PG_PREPARED_STATEMENTS.FROM_SQL;
    }

    @Override
    @NotNull
    public Field<Long> field7() {
        return PgPreparedStatements.PG_PREPARED_STATEMENTS.GENERIC_PLANS;
    }

    @Override
    @NotNull
    public Field<Long> field8() {
        return PgPreparedStatements.PG_PREPARED_STATEMENTS.CUSTOM_PLANS;
    }

    @Override
    @Nullable
    public String component1() {
        return getName();
    }

    @Override
    @Nullable
    public String component2() {
        return getStatement();
    }

    @Override
    @Nullable
    public OffsetDateTime component3() {
        return getPrepareTime();
    }

    @Override
    @Nullable
    public Object[] component4() {
        return getParameterTypes();
    }

    @Override
    @Nullable
    public Object[] component5() {
        return getResultTypes();
    }

    @Override
    @Nullable
    public Boolean component6() {
        return getFromSql();
    }

    @Override
    @Nullable
    public Long component7() {
        return getGenericPlans();
    }

    @Override
    @Nullable
    public Long component8() {
        return getCustomPlans();
    }

    @Override
    @Nullable
    public String value1() {
        return getName();
    }

    @Override
    @Nullable
    public String value2() {
        return getStatement();
    }

    @Override
    @Nullable
    public OffsetDateTime value3() {
        return getPrepareTime();
    }

    @Override
    @Nullable
    public Object[] value4() {
        return getParameterTypes();
    }

    @Override
    @Nullable
    public Object[] value5() {
        return getResultTypes();
    }

    @Override
    @Nullable
    public Boolean value6() {
        return getFromSql();
    }

    @Override
    @Nullable
    public Long value7() {
        return getGenericPlans();
    }

    @Override
    @Nullable
    public Long value8() {
        return getCustomPlans();
    }

    @Override
    @NotNull
    public PgPreparedStatementsRecord value1(@Nullable String value) {
        setName(value);
        return this;
    }

    @Override
    @NotNull
    public PgPreparedStatementsRecord value2(@Nullable String value) {
        setStatement(value);
        return this;
    }

    @Override
    @NotNull
    public PgPreparedStatementsRecord value3(@Nullable OffsetDateTime value) {
        setPrepareTime(value);
        return this;
    }

    @Override
    @NotNull
    public PgPreparedStatementsRecord value4(@Nullable Object[] value) {
        setParameterTypes(value);
        return this;
    }

    @Override
    @NotNull
    public PgPreparedStatementsRecord value5(@Nullable Object[] value) {
        setResultTypes(value);
        return this;
    }

    @Override
    @NotNull
    public PgPreparedStatementsRecord value6(@Nullable Boolean value) {
        setFromSql(value);
        return this;
    }

    @Override
    @NotNull
    public PgPreparedStatementsRecord value7(@Nullable Long value) {
        setGenericPlans(value);
        return this;
    }

    @Override
    @NotNull
    public PgPreparedStatementsRecord value8(@Nullable Long value) {
        setCustomPlans(value);
        return this;
    }

    @Override
    @NotNull
    public PgPreparedStatementsRecord values(@Nullable String value1, @Nullable String value2, @Nullable OffsetDateTime value3, @Nullable Object[] value4, @Nullable Object[] value5, @Nullable Boolean value6, @Nullable Long value7, @Nullable Long value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgPreparedStatementsRecord
     */
    public PgPreparedStatementsRecord() {
        super(PgPreparedStatements.PG_PREPARED_STATEMENTS);
    }

    /**
     * Create a detached, initialised PgPreparedStatementsRecord
     */
    @ConstructorProperties({ "name", "statement", "prepareTime", "parameterTypes", "resultTypes", "fromSql", "genericPlans", "customPlans" })
    public PgPreparedStatementsRecord(@Nullable String name, @Nullable String statement, @Nullable OffsetDateTime prepareTime, @Nullable Object[] parameterTypes, @Nullable Object[] resultTypes, @Nullable Boolean fromSql, @Nullable Long genericPlans, @Nullable Long customPlans) {
        super(PgPreparedStatements.PG_PREPARED_STATEMENTS);

        setName(name);
        setStatement(statement);
        setPrepareTime(prepareTime);
        setParameterTypes(parameterTypes);
        setResultTypes(resultTypes);
        setFromSql(fromSql);
        setGenericPlans(genericPlans);
        setCustomPlans(customPlans);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PgPreparedStatementsRecord
     */
    public PgPreparedStatementsRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgPreparedStatements value) {
        super(PgPreparedStatements.PG_PREPARED_STATEMENTS);

        if (value != null) {
            setName(value.getName());
            setStatement(value.getStatement());
            setPrepareTime(value.getPrepareTime());
            setParameterTypes(value.getParameterTypes());
            setResultTypes(value.getResultTypes());
            setFromSql(value.getFromSql());
            setGenericPlans(value.getGenericPlans());
            setCustomPlans(value.getCustomPlans());
            resetChangedOnNotNull();
        }
    }
}
