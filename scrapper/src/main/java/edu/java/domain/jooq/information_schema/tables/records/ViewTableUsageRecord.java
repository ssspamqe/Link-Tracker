/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.information_schema.tables.records;


import edu.java.domain.jooq.information_schema.tables.ViewTableUsage;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ViewTableUsageRecord extends TableRecordImpl<ViewTableUsageRecord> implements Record6<String, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    public void setViewCatalog(@Nullable String value) {
        set(0, value);
    }

    @Nullable
    public String getViewCatalog() {
        return (String) get(0);
    }

    public void setViewSchema(@Nullable String value) {
        set(1, value);
    }

    @Nullable
    public String getViewSchema() {
        return (String) get(1);
    }

    public void setViewName(@Nullable String value) {
        set(2, value);
    }

    @Nullable
    public String getViewName() {
        return (String) get(2);
    }

    public void setTableCatalog(@Nullable String value) {
        set(3, value);
    }

    @Nullable
    public String getTableCatalog() {
        return (String) get(3);
    }

    public void setTableSchema(@Nullable String value) {
        set(4, value);
    }

    @Nullable
    public String getTableSchema() {
        return (String) get(4);
    }

    public void setTableName(@Nullable String value) {
        set(5, value);
    }

    @Nullable
    public String getTableName() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row6<String, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row6<String, String, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return ViewTableUsage.VIEW_TABLE_USAGE.VIEW_CATALOG;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return ViewTableUsage.VIEW_TABLE_USAGE.VIEW_SCHEMA;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return ViewTableUsage.VIEW_TABLE_USAGE.VIEW_NAME;
    }

    @Override
    @NotNull
    public Field<String> field4() {
        return ViewTableUsage.VIEW_TABLE_USAGE.TABLE_CATALOG;
    }

    @Override
    @NotNull
    public Field<String> field5() {
        return ViewTableUsage.VIEW_TABLE_USAGE.TABLE_SCHEMA;
    }

    @Override
    @NotNull
    public Field<String> field6() {
        return ViewTableUsage.VIEW_TABLE_USAGE.TABLE_NAME;
    }

    @Override
    @Nullable
    public String component1() {
        return getViewCatalog();
    }

    @Override
    @Nullable
    public String component2() {
        return getViewSchema();
    }

    @Override
    @Nullable
    public String component3() {
        return getViewName();
    }

    @Override
    @Nullable
    public String component4() {
        return getTableCatalog();
    }

    @Override
    @Nullable
    public String component5() {
        return getTableSchema();
    }

    @Override
    @Nullable
    public String component6() {
        return getTableName();
    }

    @Override
    @Nullable
    public String value1() {
        return getViewCatalog();
    }

    @Override
    @Nullable
    public String value2() {
        return getViewSchema();
    }

    @Override
    @Nullable
    public String value3() {
        return getViewName();
    }

    @Override
    @Nullable
    public String value4() {
        return getTableCatalog();
    }

    @Override
    @Nullable
    public String value5() {
        return getTableSchema();
    }

    @Override
    @Nullable
    public String value6() {
        return getTableName();
    }

    @Override
    @NotNull
    public ViewTableUsageRecord value1(@Nullable String value) {
        setViewCatalog(value);
        return this;
    }

    @Override
    @NotNull
    public ViewTableUsageRecord value2(@Nullable String value) {
        setViewSchema(value);
        return this;
    }

    @Override
    @NotNull
    public ViewTableUsageRecord value3(@Nullable String value) {
        setViewName(value);
        return this;
    }

    @Override
    @NotNull
    public ViewTableUsageRecord value4(@Nullable String value) {
        setTableCatalog(value);
        return this;
    }

    @Override
    @NotNull
    public ViewTableUsageRecord value5(@Nullable String value) {
        setTableSchema(value);
        return this;
    }

    @Override
    @NotNull
    public ViewTableUsageRecord value6(@Nullable String value) {
        setTableName(value);
        return this;
    }

    @Override
    @NotNull
    public ViewTableUsageRecord values(@Nullable String value1, @Nullable String value2, @Nullable String value3, @Nullable String value4, @Nullable String value5, @Nullable String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public ViewTableUsageRecord() {
        super(ViewTableUsage.VIEW_TABLE_USAGE);
    }

    @ConstructorProperties({ "viewCatalog", "viewSchema", "viewName", "tableCatalog", "tableSchema", "tableName" })
    public ViewTableUsageRecord(@Nullable String viewCatalog, @Nullable String viewSchema, @Nullable String viewName, @Nullable String tableCatalog, @Nullable String tableSchema, @Nullable String tableName) {
        super(ViewTableUsage.VIEW_TABLE_USAGE);

        setViewCatalog(viewCatalog);
        setViewSchema(viewSchema);
        setViewName(viewName);
        setTableCatalog(tableCatalog);
        setTableSchema(tableSchema);
        setTableName(tableName);
        resetChangedOnNotNull();
    }

    public ViewTableUsageRecord(edu.java.domain.jooq.information_schema.tables.pojos.ViewTableUsage value) {
        super(ViewTableUsage.VIEW_TABLE_USAGE);

        if (value != null) {
            setViewCatalog(value.getViewCatalog());
            setViewSchema(value.getViewSchema());
            setViewName(value.getViewName());
            setTableCatalog(value.getTableCatalog());
            setTableSchema(value.getTableSchema());
            setTableName(value.getTableName());
            resetChangedOnNotNull();
        }
    }
}
