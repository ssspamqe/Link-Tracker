/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.information_schema.tables.records;


import edu.java.domain.jooq.information_schema.tables.ForeignTableOptions;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * The table <code>information_schema.foreign_table_options</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ForeignTableOptionsRecord extends TableRecordImpl<ForeignTableOptionsRecord> implements Record5<String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>information_schema.foreign_table_options.foreign_table_catalog</code>.
     */
    public void setForeignTableCatalog(@Nullable String value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>information_schema.foreign_table_options.foreign_table_catalog</code>.
     */
    @Nullable
    public String getForeignTableCatalog() {
        return (String) get(0);
    }

    /**
     * Setter for
     * <code>information_schema.foreign_table_options.foreign_table_schema</code>.
     */
    public void setForeignTableSchema(@Nullable String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>information_schema.foreign_table_options.foreign_table_schema</code>.
     */
    @Nullable
    public String getForeignTableSchema() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>information_schema.foreign_table_options.foreign_table_name</code>.
     */
    public void setForeignTableName(@Nullable String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>information_schema.foreign_table_options.foreign_table_name</code>.
     */
    @Nullable
    public String getForeignTableName() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>information_schema.foreign_table_options.option_name</code>.
     */
    public void setOptionName(@Nullable String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>information_schema.foreign_table_options.option_name</code>.
     */
    @Nullable
    public String getOptionName() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>information_schema.foreign_table_options.option_value</code>.
     */
    public void setOptionValue(@Nullable String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>information_schema.foreign_table_options.option_value</code>.
     */
    @Nullable
    public String getOptionValue() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row5<String, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row5<String, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return ForeignTableOptions.FOREIGN_TABLE_OPTIONS.FOREIGN_TABLE_CATALOG;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return ForeignTableOptions.FOREIGN_TABLE_OPTIONS.FOREIGN_TABLE_SCHEMA;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return ForeignTableOptions.FOREIGN_TABLE_OPTIONS.FOREIGN_TABLE_NAME;
    }

    @Override
    @NotNull
    public Field<String> field4() {
        return ForeignTableOptions.FOREIGN_TABLE_OPTIONS.OPTION_NAME;
    }

    @Override
    @NotNull
    public Field<String> field5() {
        return ForeignTableOptions.FOREIGN_TABLE_OPTIONS.OPTION_VALUE;
    }

    @Override
    @Nullable
    public String component1() {
        return getForeignTableCatalog();
    }

    @Override
    @Nullable
    public String component2() {
        return getForeignTableSchema();
    }

    @Override
    @Nullable
    public String component3() {
        return getForeignTableName();
    }

    @Override
    @Nullable
    public String component4() {
        return getOptionName();
    }

    @Override
    @Nullable
    public String component5() {
        return getOptionValue();
    }

    @Override
    @Nullable
    public String value1() {
        return getForeignTableCatalog();
    }

    @Override
    @Nullable
    public String value2() {
        return getForeignTableSchema();
    }

    @Override
    @Nullable
    public String value3() {
        return getForeignTableName();
    }

    @Override
    @Nullable
    public String value4() {
        return getOptionName();
    }

    @Override
    @Nullable
    public String value5() {
        return getOptionValue();
    }

    @Override
    @NotNull
    public ForeignTableOptionsRecord value1(@Nullable String value) {
        setForeignTableCatalog(value);
        return this;
    }

    @Override
    @NotNull
    public ForeignTableOptionsRecord value2(@Nullable String value) {
        setForeignTableSchema(value);
        return this;
    }

    @Override
    @NotNull
    public ForeignTableOptionsRecord value3(@Nullable String value) {
        setForeignTableName(value);
        return this;
    }

    @Override
    @NotNull
    public ForeignTableOptionsRecord value4(@Nullable String value) {
        setOptionName(value);
        return this;
    }

    @Override
    @NotNull
    public ForeignTableOptionsRecord value5(@Nullable String value) {
        setOptionValue(value);
        return this;
    }

    @Override
    @NotNull
    public ForeignTableOptionsRecord values(@Nullable String value1, @Nullable String value2, @Nullable String value3, @Nullable String value4, @Nullable String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ForeignTableOptionsRecord
     */
    public ForeignTableOptionsRecord() {
        super(ForeignTableOptions.FOREIGN_TABLE_OPTIONS);
    }

    /**
     * Create a detached, initialised ForeignTableOptionsRecord
     */
    @ConstructorProperties({ "foreignTableCatalog", "foreignTableSchema", "foreignTableName", "optionName", "optionValue" })
    public ForeignTableOptionsRecord(@Nullable String foreignTableCatalog, @Nullable String foreignTableSchema, @Nullable String foreignTableName, @Nullable String optionName, @Nullable String optionValue) {
        super(ForeignTableOptions.FOREIGN_TABLE_OPTIONS);

        setForeignTableCatalog(foreignTableCatalog);
        setForeignTableSchema(foreignTableSchema);
        setForeignTableName(foreignTableName);
        setOptionName(optionName);
        setOptionValue(optionValue);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ForeignTableOptionsRecord
     */
    public ForeignTableOptionsRecord(edu.java.domain.jooq.information_schema.tables.pojos.ForeignTableOptions value) {
        super(ForeignTableOptions.FOREIGN_TABLE_OPTIONS);

        if (value != null) {
            setForeignTableCatalog(value.getForeignTableCatalog());
            setForeignTableSchema(value.getForeignTableSchema());
            setForeignTableName(value.getForeignTableName());
            setOptionName(value.getOptionName());
            setOptionValue(value.getOptionValue());
            resetChangedOnNotNull();
        }
    }
}
