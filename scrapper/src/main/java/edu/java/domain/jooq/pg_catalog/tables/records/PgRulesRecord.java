/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgRules;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * The table <code>pg_catalog.pg_rules</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgRulesRecord extends TableRecordImpl<PgRulesRecord> implements Record4<String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_rules.schemaname</code>.
     */
    public void setSchemaname(@Nullable String value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_rules.schemaname</code>.
     */
    @Nullable
    public String getSchemaname() {
        return (String) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_rules.tablename</code>.
     */
    public void setTablename(@Nullable String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_rules.tablename</code>.
     */
    @Nullable
    public String getTablename() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_rules.rulename</code>.
     */
    public void setRulename(@Nullable String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_rules.rulename</code>.
     */
    @Nullable
    public String getRulename() {
        return (String) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_rules.definition</code>.
     */
    public void setDefinition(@Nullable String value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_rules.definition</code>.
     */
    @Nullable
    public String getDefinition() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row4<String, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return PgRules.PG_RULES.SCHEMANAME;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return PgRules.PG_RULES.TABLENAME;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return PgRules.PG_RULES.RULENAME;
    }

    @Override
    @NotNull
    public Field<String> field4() {
        return PgRules.PG_RULES.DEFINITION;
    }

    @Override
    @Nullable
    public String component1() {
        return getSchemaname();
    }

    @Override
    @Nullable
    public String component2() {
        return getTablename();
    }

    @Override
    @Nullable
    public String component3() {
        return getRulename();
    }

    @Override
    @Nullable
    public String component4() {
        return getDefinition();
    }

    @Override
    @Nullable
    public String value1() {
        return getSchemaname();
    }

    @Override
    @Nullable
    public String value2() {
        return getTablename();
    }

    @Override
    @Nullable
    public String value3() {
        return getRulename();
    }

    @Override
    @Nullable
    public String value4() {
        return getDefinition();
    }

    @Override
    @NotNull
    public PgRulesRecord value1(@Nullable String value) {
        setSchemaname(value);
        return this;
    }

    @Override
    @NotNull
    public PgRulesRecord value2(@Nullable String value) {
        setTablename(value);
        return this;
    }

    @Override
    @NotNull
    public PgRulesRecord value3(@Nullable String value) {
        setRulename(value);
        return this;
    }

    @Override
    @NotNull
    public PgRulesRecord value4(@Nullable String value) {
        setDefinition(value);
        return this;
    }

    @Override
    @NotNull
    public PgRulesRecord values(@Nullable String value1, @Nullable String value2, @Nullable String value3, @Nullable String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgRulesRecord
     */
    public PgRulesRecord() {
        super(PgRules.PG_RULES);
    }

    /**
     * Create a detached, initialised PgRulesRecord
     */
    @ConstructorProperties({ "schemaname", "tablename", "rulename", "definition" })
    public PgRulesRecord(@Nullable String schemaname, @Nullable String tablename, @Nullable String rulename, @Nullable String definition) {
        super(PgRules.PG_RULES);

        setSchemaname(schemaname);
        setTablename(tablename);
        setRulename(rulename);
        setDefinition(definition);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PgRulesRecord
     */
    public PgRulesRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgRules value) {
        super(PgRules.PG_RULES);

        if (value != null) {
            setSchemaname(value.getSchemaname());
            setTablename(value.getTablename());
            setRulename(value.getRulename());
            setDefinition(value.getDefinition());
            resetChangedOnNotNull();
        }
    }
}
