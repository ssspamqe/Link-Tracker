/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.JsonbEach;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * The table <code>pg_catalog.jsonb_each</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class JsonbEachRecord extends TableRecordImpl<JsonbEachRecord> implements Record2<String, JSONB> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.jsonb_each.key</code>.
     */
    public void setKey(@Nullable String value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.jsonb_each.key</code>.
     */
    @Nullable
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>pg_catalog.jsonb_each.value</code>.
     */
    public void setValue(@Nullable JSONB value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.jsonb_each.value</code>.
     */
    @Nullable
    public JSONB getValue() {
        return (JSONB) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row2<String, JSONB> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row2<String, JSONB> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return JsonbEach.JSONB_EACH.KEY;
    }

    @Override
    @NotNull
    public Field<JSONB> field2() {
        return JsonbEach.JSONB_EACH.VALUE;
    }

    @Override
    @Nullable
    public String component1() {
        return getKey();
    }

    @Override
    @Nullable
    public JSONB component2() {
        return getValue();
    }

    @Override
    @Nullable
    public String value1() {
        return getKey();
    }

    @Override
    @Nullable
    public JSONB value2() {
        return getValue();
    }

    @Override
    @NotNull
    public JsonbEachRecord value1(@Nullable String value) {
        setKey(value);
        return this;
    }

    @Override
    @NotNull
    public JsonbEachRecord value2(@Nullable JSONB value) {
        setValue(value);
        return this;
    }

    @Override
    @NotNull
    public JsonbEachRecord values(@Nullable String value1, @Nullable JSONB value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JsonbEachRecord
     */
    public JsonbEachRecord() {
        super(JsonbEach.JSONB_EACH);
    }

    /**
     * Create a detached, initialised JsonbEachRecord
     */
    @ConstructorProperties({ "key", "value" })
    public JsonbEachRecord(@Nullable String key, @Nullable JSONB value) {
        super(JsonbEach.JSONB_EACH);

        setKey(key);
        setValue(value);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised JsonbEachRecord
     */
    public JsonbEachRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.JsonbEach value) {
        super(JsonbEach.JSONB_EACH);

        if (value != null) {
            setKey(value.getKey());
            setValue(value.getValue());
            resetChangedOnNotNull();
        }
    }
}
