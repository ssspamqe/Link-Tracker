/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgNamespace;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgNamespaceRecord extends UpdatableRecordImpl<PgNamespaceRecord> implements Record4<Long, String, Long, String[]> {

    private static final long serialVersionUID = 1L;

    public void setOid(@NotNull Long value) {
        set(0, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getOid() {
        return (Long) get(0);
    }

    public void setNspname(@NotNull String value) {
        set(1, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getNspname() {
        return (String) get(1);
    }

    public void setNspowner(@NotNull Long value) {
        set(2, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getNspowner() {
        return (Long) get(2);
    }

    public void setNspacl(@Nullable String[] value) {
        set(3, value);
    }

    @Nullable
    public String[] getNspacl() {
        return (String[]) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row4<Long, String, Long, String[]> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row4<Long, String, Long, String[]> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return PgNamespace.PG_NAMESPACE.OID;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return PgNamespace.PG_NAMESPACE.NSPNAME;
    }

    @Override
    @NotNull
    public Field<Long> field3() {
        return PgNamespace.PG_NAMESPACE.NSPOWNER;
    }

    @Override
    @NotNull
    public Field<String[]> field4() {
        return PgNamespace.PG_NAMESPACE.NSPACL;
    }

    @Override
    @NotNull
    public Long component1() {
        return getOid();
    }

    @Override
    @NotNull
    public String component2() {
        return getNspname();
    }

    @Override
    @NotNull
    public Long component3() {
        return getNspowner();
    }

    @Override
    @Nullable
    public String[] component4() {
        return getNspacl();
    }

    @Override
    @NotNull
    public Long value1() {
        return getOid();
    }

    @Override
    @NotNull
    public String value2() {
        return getNspname();
    }

    @Override
    @NotNull
    public Long value3() {
        return getNspowner();
    }

    @Override
    @Nullable
    public String[] value4() {
        return getNspacl();
    }

    @Override
    @NotNull
    public PgNamespaceRecord value1(@NotNull Long value) {
        setOid(value);
        return this;
    }

    @Override
    @NotNull
    public PgNamespaceRecord value2(@NotNull String value) {
        setNspname(value);
        return this;
    }

    @Override
    @NotNull
    public PgNamespaceRecord value3(@NotNull Long value) {
        setNspowner(value);
        return this;
    }

    @Override
    @NotNull
    public PgNamespaceRecord value4(@Nullable String[] value) {
        setNspacl(value);
        return this;
    }

    @Override
    @NotNull
    public PgNamespaceRecord values(@NotNull Long value1, @NotNull String value2, @NotNull Long value3, @Nullable String[] value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public PgNamespaceRecord() {
        super(PgNamespace.PG_NAMESPACE);
    }

    @ConstructorProperties({ "oid", "nspname", "nspowner", "nspacl" })
    public PgNamespaceRecord(@NotNull Long oid, @NotNull String nspname, @NotNull Long nspowner, @Nullable String[] nspacl) {
        super(PgNamespace.PG_NAMESPACE);

        setOid(oid);
        setNspname(nspname);
        setNspowner(nspowner);
        setNspacl(nspacl);
        resetChangedOnNotNull();
    }

    public PgNamespaceRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgNamespace value) {
        super(PgNamespace.PG_NAMESPACE);

        if (value != null) {
            setOid(value.getOid());
            setNspname(value.getNspname());
            setNspowner(value.getNspowner());
            setNspacl(value.getNspacl());
            resetChangedOnNotNull();
        }
    }
}
