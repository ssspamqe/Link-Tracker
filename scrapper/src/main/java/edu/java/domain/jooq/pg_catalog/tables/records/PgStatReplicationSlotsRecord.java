/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgStatReplicationSlots;

import java.beans.ConstructorProperties;
import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatReplicationSlotsRecord extends TableRecordImpl<PgStatReplicationSlotsRecord> implements Record10<String, Long, Long, Long, Long, Long, Long, Long, Long, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_stat_replication_slots.slot_name</code>.
     */
    public void setSlotName(@Nullable String value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_replication_slots.slot_name</code>.
     */
    @Nullable
    public String getSlotName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_replication_slots.spill_txns</code>.
     */
    public void setSpillTxns(@Nullable Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_replication_slots.spill_txns</code>.
     */
    @Nullable
    public Long getSpillTxns() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_replication_slots.spill_count</code>.
     */
    public void setSpillCount(@Nullable Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_replication_slots.spill_count</code>.
     */
    @Nullable
    public Long getSpillCount() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_replication_slots.spill_bytes</code>.
     */
    public void setSpillBytes(@Nullable Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_replication_slots.spill_bytes</code>.
     */
    @Nullable
    public Long getSpillBytes() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_replication_slots.stream_txns</code>.
     */
    public void setStreamTxns(@Nullable Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_replication_slots.stream_txns</code>.
     */
    @Nullable
    public Long getStreamTxns() {
        return (Long) get(4);
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_replication_slots.stream_count</code>.
     */
    public void setStreamCount(@Nullable Long value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_replication_slots.stream_count</code>.
     */
    @Nullable
    public Long getStreamCount() {
        return (Long) get(5);
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_replication_slots.stream_bytes</code>.
     */
    public void setStreamBytes(@Nullable Long value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_replication_slots.stream_bytes</code>.
     */
    @Nullable
    public Long getStreamBytes() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_replication_slots.total_txns</code>.
     */
    public void setTotalTxns(@Nullable Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_replication_slots.total_txns</code>.
     */
    @Nullable
    public Long getTotalTxns() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_replication_slots.total_bytes</code>.
     */
    public void setTotalBytes(@Nullable Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_replication_slots.total_bytes</code>.
     */
    @Nullable
    public Long getTotalBytes() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_replication_slots.stats_reset</code>.
     */
    public void setStatsReset(@Nullable OffsetDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_replication_slots.stats_reset</code>.
     */
    @Nullable
    public OffsetDateTime getStatsReset() {
        return (OffsetDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row10<String, Long, Long, Long, Long, Long, Long, Long, Long, OffsetDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row10<String, Long, Long, Long, Long, Long, Long, Long, Long, OffsetDateTime> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return PgStatReplicationSlots.PG_STAT_REPLICATION_SLOTS.SLOT_NAME;
    }

    @Override
    @NotNull
    public Field<Long> field2() {
        return PgStatReplicationSlots.PG_STAT_REPLICATION_SLOTS.SPILL_TXNS;
    }

    @Override
    @NotNull
    public Field<Long> field3() {
        return PgStatReplicationSlots.PG_STAT_REPLICATION_SLOTS.SPILL_COUNT;
    }

    @Override
    @NotNull
    public Field<Long> field4() {
        return PgStatReplicationSlots.PG_STAT_REPLICATION_SLOTS.SPILL_BYTES;
    }

    @Override
    @NotNull
    public Field<Long> field5() {
        return PgStatReplicationSlots.PG_STAT_REPLICATION_SLOTS.STREAM_TXNS;
    }

    @Override
    @NotNull
    public Field<Long> field6() {
        return PgStatReplicationSlots.PG_STAT_REPLICATION_SLOTS.STREAM_COUNT;
    }

    @Override
    @NotNull
    public Field<Long> field7() {
        return PgStatReplicationSlots.PG_STAT_REPLICATION_SLOTS.STREAM_BYTES;
    }

    @Override
    @NotNull
    public Field<Long> field8() {
        return PgStatReplicationSlots.PG_STAT_REPLICATION_SLOTS.TOTAL_TXNS;
    }

    @Override
    @NotNull
    public Field<Long> field9() {
        return PgStatReplicationSlots.PG_STAT_REPLICATION_SLOTS.TOTAL_BYTES;
    }

    @Override
    @NotNull
    public Field<OffsetDateTime> field10() {
        return PgStatReplicationSlots.PG_STAT_REPLICATION_SLOTS.STATS_RESET;
    }

    @Override
    @Nullable
    public String component1() {
        return getSlotName();
    }

    @Override
    @Nullable
    public Long component2() {
        return getSpillTxns();
    }

    @Override
    @Nullable
    public Long component3() {
        return getSpillCount();
    }

    @Override
    @Nullable
    public Long component4() {
        return getSpillBytes();
    }

    @Override
    @Nullable
    public Long component5() {
        return getStreamTxns();
    }

    @Override
    @Nullable
    public Long component6() {
        return getStreamCount();
    }

    @Override
    @Nullable
    public Long component7() {
        return getStreamBytes();
    }

    @Override
    @Nullable
    public Long component8() {
        return getTotalTxns();
    }

    @Override
    @Nullable
    public Long component9() {
        return getTotalBytes();
    }

    @Override
    @Nullable
    public OffsetDateTime component10() {
        return getStatsReset();
    }

    @Override
    @Nullable
    public String value1() {
        return getSlotName();
    }

    @Override
    @Nullable
    public Long value2() {
        return getSpillTxns();
    }

    @Override
    @Nullable
    public Long value3() {
        return getSpillCount();
    }

    @Override
    @Nullable
    public Long value4() {
        return getSpillBytes();
    }

    @Override
    @Nullable
    public Long value5() {
        return getStreamTxns();
    }

    @Override
    @Nullable
    public Long value6() {
        return getStreamCount();
    }

    @Override
    @Nullable
    public Long value7() {
        return getStreamBytes();
    }

    @Override
    @Nullable
    public Long value8() {
        return getTotalTxns();
    }

    @Override
    @Nullable
    public Long value9() {
        return getTotalBytes();
    }

    @Override
    @Nullable
    public OffsetDateTime value10() {
        return getStatsReset();
    }

    @Override
    @NotNull
    public PgStatReplicationSlotsRecord value1(@Nullable String value) {
        setSlotName(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatReplicationSlotsRecord value2(@Nullable Long value) {
        setSpillTxns(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatReplicationSlotsRecord value3(@Nullable Long value) {
        setSpillCount(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatReplicationSlotsRecord value4(@Nullable Long value) {
        setSpillBytes(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatReplicationSlotsRecord value5(@Nullable Long value) {
        setStreamTxns(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatReplicationSlotsRecord value6(@Nullable Long value) {
        setStreamCount(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatReplicationSlotsRecord value7(@Nullable Long value) {
        setStreamBytes(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatReplicationSlotsRecord value8(@Nullable Long value) {
        setTotalTxns(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatReplicationSlotsRecord value9(@Nullable Long value) {
        setTotalBytes(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatReplicationSlotsRecord value10(@Nullable OffsetDateTime value) {
        setStatsReset(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatReplicationSlotsRecord values(@Nullable String value1, @Nullable Long value2, @Nullable Long value3, @Nullable Long value4, @Nullable Long value5, @Nullable Long value6, @Nullable Long value7, @Nullable Long value8, @Nullable Long value9, @Nullable OffsetDateTime value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgStatReplicationSlotsRecord
     */
    public PgStatReplicationSlotsRecord() {
        super(PgStatReplicationSlots.PG_STAT_REPLICATION_SLOTS);
    }

    /**
     * Create a detached, initialised PgStatReplicationSlotsRecord
     */
    @ConstructorProperties({ "slotName", "spillTxns", "spillCount", "spillBytes", "streamTxns", "streamCount", "streamBytes", "totalTxns", "totalBytes", "statsReset" })
    public PgStatReplicationSlotsRecord(@Nullable String slotName, @Nullable Long spillTxns, @Nullable Long spillCount, @Nullable Long spillBytes, @Nullable Long streamTxns, @Nullable Long streamCount, @Nullable Long streamBytes, @Nullable Long totalTxns, @Nullable Long totalBytes, @Nullable OffsetDateTime statsReset) {
        super(PgStatReplicationSlots.PG_STAT_REPLICATION_SLOTS);

        setSlotName(slotName);
        setSpillTxns(spillTxns);
        setSpillCount(spillCount);
        setSpillBytes(spillBytes);
        setStreamTxns(streamTxns);
        setStreamCount(streamCount);
        setStreamBytes(streamBytes);
        setTotalTxns(totalTxns);
        setTotalBytes(totalBytes);
        setStatsReset(statsReset);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PgStatReplicationSlotsRecord
     */
    public PgStatReplicationSlotsRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgStatReplicationSlots value) {
        super(PgStatReplicationSlots.PG_STAT_REPLICATION_SLOTS);

        if (value != null) {
            setSlotName(value.getSlotName());
            setSpillTxns(value.getSpillTxns());
            setSpillCount(value.getSpillCount());
            setSpillBytes(value.getSpillBytes());
            setStreamTxns(value.getStreamTxns());
            setStreamCount(value.getStreamCount());
            setStreamBytes(value.getStreamBytes());
            setTotalTxns(value.getTotalTxns());
            setTotalBytes(value.getTotalBytes());
            setStatsReset(value.getStatsReset());
            resetChangedOnNotNull();
        }
    }
}
