/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgStats;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatsRecord extends TableRecordImpl<PgStatsRecord> implements Record14<String, String, String, Boolean, Float, Integer, Float, Object[], Float[], Object[], Float, Object[], Float[], Float[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_stats.schemaname</code>.
     */
    public void setSchemaname(@Nullable String value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats.schemaname</code>.
     */
    @Nullable
    public String getSchemaname() {
        return (String) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats.tablename</code>.
     */
    public void setTablename(@Nullable String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats.tablename</code>.
     */
    @Nullable
    public String getTablename() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats.attname</code>.
     */
    public void setAttname(@Nullable String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats.attname</code>.
     */
    @Nullable
    public String getAttname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats.inherited</code>.
     */
    public void setInherited(@Nullable Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats.inherited</code>.
     */
    @Nullable
    public Boolean getInherited() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats.null_frac</code>.
     */
    public void setNullFrac(@Nullable Float value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats.null_frac</code>.
     */
    @Nullable
    public Float getNullFrac() {
        return (Float) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats.avg_width</code>.
     */
    public void setAvgWidth(@Nullable Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats.avg_width</code>.
     */
    @Nullable
    public Integer getAvgWidth() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats.n_distinct</code>.
     */
    public void setNDistinct(@Nullable Float value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats.n_distinct</code>.
     */
    @Nullable
    public Float getNDistinct() {
        return (Float) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats.most_common_vals</code>.
     */
    public void setMostCommonVals(@Nullable Object[] value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats.most_common_vals</code>.
     */
    @Nullable
    public Object[] getMostCommonVals() {
        return (Object[]) get(7);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats.most_common_freqs</code>.
     */
    public void setMostCommonFreqs(@Nullable Float[] value) {
        set(8, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats.most_common_freqs</code>.
     */
    @Nullable
    public Float[] getMostCommonFreqs() {
        return (Float[]) get(8);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats.histogram_bounds</code>.
     */
    public void setHistogramBounds(@Nullable Object[] value) {
        set(9, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats.histogram_bounds</code>.
     */
    @Nullable
    public Object[] getHistogramBounds() {
        return (Object[]) get(9);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats.correlation</code>.
     */
    public void setCorrelation(@Nullable Float value) {
        set(10, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats.correlation</code>.
     */
    @Nullable
    public Float getCorrelation() {
        return (Float) get(10);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats.most_common_elems</code>.
     */
    public void setMostCommonElems(@Nullable Object[] value) {
        set(11, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats.most_common_elems</code>.
     */
    @Nullable
    public Object[] getMostCommonElems() {
        return (Object[]) get(11);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats.most_common_elem_freqs</code>.
     */
    public void setMostCommonElemFreqs(@Nullable Float[] value) {
        set(12, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats.most_common_elem_freqs</code>.
     */
    @Nullable
    public Float[] getMostCommonElemFreqs() {
        return (Float[]) get(12);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats.elem_count_histogram</code>.
     */
    public void setElemCountHistogram(@Nullable Float[] value) {
        set(13, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats.elem_count_histogram</code>.
     */
    @Nullable
    public Float[] getElemCountHistogram() {
        return (Float[]) get(13);
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row14<String, String, String, Boolean, Float, Integer, Float, Object[], Float[], Object[], Float, Object[], Float[], Float[]> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row14<String, String, String, Boolean, Float, Integer, Float, Object[], Float[], Object[], Float, Object[], Float[], Float[]> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return PgStats.PG_STATS.SCHEMANAME;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return PgStats.PG_STATS.TABLENAME;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return PgStats.PG_STATS.ATTNAME;
    }

    @Override
    @NotNull
    public Field<Boolean> field4() {
        return PgStats.PG_STATS.INHERITED;
    }

    @Override
    @NotNull
    public Field<Float> field5() {
        return PgStats.PG_STATS.NULL_FRAC;
    }

    @Override
    @NotNull
    public Field<Integer> field6() {
        return PgStats.PG_STATS.AVG_WIDTH;
    }

    @Override
    @NotNull
    public Field<Float> field7() {
        return PgStats.PG_STATS.N_DISTINCT;
    }

    @Override
    @NotNull
    public Field<Object[]> field8() {
        return PgStats.PG_STATS.MOST_COMMON_VALS;
    }

    @Override
    @NotNull
    public Field<Float[]> field9() {
        return PgStats.PG_STATS.MOST_COMMON_FREQS;
    }

    @Override
    @NotNull
    public Field<Object[]> field10() {
        return PgStats.PG_STATS.HISTOGRAM_BOUNDS;
    }

    @Override
    @NotNull
    public Field<Float> field11() {
        return PgStats.PG_STATS.CORRELATION;
    }

    @Override
    @NotNull
    public Field<Object[]> field12() {
        return PgStats.PG_STATS.MOST_COMMON_ELEMS;
    }

    @Override
    @NotNull
    public Field<Float[]> field13() {
        return PgStats.PG_STATS.MOST_COMMON_ELEM_FREQS;
    }

    @Override
    @NotNull
    public Field<Float[]> field14() {
        return PgStats.PG_STATS.ELEM_COUNT_HISTOGRAM;
    }

    @Override
    @Nullable
    public String component1() {
        return getSchemaname();
    }

    @Override
    @Nullable
    public String component2() {
        return getTablename();
    }

    @Override
    @Nullable
    public String component3() {
        return getAttname();
    }

    @Override
    @Nullable
    public Boolean component4() {
        return getInherited();
    }

    @Override
    @Nullable
    public Float component5() {
        return getNullFrac();
    }

    @Override
    @Nullable
    public Integer component6() {
        return getAvgWidth();
    }

    @Override
    @Nullable
    public Float component7() {
        return getNDistinct();
    }

    @Override
    @Nullable
    public Object[] component8() {
        return getMostCommonVals();
    }

    @Override
    @Nullable
    public Float[] component9() {
        return getMostCommonFreqs();
    }

    @Override
    @Nullable
    public Object[] component10() {
        return getHistogramBounds();
    }

    @Override
    @Nullable
    public Float component11() {
        return getCorrelation();
    }

    @Override
    @Nullable
    public Object[] component12() {
        return getMostCommonElems();
    }

    @Override
    @Nullable
    public Float[] component13() {
        return getMostCommonElemFreqs();
    }

    @Override
    @Nullable
    public Float[] component14() {
        return getElemCountHistogram();
    }

    @Override
    @Nullable
    public String value1() {
        return getSchemaname();
    }

    @Override
    @Nullable
    public String value2() {
        return getTablename();
    }

    @Override
    @Nullable
    public String value3() {
        return getAttname();
    }

    @Override
    @Nullable
    public Boolean value4() {
        return getInherited();
    }

    @Override
    @Nullable
    public Float value5() {
        return getNullFrac();
    }

    @Override
    @Nullable
    public Integer value6() {
        return getAvgWidth();
    }

    @Override
    @Nullable
    public Float value7() {
        return getNDistinct();
    }

    @Override
    @Nullable
    public Object[] value8() {
        return getMostCommonVals();
    }

    @Override
    @Nullable
    public Float[] value9() {
        return getMostCommonFreqs();
    }

    @Override
    @Nullable
    public Object[] value10() {
        return getHistogramBounds();
    }

    @Override
    @Nullable
    public Float value11() {
        return getCorrelation();
    }

    @Override
    @Nullable
    public Object[] value12() {
        return getMostCommonElems();
    }

    @Override
    @Nullable
    public Float[] value13() {
        return getMostCommonElemFreqs();
    }

    @Override
    @Nullable
    public Float[] value14() {
        return getElemCountHistogram();
    }

    @Override
    @NotNull
    public PgStatsRecord value1(@Nullable String value) {
        setSchemaname(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatsRecord value2(@Nullable String value) {
        setTablename(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatsRecord value3(@Nullable String value) {
        setAttname(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatsRecord value4(@Nullable Boolean value) {
        setInherited(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatsRecord value5(@Nullable Float value) {
        setNullFrac(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatsRecord value6(@Nullable Integer value) {
        setAvgWidth(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatsRecord value7(@Nullable Float value) {
        setNDistinct(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatsRecord value8(@Nullable Object[] value) {
        setMostCommonVals(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatsRecord value9(@Nullable Float[] value) {
        setMostCommonFreqs(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatsRecord value10(@Nullable Object[] value) {
        setHistogramBounds(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatsRecord value11(@Nullable Float value) {
        setCorrelation(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatsRecord value12(@Nullable Object[] value) {
        setMostCommonElems(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatsRecord value13(@Nullable Float[] value) {
        setMostCommonElemFreqs(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatsRecord value14(@Nullable Float[] value) {
        setElemCountHistogram(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatsRecord values(@Nullable String value1, @Nullable String value2, @Nullable String value3, @Nullable Boolean value4, @Nullable Float value5, @Nullable Integer value6, @Nullable Float value7, @Nullable Object[] value8, @Nullable Float[] value9, @Nullable Object[] value10, @Nullable Float value11, @Nullable Object[] value12, @Nullable Float[] value13, @Nullable Float[] value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgStatsRecord
     */
    public PgStatsRecord() {
        super(PgStats.PG_STATS);
    }

    /**
     * Create a detached, initialised PgStatsRecord
     */
    @ConstructorProperties({ "schemaname", "tablename", "attname", "inherited", "nullFrac", "avgWidth", "nDistinct", "mostCommonVals", "mostCommonFreqs", "histogramBounds", "correlation", "mostCommonElems", "mostCommonElemFreqs", "elemCountHistogram" })
    public PgStatsRecord(@Nullable String schemaname, @Nullable String tablename, @Nullable String attname, @Nullable Boolean inherited, @Nullable Float nullFrac, @Nullable Integer avgWidth, @Nullable Float nDistinct, @Nullable Object[] mostCommonVals, @Nullable Float[] mostCommonFreqs, @Nullable Object[] histogramBounds, @Nullable Float correlation, @Nullable Object[] mostCommonElems, @Nullable Float[] mostCommonElemFreqs, @Nullable Float[] elemCountHistogram) {
        super(PgStats.PG_STATS);

        setSchemaname(schemaname);
        setTablename(tablename);
        setAttname(attname);
        setInherited(inherited);
        setNullFrac(nullFrac);
        setAvgWidth(avgWidth);
        setNDistinct(nDistinct);
        setMostCommonVals(mostCommonVals);
        setMostCommonFreqs(mostCommonFreqs);
        setHistogramBounds(histogramBounds);
        setCorrelation(correlation);
        setMostCommonElems(mostCommonElems);
        setMostCommonElemFreqs(mostCommonElemFreqs);
        setElemCountHistogram(elemCountHistogram);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PgStatsRecord
     */
    public PgStatsRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgStats value) {
        super(PgStats.PG_STATS);

        if (value != null) {
            setSchemaname(value.getSchemaname());
            setTablename(value.getTablename());
            setAttname(value.getAttname());
            setInherited(value.getInherited());
            setNullFrac(value.getNullFrac());
            setAvgWidth(value.getAvgWidth());
            setNDistinct(value.getNDistinct());
            setMostCommonVals(value.getMostCommonVals());
            setMostCommonFreqs(value.getMostCommonFreqs());
            setHistogramBounds(value.getHistogramBounds());
            setCorrelation(value.getCorrelation());
            setMostCommonElems(value.getMostCommonElems());
            setMostCommonElemFreqs(value.getMostCommonElemFreqs());
            setElemCountHistogram(value.getElemCountHistogram());
            resetChangedOnNotNull();
        }
    }
}
