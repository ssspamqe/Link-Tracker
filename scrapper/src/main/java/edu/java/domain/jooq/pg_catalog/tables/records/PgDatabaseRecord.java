/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgDatabase;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgDatabaseRecord extends UpdatableRecordImpl<PgDatabaseRecord> implements Record17<Long, String, Long, Integer, String, Boolean, Boolean, Integer, Long, Long, Long, String, String, String, String, String, String[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_database.oid</code>.
     */
    public void setOid(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_database.oid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getOid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datname</code>.
     */
    public void setDatname(@NotNull String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datname</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getDatname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datdba</code>.
     */
    public void setDatdba(@NotNull Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datdba</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getDatdba() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_database.encoding</code>.
     */
    public void setEncoding(@NotNull Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_database.encoding</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getEncoding() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datlocprovider</code>.
     */
    public void setDatlocprovider(@NotNull String value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datlocprovider</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getDatlocprovider() {
        return (String) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datistemplate</code>.
     */
    public void setDatistemplate(@NotNull Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datistemplate</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getDatistemplate() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datallowconn</code>.
     */
    public void setDatallowconn(@NotNull Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datallowconn</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getDatallowconn() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datconnlimit</code>.
     */
    public void setDatconnlimit(@NotNull Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datconnlimit</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getDatconnlimit() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datfrozenxid</code>.
     */
    public void setDatfrozenxid(@NotNull Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datfrozenxid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getDatfrozenxid() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datminmxid</code>.
     */
    public void setDatminmxid(@NotNull Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datminmxid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getDatminmxid() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>pg_catalog.pg_database.dattablespace</code>.
     */
    public void setDattablespace(@NotNull Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_database.dattablespace</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getDattablespace() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datcollate</code>.
     */
    public void setDatcollate(@NotNull String value) {
        set(11, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datcollate</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getDatcollate() {
        return (String) get(11);
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datctype</code>.
     */
    public void setDatctype(@NotNull String value) {
        set(12, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datctype</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getDatctype() {
        return (String) get(12);
    }

    /**
     * Setter for <code>pg_catalog.pg_database.daticulocale</code>.
     */
    public void setDaticulocale(@Nullable String value) {
        set(13, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_database.daticulocale</code>.
     */
    @Nullable
    public String getDaticulocale() {
        return (String) get(13);
    }

    /**
     * Setter for <code>pg_catalog.pg_database.daticurules</code>.
     */
    public void setDaticurules(@Nullable String value) {
        set(14, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_database.daticurules</code>.
     */
    @Nullable
    public String getDaticurules() {
        return (String) get(14);
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datcollversion</code>.
     */
    public void setDatcollversion(@Nullable String value) {
        set(15, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datcollversion</code>.
     */
    @Nullable
    public String getDatcollversion() {
        return (String) get(15);
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datacl</code>.
     */
    public void setDatacl(@Nullable String[] value) {
        set(16, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datacl</code>.
     */
    @Nullable
    public String[] getDatacl() {
        return (String[]) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row17<Long, String, Long, Integer, String, Boolean, Boolean, Integer, Long, Long, Long, String, String, String, String, String, String[]> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row17<Long, String, Long, Integer, String, Boolean, Boolean, Integer, Long, Long, Long, String, String, String, String, String, String[]> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return PgDatabase.PG_DATABASE.OID;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return PgDatabase.PG_DATABASE.DATNAME;
    }

    @Override
    @NotNull
    public Field<Long> field3() {
        return PgDatabase.PG_DATABASE.DATDBA;
    }

    @Override
    @NotNull
    public Field<Integer> field4() {
        return PgDatabase.PG_DATABASE.ENCODING;
    }

    @Override
    @NotNull
    public Field<String> field5() {
        return PgDatabase.PG_DATABASE.DATLOCPROVIDER;
    }

    @Override
    @NotNull
    public Field<Boolean> field6() {
        return PgDatabase.PG_DATABASE.DATISTEMPLATE;
    }

    @Override
    @NotNull
    public Field<Boolean> field7() {
        return PgDatabase.PG_DATABASE.DATALLOWCONN;
    }

    @Override
    @NotNull
    public Field<Integer> field8() {
        return PgDatabase.PG_DATABASE.DATCONNLIMIT;
    }

    @Override
    @NotNull
    public Field<Long> field9() {
        return PgDatabase.PG_DATABASE.DATFROZENXID;
    }

    @Override
    @NotNull
    public Field<Long> field10() {
        return PgDatabase.PG_DATABASE.DATMINMXID;
    }

    @Override
    @NotNull
    public Field<Long> field11() {
        return PgDatabase.PG_DATABASE.DATTABLESPACE;
    }

    @Override
    @NotNull
    public Field<String> field12() {
        return PgDatabase.PG_DATABASE.DATCOLLATE;
    }

    @Override
    @NotNull
    public Field<String> field13() {
        return PgDatabase.PG_DATABASE.DATCTYPE;
    }

    @Override
    @NotNull
    public Field<String> field14() {
        return PgDatabase.PG_DATABASE.DATICULOCALE;
    }

    @Override
    @NotNull
    public Field<String> field15() {
        return PgDatabase.PG_DATABASE.DATICURULES;
    }

    @Override
    @NotNull
    public Field<String> field16() {
        return PgDatabase.PG_DATABASE.DATCOLLVERSION;
    }

    @Override
    @NotNull
    public Field<String[]> field17() {
        return PgDatabase.PG_DATABASE.DATACL;
    }

    @Override
    @NotNull
    public Long component1() {
        return getOid();
    }

    @Override
    @NotNull
    public String component2() {
        return getDatname();
    }

    @Override
    @NotNull
    public Long component3() {
        return getDatdba();
    }

    @Override
    @NotNull
    public Integer component4() {
        return getEncoding();
    }

    @Override
    @NotNull
    public String component5() {
        return getDatlocprovider();
    }

    @Override
    @NotNull
    public Boolean component6() {
        return getDatistemplate();
    }

    @Override
    @NotNull
    public Boolean component7() {
        return getDatallowconn();
    }

    @Override
    @NotNull
    public Integer component8() {
        return getDatconnlimit();
    }

    @Override
    @NotNull
    public Long component9() {
        return getDatfrozenxid();
    }

    @Override
    @NotNull
    public Long component10() {
        return getDatminmxid();
    }

    @Override
    @NotNull
    public Long component11() {
        return getDattablespace();
    }

    @Override
    @NotNull
    public String component12() {
        return getDatcollate();
    }

    @Override
    @NotNull
    public String component13() {
        return getDatctype();
    }

    @Override
    @Nullable
    public String component14() {
        return getDaticulocale();
    }

    @Override
    @Nullable
    public String component15() {
        return getDaticurules();
    }

    @Override
    @Nullable
    public String component16() {
        return getDatcollversion();
    }

    @Override
    @Nullable
    public String[] component17() {
        return getDatacl();
    }

    @Override
    @NotNull
    public Long value1() {
        return getOid();
    }

    @Override
    @NotNull
    public String value2() {
        return getDatname();
    }

    @Override
    @NotNull
    public Long value3() {
        return getDatdba();
    }

    @Override
    @NotNull
    public Integer value4() {
        return getEncoding();
    }

    @Override
    @NotNull
    public String value5() {
        return getDatlocprovider();
    }

    @Override
    @NotNull
    public Boolean value6() {
        return getDatistemplate();
    }

    @Override
    @NotNull
    public Boolean value7() {
        return getDatallowconn();
    }

    @Override
    @NotNull
    public Integer value8() {
        return getDatconnlimit();
    }

    @Override
    @NotNull
    public Long value9() {
        return getDatfrozenxid();
    }

    @Override
    @NotNull
    public Long value10() {
        return getDatminmxid();
    }

    @Override
    @NotNull
    public Long value11() {
        return getDattablespace();
    }

    @Override
    @NotNull
    public String value12() {
        return getDatcollate();
    }

    @Override
    @NotNull
    public String value13() {
        return getDatctype();
    }

    @Override
    @Nullable
    public String value14() {
        return getDaticulocale();
    }

    @Override
    @Nullable
    public String value15() {
        return getDaticurules();
    }

    @Override
    @Nullable
    public String value16() {
        return getDatcollversion();
    }

    @Override
    @Nullable
    public String[] value17() {
        return getDatacl();
    }

    @Override
    @NotNull
    public PgDatabaseRecord value1(@NotNull Long value) {
        setOid(value);
        return this;
    }

    @Override
    @NotNull
    public PgDatabaseRecord value2(@NotNull String value) {
        setDatname(value);
        return this;
    }

    @Override
    @NotNull
    public PgDatabaseRecord value3(@NotNull Long value) {
        setDatdba(value);
        return this;
    }

    @Override
    @NotNull
    public PgDatabaseRecord value4(@NotNull Integer value) {
        setEncoding(value);
        return this;
    }

    @Override
    @NotNull
    public PgDatabaseRecord value5(@NotNull String value) {
        setDatlocprovider(value);
        return this;
    }

    @Override
    @NotNull
    public PgDatabaseRecord value6(@NotNull Boolean value) {
        setDatistemplate(value);
        return this;
    }

    @Override
    @NotNull
    public PgDatabaseRecord value7(@NotNull Boolean value) {
        setDatallowconn(value);
        return this;
    }

    @Override
    @NotNull
    public PgDatabaseRecord value8(@NotNull Integer value) {
        setDatconnlimit(value);
        return this;
    }

    @Override
    @NotNull
    public PgDatabaseRecord value9(@NotNull Long value) {
        setDatfrozenxid(value);
        return this;
    }

    @Override
    @NotNull
    public PgDatabaseRecord value10(@NotNull Long value) {
        setDatminmxid(value);
        return this;
    }

    @Override
    @NotNull
    public PgDatabaseRecord value11(@NotNull Long value) {
        setDattablespace(value);
        return this;
    }

    @Override
    @NotNull
    public PgDatabaseRecord value12(@NotNull String value) {
        setDatcollate(value);
        return this;
    }

    @Override
    @NotNull
    public PgDatabaseRecord value13(@NotNull String value) {
        setDatctype(value);
        return this;
    }

    @Override
    @NotNull
    public PgDatabaseRecord value14(@Nullable String value) {
        setDaticulocale(value);
        return this;
    }

    @Override
    @NotNull
    public PgDatabaseRecord value15(@Nullable String value) {
        setDaticurules(value);
        return this;
    }

    @Override
    @NotNull
    public PgDatabaseRecord value16(@Nullable String value) {
        setDatcollversion(value);
        return this;
    }

    @Override
    @NotNull
    public PgDatabaseRecord value17(@Nullable String[] value) {
        setDatacl(value);
        return this;
    }

    @Override
    @NotNull
    public PgDatabaseRecord values(@NotNull Long value1, @NotNull String value2, @NotNull Long value3, @NotNull Integer value4, @NotNull String value5, @NotNull Boolean value6, @NotNull Boolean value7, @NotNull Integer value8, @NotNull Long value9, @NotNull Long value10, @NotNull Long value11, @NotNull String value12, @NotNull String value13, @Nullable String value14, @Nullable String value15, @Nullable String value16, @Nullable String[] value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgDatabaseRecord
     */
    public PgDatabaseRecord() {
        super(PgDatabase.PG_DATABASE);
    }

    /**
     * Create a detached, initialised PgDatabaseRecord
     */
    @ConstructorProperties({ "oid", "datname", "datdba", "encoding", "datlocprovider", "datistemplate", "datallowconn", "datconnlimit", "datfrozenxid", "datminmxid", "dattablespace", "datcollate", "datctype", "daticulocale", "daticurules", "datcollversion", "datacl" })
    public PgDatabaseRecord(@NotNull Long oid, @NotNull String datname, @NotNull Long datdba, @NotNull Integer encoding, @NotNull String datlocprovider, @NotNull Boolean datistemplate, @NotNull Boolean datallowconn, @NotNull Integer datconnlimit, @NotNull Long datfrozenxid, @NotNull Long datminmxid, @NotNull Long dattablespace, @NotNull String datcollate, @NotNull String datctype, @Nullable String daticulocale, @Nullable String daticurules, @Nullable String datcollversion, @Nullable String[] datacl) {
        super(PgDatabase.PG_DATABASE);

        setOid(oid);
        setDatname(datname);
        setDatdba(datdba);
        setEncoding(encoding);
        setDatlocprovider(datlocprovider);
        setDatistemplate(datistemplate);
        setDatallowconn(datallowconn);
        setDatconnlimit(datconnlimit);
        setDatfrozenxid(datfrozenxid);
        setDatminmxid(datminmxid);
        setDattablespace(dattablespace);
        setDatcollate(datcollate);
        setDatctype(datctype);
        setDaticulocale(daticulocale);
        setDaticurules(daticurules);
        setDatcollversion(datcollversion);
        setDatacl(datacl);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PgDatabaseRecord
     */
    public PgDatabaseRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgDatabase value) {
        super(PgDatabase.PG_DATABASE);

        if (value != null) {
            setOid(value.getOid());
            setDatname(value.getDatname());
            setDatdba(value.getDatdba());
            setEncoding(value.getEncoding());
            setDatlocprovider(value.getDatlocprovider());
            setDatistemplate(value.getDatistemplate());
            setDatallowconn(value.getDatallowconn());
            setDatconnlimit(value.getDatconnlimit());
            setDatfrozenxid(value.getDatfrozenxid());
            setDatminmxid(value.getDatminmxid());
            setDattablespace(value.getDattablespace());
            setDatcollate(value.getDatcollate());
            setDatctype(value.getDatctype());
            setDaticulocale(value.getDaticulocale());
            setDaticurules(value.getDaticurules());
            setDatcollversion(value.getDatcollversion());
            setDatacl(value.getDatacl());
            resetChangedOnNotNull();
        }
    }
}
