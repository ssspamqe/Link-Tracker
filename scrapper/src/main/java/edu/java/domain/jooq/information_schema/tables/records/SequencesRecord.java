/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.information_schema.tables.records;


import edu.java.domain.jooq.information_schema.tables.Sequences;

import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SequencesRecord extends TableRecordImpl<SequencesRecord> implements Record12<String, String, String, String, Integer, Integer, Integer, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>information_schema.sequences.sequence_catalog</code>.
     */
    public void setSequenceCatalog(@Nullable String value) {
        set(0, value);
    }

    /**
     * Getter for <code>information_schema.sequences.sequence_catalog</code>.
     */
    @Nullable
    public String getSequenceCatalog() {
        return (String) get(0);
    }

    /**
     * Setter for <code>information_schema.sequences.sequence_schema</code>.
     */
    public void setSequenceSchema(@Nullable String value) {
        set(1, value);
    }

    /**
     * Getter for <code>information_schema.sequences.sequence_schema</code>.
     */
    @Nullable
    public String getSequenceSchema() {
        return (String) get(1);
    }

    /**
     * Setter for <code>information_schema.sequences.sequence_name</code>.
     */
    public void setSequenceName(@Nullable String value) {
        set(2, value);
    }

    /**
     * Getter for <code>information_schema.sequences.sequence_name</code>.
     */
    @Nullable
    public String getSequenceName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>information_schema.sequences.data_type</code>.
     */
    public void setDataType(@Nullable String value) {
        set(3, value);
    }

    /**
     * Getter for <code>information_schema.sequences.data_type</code>.
     */
    @Nullable
    public String getDataType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>information_schema.sequences.numeric_precision</code>.
     */
    public void setNumericPrecision(@Nullable Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>information_schema.sequences.numeric_precision</code>.
     */
    @Nullable
    public Integer getNumericPrecision() {
        return (Integer) get(4);
    }

    /**
     * Setter for
     * <code>information_schema.sequences.numeric_precision_radix</code>.
     */
    public void setNumericPrecisionRadix(@Nullable Integer value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>information_schema.sequences.numeric_precision_radix</code>.
     */
    @Nullable
    public Integer getNumericPrecisionRadix() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>information_schema.sequences.numeric_scale</code>.
     */
    public void setNumericScale(@Nullable Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>information_schema.sequences.numeric_scale</code>.
     */
    @Nullable
    public Integer getNumericScale() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>information_schema.sequences.start_value</code>.
     */
    public void setStartValue(@Nullable String value) {
        set(7, value);
    }

    /**
     * Getter for <code>information_schema.sequences.start_value</code>.
     */
    @Nullable
    public String getStartValue() {
        return (String) get(7);
    }

    /**
     * Setter for <code>information_schema.sequences.minimum_value</code>.
     */
    public void setMinimumValue(@Nullable String value) {
        set(8, value);
    }

    /**
     * Getter for <code>information_schema.sequences.minimum_value</code>.
     */
    @Nullable
    public String getMinimumValue() {
        return (String) get(8);
    }

    /**
     * Setter for <code>information_schema.sequences.maximum_value</code>.
     */
    public void setMaximumValue(@Nullable String value) {
        set(9, value);
    }

    /**
     * Getter for <code>information_schema.sequences.maximum_value</code>.
     */
    @Nullable
    public String getMaximumValue() {
        return (String) get(9);
    }

    /**
     * Setter for <code>information_schema.sequences.increment</code>.
     */
    public void setIncrement(@Nullable String value) {
        set(10, value);
    }

    /**
     * Getter for <code>information_schema.sequences.increment</code>.
     */
    @Nullable
    public String getIncrement() {
        return (String) get(10);
    }

    /**
     * Setter for <code>information_schema.sequences.cycle_option</code>.
     */
    public void setCycleOption(@Nullable String value) {
        set(11, value);
    }

    /**
     * Getter for <code>information_schema.sequences.cycle_option</code>.
     */
    @Size(max = 3)
    @Nullable
    public String getCycleOption() {
        return (String) get(11);
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row12<String, String, String, String, Integer, Integer, Integer, String, String, String, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row12<String, String, String, String, Integer, Integer, Integer, String, String, String, String, String> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return Sequences.SEQUENCES.SEQUENCE_CATALOG;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return Sequences.SEQUENCES.SEQUENCE_SCHEMA;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return Sequences.SEQUENCES.SEQUENCE_NAME;
    }

    @Override
    @NotNull
    public Field<String> field4() {
        return Sequences.SEQUENCES.DATA_TYPE;
    }

    @Override
    @NotNull
    public Field<Integer> field5() {
        return Sequences.SEQUENCES.NUMERIC_PRECISION;
    }

    @Override
    @NotNull
    public Field<Integer> field6() {
        return Sequences.SEQUENCES.NUMERIC_PRECISION_RADIX;
    }

    @Override
    @NotNull
    public Field<Integer> field7() {
        return Sequences.SEQUENCES.NUMERIC_SCALE;
    }

    @Override
    @NotNull
    public Field<String> field8() {
        return Sequences.SEQUENCES.START_VALUE;
    }

    @Override
    @NotNull
    public Field<String> field9() {
        return Sequences.SEQUENCES.MINIMUM_VALUE;
    }

    @Override
    @NotNull
    public Field<String> field10() {
        return Sequences.SEQUENCES.MAXIMUM_VALUE;
    }

    @Override
    @NotNull
    public Field<String> field11() {
        return Sequences.SEQUENCES.INCREMENT;
    }

    @Override
    @NotNull
    public Field<String> field12() {
        return Sequences.SEQUENCES.CYCLE_OPTION;
    }

    @Override
    @Nullable
    public String component1() {
        return getSequenceCatalog();
    }

    @Override
    @Nullable
    public String component2() {
        return getSequenceSchema();
    }

    @Override
    @Nullable
    public String component3() {
        return getSequenceName();
    }

    @Override
    @Nullable
    public String component4() {
        return getDataType();
    }

    @Override
    @Nullable
    public Integer component5() {
        return getNumericPrecision();
    }

    @Override
    @Nullable
    public Integer component6() {
        return getNumericPrecisionRadix();
    }

    @Override
    @Nullable
    public Integer component7() {
        return getNumericScale();
    }

    @Override
    @Nullable
    public String component8() {
        return getStartValue();
    }

    @Override
    @Nullable
    public String component9() {
        return getMinimumValue();
    }

    @Override
    @Nullable
    public String component10() {
        return getMaximumValue();
    }

    @Override
    @Nullable
    public String component11() {
        return getIncrement();
    }

    @Override
    @Nullable
    public String component12() {
        return getCycleOption();
    }

    @Override
    @Nullable
    public String value1() {
        return getSequenceCatalog();
    }

    @Override
    @Nullable
    public String value2() {
        return getSequenceSchema();
    }

    @Override
    @Nullable
    public String value3() {
        return getSequenceName();
    }

    @Override
    @Nullable
    public String value4() {
        return getDataType();
    }

    @Override
    @Nullable
    public Integer value5() {
        return getNumericPrecision();
    }

    @Override
    @Nullable
    public Integer value6() {
        return getNumericPrecisionRadix();
    }

    @Override
    @Nullable
    public Integer value7() {
        return getNumericScale();
    }

    @Override
    @Nullable
    public String value8() {
        return getStartValue();
    }

    @Override
    @Nullable
    public String value9() {
        return getMinimumValue();
    }

    @Override
    @Nullable
    public String value10() {
        return getMaximumValue();
    }

    @Override
    @Nullable
    public String value11() {
        return getIncrement();
    }

    @Override
    @Nullable
    public String value12() {
        return getCycleOption();
    }

    @Override
    @NotNull
    public SequencesRecord value1(@Nullable String value) {
        setSequenceCatalog(value);
        return this;
    }

    @Override
    @NotNull
    public SequencesRecord value2(@Nullable String value) {
        setSequenceSchema(value);
        return this;
    }

    @Override
    @NotNull
    public SequencesRecord value3(@Nullable String value) {
        setSequenceName(value);
        return this;
    }

    @Override
    @NotNull
    public SequencesRecord value4(@Nullable String value) {
        setDataType(value);
        return this;
    }

    @Override
    @NotNull
    public SequencesRecord value5(@Nullable Integer value) {
        setNumericPrecision(value);
        return this;
    }

    @Override
    @NotNull
    public SequencesRecord value6(@Nullable Integer value) {
        setNumericPrecisionRadix(value);
        return this;
    }

    @Override
    @NotNull
    public SequencesRecord value7(@Nullable Integer value) {
        setNumericScale(value);
        return this;
    }

    @Override
    @NotNull
    public SequencesRecord value8(@Nullable String value) {
        setStartValue(value);
        return this;
    }

    @Override
    @NotNull
    public SequencesRecord value9(@Nullable String value) {
        setMinimumValue(value);
        return this;
    }

    @Override
    @NotNull
    public SequencesRecord value10(@Nullable String value) {
        setMaximumValue(value);
        return this;
    }

    @Override
    @NotNull
    public SequencesRecord value11(@Nullable String value) {
        setIncrement(value);
        return this;
    }

    @Override
    @NotNull
    public SequencesRecord value12(@Nullable String value) {
        setCycleOption(value);
        return this;
    }

    @Override
    @NotNull
    public SequencesRecord values(@Nullable String value1, @Nullable String value2, @Nullable String value3, @Nullable String value4, @Nullable Integer value5, @Nullable Integer value6, @Nullable Integer value7, @Nullable String value8, @Nullable String value9, @Nullable String value10, @Nullable String value11, @Nullable String value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SequencesRecord
     */
    public SequencesRecord() {
        super(Sequences.SEQUENCES);
    }

    /**
     * Create a detached, initialised SequencesRecord
     */
    @ConstructorProperties({ "sequenceCatalog", "sequenceSchema", "sequenceName", "dataType", "numericPrecision", "numericPrecisionRadix", "numericScale", "startValue", "minimumValue", "maximumValue", "increment", "cycleOption" })
    public SequencesRecord(@Nullable String sequenceCatalog, @Nullable String sequenceSchema, @Nullable String sequenceName, @Nullable String dataType, @Nullable Integer numericPrecision, @Nullable Integer numericPrecisionRadix, @Nullable Integer numericScale, @Nullable String startValue, @Nullable String minimumValue, @Nullable String maximumValue, @Nullable String increment, @Nullable String cycleOption) {
        super(Sequences.SEQUENCES);

        setSequenceCatalog(sequenceCatalog);
        setSequenceSchema(sequenceSchema);
        setSequenceName(sequenceName);
        setDataType(dataType);
        setNumericPrecision(numericPrecision);
        setNumericPrecisionRadix(numericPrecisionRadix);
        setNumericScale(numericScale);
        setStartValue(startValue);
        setMinimumValue(minimumValue);
        setMaximumValue(maximumValue);
        setIncrement(increment);
        setCycleOption(cycleOption);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised SequencesRecord
     */
    public SequencesRecord(edu.java.domain.jooq.information_schema.tables.pojos.Sequences value) {
        super(Sequences.SEQUENCES);

        if (value != null) {
            setSequenceCatalog(value.getSequenceCatalog());
            setSequenceSchema(value.getSequenceSchema());
            setSequenceName(value.getSequenceName());
            setDataType(value.getDataType());
            setNumericPrecision(value.getNumericPrecision());
            setNumericPrecisionRadix(value.getNumericPrecisionRadix());
            setNumericScale(value.getNumericScale());
            setStartValue(value.getStartValue());
            setMinimumValue(value.getMinimumValue());
            setMaximumValue(value.getMaximumValue());
            setIncrement(value.getIncrement());
            setCycleOption(value.getCycleOption());
            resetChangedOnNotNull();
        }
    }
}
