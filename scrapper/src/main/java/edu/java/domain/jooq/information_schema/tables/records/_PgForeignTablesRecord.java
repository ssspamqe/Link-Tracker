/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.information_schema.tables.records;


import edu.java.domain.jooq.information_schema.tables._PgForeignTables;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class _PgForeignTablesRecord extends TableRecordImpl<_PgForeignTablesRecord> implements Record7<String, String, String, String[], String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>information_schema._pg_foreign_tables.foreign_table_catalog</code>.
     */
    public void setForeignTableCatalog(@Nullable String value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>information_schema._pg_foreign_tables.foreign_table_catalog</code>.
     */
    @Nullable
    public String getForeignTableCatalog() {
        return (String) get(0);
    }

    /**
     * Setter for
     * <code>information_schema._pg_foreign_tables.foreign_table_schema</code>.
     */
    public void setForeignTableSchema(@Nullable String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>information_schema._pg_foreign_tables.foreign_table_schema</code>.
     */
    @Nullable
    public String getForeignTableSchema() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>information_schema._pg_foreign_tables.foreign_table_name</code>.
     */
    public void setForeignTableName(@Nullable String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>information_schema._pg_foreign_tables.foreign_table_name</code>.
     */
    @Nullable
    public String getForeignTableName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>information_schema._pg_foreign_tables.ftoptions</code>.
     */
    public void setFtoptions(@Nullable String[] value) {
        set(3, value);
    }

    /**
     * Getter for <code>information_schema._pg_foreign_tables.ftoptions</code>.
     */
    @Nullable
    public String[] getFtoptions() {
        return (String[]) get(3);
    }

    /**
     * Setter for
     * <code>information_schema._pg_foreign_tables.foreign_server_catalog</code>.
     */
    public void setForeignServerCatalog(@Nullable String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>information_schema._pg_foreign_tables.foreign_server_catalog</code>.
     */
    @Nullable
    public String getForeignServerCatalog() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>information_schema._pg_foreign_tables.foreign_server_name</code>.
     */
    public void setForeignServerName(@Nullable String value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>information_schema._pg_foreign_tables.foreign_server_name</code>.
     */
    @Nullable
    public String getForeignServerName() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>information_schema._pg_foreign_tables.authorization_identifier</code>.
     */
    public void setAuthorizationIdentifier(@Nullable String value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>information_schema._pg_foreign_tables.authorization_identifier</code>.
     */
    @Nullable
    public String getAuthorizationIdentifier() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row7<String, String, String, String[], String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row7<String, String, String, String[], String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return _PgForeignTables._PG_FOREIGN_TABLES.FOREIGN_TABLE_CATALOG;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return _PgForeignTables._PG_FOREIGN_TABLES.FOREIGN_TABLE_SCHEMA;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return _PgForeignTables._PG_FOREIGN_TABLES.FOREIGN_TABLE_NAME;
    }

    @Override
    @NotNull
    public Field<String[]> field4() {
        return _PgForeignTables._PG_FOREIGN_TABLES.FTOPTIONS;
    }

    @Override
    @NotNull
    public Field<String> field5() {
        return _PgForeignTables._PG_FOREIGN_TABLES.FOREIGN_SERVER_CATALOG;
    }

    @Override
    @NotNull
    public Field<String> field6() {
        return _PgForeignTables._PG_FOREIGN_TABLES.FOREIGN_SERVER_NAME;
    }

    @Override
    @NotNull
    public Field<String> field7() {
        return _PgForeignTables._PG_FOREIGN_TABLES.AUTHORIZATION_IDENTIFIER;
    }

    @Override
    @Nullable
    public String component1() {
        return getForeignTableCatalog();
    }

    @Override
    @Nullable
    public String component2() {
        return getForeignTableSchema();
    }

    @Override
    @Nullable
    public String component3() {
        return getForeignTableName();
    }

    @Override
    @Nullable
    public String[] component4() {
        return getFtoptions();
    }

    @Override
    @Nullable
    public String component5() {
        return getForeignServerCatalog();
    }

    @Override
    @Nullable
    public String component6() {
        return getForeignServerName();
    }

    @Override
    @Nullable
    public String component7() {
        return getAuthorizationIdentifier();
    }

    @Override
    @Nullable
    public String value1() {
        return getForeignTableCatalog();
    }

    @Override
    @Nullable
    public String value2() {
        return getForeignTableSchema();
    }

    @Override
    @Nullable
    public String value3() {
        return getForeignTableName();
    }

    @Override
    @Nullable
    public String[] value4() {
        return getFtoptions();
    }

    @Override
    @Nullable
    public String value5() {
        return getForeignServerCatalog();
    }

    @Override
    @Nullable
    public String value6() {
        return getForeignServerName();
    }

    @Override
    @Nullable
    public String value7() {
        return getAuthorizationIdentifier();
    }

    @Override
    @NotNull
    public _PgForeignTablesRecord value1(@Nullable String value) {
        setForeignTableCatalog(value);
        return this;
    }

    @Override
    @NotNull
    public _PgForeignTablesRecord value2(@Nullable String value) {
        setForeignTableSchema(value);
        return this;
    }

    @Override
    @NotNull
    public _PgForeignTablesRecord value3(@Nullable String value) {
        setForeignTableName(value);
        return this;
    }

    @Override
    @NotNull
    public _PgForeignTablesRecord value4(@Nullable String[] value) {
        setFtoptions(value);
        return this;
    }

    @Override
    @NotNull
    public _PgForeignTablesRecord value5(@Nullable String value) {
        setForeignServerCatalog(value);
        return this;
    }

    @Override
    @NotNull
    public _PgForeignTablesRecord value6(@Nullable String value) {
        setForeignServerName(value);
        return this;
    }

    @Override
    @NotNull
    public _PgForeignTablesRecord value7(@Nullable String value) {
        setAuthorizationIdentifier(value);
        return this;
    }

    @Override
    @NotNull
    public _PgForeignTablesRecord values(@Nullable String value1, @Nullable String value2, @Nullable String value3, @Nullable String[] value4, @Nullable String value5, @Nullable String value6, @Nullable String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached _PgForeignTablesRecord
     */
    public _PgForeignTablesRecord() {
        super(_PgForeignTables._PG_FOREIGN_TABLES);
    }

    /**
     * Create a detached, initialised _PgForeignTablesRecord
     */
    @ConstructorProperties({ "foreignTableCatalog", "foreignTableSchema", "foreignTableName", "ftoptions", "foreignServerCatalog", "foreignServerName", "authorizationIdentifier" })
    public _PgForeignTablesRecord(@Nullable String foreignTableCatalog, @Nullable String foreignTableSchema, @Nullable String foreignTableName, @Nullable String[] ftoptions, @Nullable String foreignServerCatalog, @Nullable String foreignServerName, @Nullable String authorizationIdentifier) {
        super(_PgForeignTables._PG_FOREIGN_TABLES);

        setForeignTableCatalog(foreignTableCatalog);
        setForeignTableSchema(foreignTableSchema);
        setForeignTableName(foreignTableName);
        setFtoptions(ftoptions);
        setForeignServerCatalog(foreignServerCatalog);
        setForeignServerName(foreignServerName);
        setAuthorizationIdentifier(authorizationIdentifier);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised _PgForeignTablesRecord
     */
    public _PgForeignTablesRecord(edu.java.domain.jooq.information_schema.tables.pojos._PgForeignTables value) {
        super(_PgForeignTables._PG_FOREIGN_TABLES);

        if (value != null) {
            setForeignTableCatalog(value.getForeignTableCatalog());
            setForeignTableSchema(value.getForeignTableSchema());
            setForeignTableName(value.getForeignTableName());
            setFtoptions(value.getFtoptions());
            setForeignServerCatalog(value.getForeignServerCatalog());
            setForeignServerName(value.getForeignServerName());
            setAuthorizationIdentifier(value.getAuthorizationIdentifier());
            resetChangedOnNotNull();
        }
    }
}
