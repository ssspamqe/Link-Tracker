/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgTables;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgTablesRecord extends TableRecordImpl<PgTablesRecord> implements Record8<String, String, String, String, Boolean, Boolean, Boolean, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_tables.schemaname</code>.
     */
    public void setSchemaname(@Nullable String value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_tables.schemaname</code>.
     */
    @Nullable
    public String getSchemaname() {
        return (String) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_tables.tablename</code>.
     */
    public void setTablename(@Nullable String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_tables.tablename</code>.
     */
    @Nullable
    public String getTablename() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_tables.tableowner</code>.
     */
    public void setTableowner(@Nullable String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_tables.tableowner</code>.
     */
    @Nullable
    public String getTableowner() {
        return (String) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_tables.tablespace</code>.
     */
    public void setTablespace(@Nullable String value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_tables.tablespace</code>.
     */
    @Nullable
    public String getTablespace() {
        return (String) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_tables.hasindexes</code>.
     */
    public void setHasindexes(@Nullable Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_tables.hasindexes</code>.
     */
    @Nullable
    public Boolean getHasindexes() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_tables.hasrules</code>.
     */
    public void setHasrules(@Nullable Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_tables.hasrules</code>.
     */
    @Nullable
    public Boolean getHasrules() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_tables.hastriggers</code>.
     */
    public void setHastriggers(@Nullable Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_tables.hastriggers</code>.
     */
    @Nullable
    public Boolean getHastriggers() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_tables.rowsecurity</code>.
     */
    public void setRowsecurity(@Nullable Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_tables.rowsecurity</code>.
     */
    @Nullable
    public Boolean getRowsecurity() {
        return (Boolean) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row8<String, String, String, String, Boolean, Boolean, Boolean, Boolean> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row8<String, String, String, String, Boolean, Boolean, Boolean, Boolean> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return PgTables.PG_TABLES.SCHEMANAME;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return PgTables.PG_TABLES.TABLENAME;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return PgTables.PG_TABLES.TABLEOWNER;
    }

    @Override
    @NotNull
    public Field<String> field4() {
        return PgTables.PG_TABLES.TABLESPACE;
    }

    @Override
    @NotNull
    public Field<Boolean> field5() {
        return PgTables.PG_TABLES.HASINDEXES;
    }

    @Override
    @NotNull
    public Field<Boolean> field6() {
        return PgTables.PG_TABLES.HASRULES;
    }

    @Override
    @NotNull
    public Field<Boolean> field7() {
        return PgTables.PG_TABLES.HASTRIGGERS;
    }

    @Override
    @NotNull
    public Field<Boolean> field8() {
        return PgTables.PG_TABLES.ROWSECURITY;
    }

    @Override
    @Nullable
    public String component1() {
        return getSchemaname();
    }

    @Override
    @Nullable
    public String component2() {
        return getTablename();
    }

    @Override
    @Nullable
    public String component3() {
        return getTableowner();
    }

    @Override
    @Nullable
    public String component4() {
        return getTablespace();
    }

    @Override
    @Nullable
    public Boolean component5() {
        return getHasindexes();
    }

    @Override
    @Nullable
    public Boolean component6() {
        return getHasrules();
    }

    @Override
    @Nullable
    public Boolean component7() {
        return getHastriggers();
    }

    @Override
    @Nullable
    public Boolean component8() {
        return getRowsecurity();
    }

    @Override
    @Nullable
    public String value1() {
        return getSchemaname();
    }

    @Override
    @Nullable
    public String value2() {
        return getTablename();
    }

    @Override
    @Nullable
    public String value3() {
        return getTableowner();
    }

    @Override
    @Nullable
    public String value4() {
        return getTablespace();
    }

    @Override
    @Nullable
    public Boolean value5() {
        return getHasindexes();
    }

    @Override
    @Nullable
    public Boolean value6() {
        return getHasrules();
    }

    @Override
    @Nullable
    public Boolean value7() {
        return getHastriggers();
    }

    @Override
    @Nullable
    public Boolean value8() {
        return getRowsecurity();
    }

    @Override
    @NotNull
    public PgTablesRecord value1(@Nullable String value) {
        setSchemaname(value);
        return this;
    }

    @Override
    @NotNull
    public PgTablesRecord value2(@Nullable String value) {
        setTablename(value);
        return this;
    }

    @Override
    @NotNull
    public PgTablesRecord value3(@Nullable String value) {
        setTableowner(value);
        return this;
    }

    @Override
    @NotNull
    public PgTablesRecord value4(@Nullable String value) {
        setTablespace(value);
        return this;
    }

    @Override
    @NotNull
    public PgTablesRecord value5(@Nullable Boolean value) {
        setHasindexes(value);
        return this;
    }

    @Override
    @NotNull
    public PgTablesRecord value6(@Nullable Boolean value) {
        setHasrules(value);
        return this;
    }

    @Override
    @NotNull
    public PgTablesRecord value7(@Nullable Boolean value) {
        setHastriggers(value);
        return this;
    }

    @Override
    @NotNull
    public PgTablesRecord value8(@Nullable Boolean value) {
        setRowsecurity(value);
        return this;
    }

    @Override
    @NotNull
    public PgTablesRecord values(@Nullable String value1, @Nullable String value2, @Nullable String value3, @Nullable String value4, @Nullable Boolean value5, @Nullable Boolean value6, @Nullable Boolean value7, @Nullable Boolean value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgTablesRecord
     */
    public PgTablesRecord() {
        super(PgTables.PG_TABLES);
    }

    /**
     * Create a detached, initialised PgTablesRecord
     */
    @ConstructorProperties({ "schemaname", "tablename", "tableowner", "tablespace", "hasindexes", "hasrules", "hastriggers", "rowsecurity" })
    public PgTablesRecord(@Nullable String schemaname, @Nullable String tablename, @Nullable String tableowner, @Nullable String tablespace, @Nullable Boolean hasindexes, @Nullable Boolean hasrules, @Nullable Boolean hastriggers, @Nullable Boolean rowsecurity) {
        super(PgTables.PG_TABLES);

        setSchemaname(schemaname);
        setTablename(tablename);
        setTableowner(tableowner);
        setTablespace(tablespace);
        setHasindexes(hasindexes);
        setHasrules(hasrules);
        setHastriggers(hastriggers);
        setRowsecurity(rowsecurity);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PgTablesRecord
     */
    public PgTablesRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgTables value) {
        super(PgTables.PG_TABLES);

        if (value != null) {
            setSchemaname(value.getSchemaname());
            setTablename(value.getTablename());
            setTableowner(value.getTableowner());
            setTablespace(value.getTablespace());
            setHasindexes(value.getHasindexes());
            setHasrules(value.getHasrules());
            setHastriggers(value.getHastriggers());
            setRowsecurity(value.getRowsecurity());
            resetChangedOnNotNull();
        }
    }
}
