/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgAmop;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The table <code>pg_catalog.pg_amop</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgAmopRecord extends UpdatableRecordImpl<PgAmopRecord> implements Record9<Long, Long, Long, Long, Short, String, Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_amop.oid</code>.
     */
    public void setOid(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.oid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getOid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amopfamily</code>.
     */
    public void setAmopfamily(@NotNull Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amopfamily</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getAmopfamily() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amoplefttype</code>.
     */
    public void setAmoplefttype(@NotNull Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amoplefttype</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getAmoplefttype() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amoprighttype</code>.
     */
    public void setAmoprighttype(@NotNull Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amoprighttype</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getAmoprighttype() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amopstrategy</code>.
     */
    public void setAmopstrategy(@NotNull Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amopstrategy</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Short getAmopstrategy() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amoppurpose</code>.
     */
    public void setAmoppurpose(@NotNull String value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amoppurpose</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getAmoppurpose() {
        return (String) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amopopr</code>.
     */
    public void setAmopopr(@NotNull Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amopopr</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getAmopopr() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amopmethod</code>.
     */
    public void setAmopmethod(@NotNull Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amopmethod</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getAmopmethod() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amopsortfamily</code>.
     */
    public void setAmopsortfamily(@NotNull Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amopsortfamily</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getAmopsortfamily() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row9<Long, Long, Long, Long, Short, String, Long, Long, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row9<Long, Long, Long, Long, Short, String, Long, Long, Long> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return PgAmop.PG_AMOP.OID;
    }

    @Override
    @NotNull
    public Field<Long> field2() {
        return PgAmop.PG_AMOP.AMOPFAMILY;
    }

    @Override
    @NotNull
    public Field<Long> field3() {
        return PgAmop.PG_AMOP.AMOPLEFTTYPE;
    }

    @Override
    @NotNull
    public Field<Long> field4() {
        return PgAmop.PG_AMOP.AMOPRIGHTTYPE;
    }

    @Override
    @NotNull
    public Field<Short> field5() {
        return PgAmop.PG_AMOP.AMOPSTRATEGY;
    }

    @Override
    @NotNull
    public Field<String> field6() {
        return PgAmop.PG_AMOP.AMOPPURPOSE;
    }

    @Override
    @NotNull
    public Field<Long> field7() {
        return PgAmop.PG_AMOP.AMOPOPR;
    }

    @Override
    @NotNull
    public Field<Long> field8() {
        return PgAmop.PG_AMOP.AMOPMETHOD;
    }

    @Override
    @NotNull
    public Field<Long> field9() {
        return PgAmop.PG_AMOP.AMOPSORTFAMILY;
    }

    @Override
    @NotNull
    public Long component1() {
        return getOid();
    }

    @Override
    @NotNull
    public Long component2() {
        return getAmopfamily();
    }

    @Override
    @NotNull
    public Long component3() {
        return getAmoplefttype();
    }

    @Override
    @NotNull
    public Long component4() {
        return getAmoprighttype();
    }

    @Override
    @NotNull
    public Short component5() {
        return getAmopstrategy();
    }

    @Override
    @NotNull
    public String component6() {
        return getAmoppurpose();
    }

    @Override
    @NotNull
    public Long component7() {
        return getAmopopr();
    }

    @Override
    @NotNull
    public Long component8() {
        return getAmopmethod();
    }

    @Override
    @NotNull
    public Long component9() {
        return getAmopsortfamily();
    }

    @Override
    @NotNull
    public Long value1() {
        return getOid();
    }

    @Override
    @NotNull
    public Long value2() {
        return getAmopfamily();
    }

    @Override
    @NotNull
    public Long value3() {
        return getAmoplefttype();
    }

    @Override
    @NotNull
    public Long value4() {
        return getAmoprighttype();
    }

    @Override
    @NotNull
    public Short value5() {
        return getAmopstrategy();
    }

    @Override
    @NotNull
    public String value6() {
        return getAmoppurpose();
    }

    @Override
    @NotNull
    public Long value7() {
        return getAmopopr();
    }

    @Override
    @NotNull
    public Long value8() {
        return getAmopmethod();
    }

    @Override
    @NotNull
    public Long value9() {
        return getAmopsortfamily();
    }

    @Override
    @NotNull
    public PgAmopRecord value1(@NotNull Long value) {
        setOid(value);
        return this;
    }

    @Override
    @NotNull
    public PgAmopRecord value2(@NotNull Long value) {
        setAmopfamily(value);
        return this;
    }

    @Override
    @NotNull
    public PgAmopRecord value3(@NotNull Long value) {
        setAmoplefttype(value);
        return this;
    }

    @Override
    @NotNull
    public PgAmopRecord value4(@NotNull Long value) {
        setAmoprighttype(value);
        return this;
    }

    @Override
    @NotNull
    public PgAmopRecord value5(@NotNull Short value) {
        setAmopstrategy(value);
        return this;
    }

    @Override
    @NotNull
    public PgAmopRecord value6(@NotNull String value) {
        setAmoppurpose(value);
        return this;
    }

    @Override
    @NotNull
    public PgAmopRecord value7(@NotNull Long value) {
        setAmopopr(value);
        return this;
    }

    @Override
    @NotNull
    public PgAmopRecord value8(@NotNull Long value) {
        setAmopmethod(value);
        return this;
    }

    @Override
    @NotNull
    public PgAmopRecord value9(@NotNull Long value) {
        setAmopsortfamily(value);
        return this;
    }

    @Override
    @NotNull
    public PgAmopRecord values(@NotNull Long value1, @NotNull Long value2, @NotNull Long value3, @NotNull Long value4, @NotNull Short value5, @NotNull String value6, @NotNull Long value7, @NotNull Long value8, @NotNull Long value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgAmopRecord
     */
    public PgAmopRecord() {
        super(PgAmop.PG_AMOP);
    }

    /**
     * Create a detached, initialised PgAmopRecord
     */
    @ConstructorProperties({ "oid", "amopfamily", "amoplefttype", "amoprighttype", "amopstrategy", "amoppurpose", "amopopr", "amopmethod", "amopsortfamily" })
    public PgAmopRecord(@NotNull Long oid, @NotNull Long amopfamily, @NotNull Long amoplefttype, @NotNull Long amoprighttype, @NotNull Short amopstrategy, @NotNull String amoppurpose, @NotNull Long amopopr, @NotNull Long amopmethod, @NotNull Long amopsortfamily) {
        super(PgAmop.PG_AMOP);

        setOid(oid);
        setAmopfamily(amopfamily);
        setAmoplefttype(amoplefttype);
        setAmoprighttype(amoprighttype);
        setAmopstrategy(amopstrategy);
        setAmoppurpose(amoppurpose);
        setAmopopr(amopopr);
        setAmopmethod(amopmethod);
        setAmopsortfamily(amopsortfamily);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PgAmopRecord
     */
    public PgAmopRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgAmop value) {
        super(PgAmop.PG_AMOP);

        if (value != null) {
            setOid(value.getOid());
            setAmopfamily(value.getAmopfamily());
            setAmoplefttype(value.getAmoplefttype());
            setAmoprighttype(value.getAmoprighttype());
            setAmopstrategy(value.getAmopstrategy());
            setAmoppurpose(value.getAmoppurpose());
            setAmopopr(value.getAmopopr());
            setAmopmethod(value.getAmopmethod());
            setAmopsortfamily(value.getAmopsortfamily());
            resetChangedOnNotNull();
        }
    }
}
