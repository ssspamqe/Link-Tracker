/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgStatSsl;

import java.beans.ConstructorProperties;
import java.math.BigDecimal;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatSslRecord extends TableRecordImpl<PgStatSslRecord> implements Record8<Integer, Boolean, String, String, Integer, String, BigDecimal, String> {

    private static final long serialVersionUID = 1L;

    public void setPid(@Nullable Integer value) {
        set(0, value);
    }

    @Nullable
    public Integer getPid() {
        return (Integer) get(0);
    }

    public void setSsl(@Nullable Boolean value) {
        set(1, value);
    }

    @Nullable
    public Boolean getSsl() {
        return (Boolean) get(1);
    }

    public void setVersion(@Nullable String value) {
        set(2, value);
    }

    @Nullable
    public String getVersion() {
        return (String) get(2);
    }

    public void setCipher(@Nullable String value) {
        set(3, value);
    }

    @Nullable
    public String getCipher() {
        return (String) get(3);
    }

    public void setBits(@Nullable Integer value) {
        set(4, value);
    }

    @Nullable
    public Integer getBits() {
        return (Integer) get(4);
    }

    public void setClientDn(@Nullable String value) {
        set(5, value);
    }

    @Nullable
    public String getClientDn() {
        return (String) get(5);
    }

    public void setClientSerial(@Nullable BigDecimal value) {
        set(6, value);
    }

    @Nullable
    public BigDecimal getClientSerial() {
        return (BigDecimal) get(6);
    }

    public void setIssuerDn(@Nullable String value) {
        set(7, value);
    }

    @Nullable
    public String getIssuerDn() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row8<Integer, Boolean, String, String, Integer, String, BigDecimal, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row8<Integer, Boolean, String, String, Integer, String, BigDecimal, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Integer> field1() {
        return PgStatSsl.PG_STAT_SSL.PID;
    }

    @Override
    @NotNull
    public Field<Boolean> field2() {
        return PgStatSsl.PG_STAT_SSL.SSL;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return PgStatSsl.PG_STAT_SSL.VERSION;
    }

    @Override
    @NotNull
    public Field<String> field4() {
        return PgStatSsl.PG_STAT_SSL.CIPHER;
    }

    @Override
    @NotNull
    public Field<Integer> field5() {
        return PgStatSsl.PG_STAT_SSL.BITS;
    }

    @Override
    @NotNull
    public Field<String> field6() {
        return PgStatSsl.PG_STAT_SSL.CLIENT_DN;
    }

    @Override
    @NotNull
    public Field<BigDecimal> field7() {
        return PgStatSsl.PG_STAT_SSL.CLIENT_SERIAL;
    }

    @Override
    @NotNull
    public Field<String> field8() {
        return PgStatSsl.PG_STAT_SSL.ISSUER_DN;
    }

    @Override
    @Nullable
    public Integer component1() {
        return getPid();
    }

    @Override
    @Nullable
    public Boolean component2() {
        return getSsl();
    }

    @Override
    @Nullable
    public String component3() {
        return getVersion();
    }

    @Override
    @Nullable
    public String component4() {
        return getCipher();
    }

    @Override
    @Nullable
    public Integer component5() {
        return getBits();
    }

    @Override
    @Nullable
    public String component6() {
        return getClientDn();
    }

    @Override
    @Nullable
    public BigDecimal component7() {
        return getClientSerial();
    }

    @Override
    @Nullable
    public String component8() {
        return getIssuerDn();
    }

    @Override
    @Nullable
    public Integer value1() {
        return getPid();
    }

    @Override
    @Nullable
    public Boolean value2() {
        return getSsl();
    }

    @Override
    @Nullable
    public String value3() {
        return getVersion();
    }

    @Override
    @Nullable
    public String value4() {
        return getCipher();
    }

    @Override
    @Nullable
    public Integer value5() {
        return getBits();
    }

    @Override
    @Nullable
    public String value6() {
        return getClientDn();
    }

    @Override
    @Nullable
    public BigDecimal value7() {
        return getClientSerial();
    }

    @Override
    @Nullable
    public String value8() {
        return getIssuerDn();
    }

    @Override
    @NotNull
    public PgStatSslRecord value1(@Nullable Integer value) {
        setPid(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatSslRecord value2(@Nullable Boolean value) {
        setSsl(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatSslRecord value3(@Nullable String value) {
        setVersion(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatSslRecord value4(@Nullable String value) {
        setCipher(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatSslRecord value5(@Nullable Integer value) {
        setBits(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatSslRecord value6(@Nullable String value) {
        setClientDn(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatSslRecord value7(@Nullable BigDecimal value) {
        setClientSerial(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatSslRecord value8(@Nullable String value) {
        setIssuerDn(value);
        return this;
    }

    @Override
    @NotNull
    public PgStatSslRecord values(@Nullable Integer value1, @Nullable Boolean value2, @Nullable String value3, @Nullable String value4, @Nullable Integer value5, @Nullable String value6, @Nullable BigDecimal value7, @Nullable String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public PgStatSslRecord() {
        super(PgStatSsl.PG_STAT_SSL);
    }

    @ConstructorProperties({ "pid", "ssl", "version", "cipher", "bits", "clientDn", "clientSerial", "issuerDn" })
    public PgStatSslRecord(@Nullable Integer pid, @Nullable Boolean ssl, @Nullable String version, @Nullable String cipher, @Nullable Integer bits, @Nullable String clientDn, @Nullable BigDecimal clientSerial, @Nullable String issuerDn) {
        super(PgStatSsl.PG_STAT_SSL);

        setPid(pid);
        setSsl(ssl);
        setVersion(version);
        setCipher(cipher);
        setBits(bits);
        setClientDn(clientDn);
        setClientSerial(clientSerial);
        setIssuerDn(issuerDn);
        resetChangedOnNotNull();
    }

    public PgStatSslRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgStatSsl value) {
        super(PgStatSsl.PG_STAT_SSL);

        if (value != null) {
            setPid(value.getPid());
            setSsl(value.getSsl());
            setVersion(value.getVersion());
            setCipher(value.getCipher());
            setBits(value.getBits());
            setClientDn(value.getClientDn());
            setClientSerial(value.getClientSerial());
            setIssuerDn(value.getIssuerDn());
            resetChangedOnNotNull();
        }
    }
}
