/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgCollation;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgCollationRecord extends UpdatableRecordImpl<PgCollationRecord> implements Record12<Long, String, Long, Long, String, Boolean, Integer, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    public void setOid(@NotNull Long value) {
        set(0, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getOid() {
        return (Long) get(0);
    }

    public void setCollname(@NotNull String value) {
        set(1, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getCollname() {
        return (String) get(1);
    }

    public void setCollnamespace(@NotNull Long value) {
        set(2, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getCollnamespace() {
        return (Long) get(2);
    }

    public void setCollowner(@NotNull Long value) {
        set(3, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getCollowner() {
        return (Long) get(3);
    }

    public void setCollprovider(@NotNull String value) {
        set(4, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getCollprovider() {
        return (String) get(4);
    }

    public void setCollisdeterministic(@NotNull Boolean value) {
        set(5, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getCollisdeterministic() {
        return (Boolean) get(5);
    }

    public void setCollencoding(@NotNull Integer value) {
        set(6, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getCollencoding() {
        return (Integer) get(6);
    }

    public void setCollcollate(@Nullable String value) {
        set(7, value);
    }

    @Nullable
    public String getCollcollate() {
        return (String) get(7);
    }

    public void setCollctype(@Nullable String value) {
        set(8, value);
    }

    @Nullable
    public String getCollctype() {
        return (String) get(8);
    }

    public void setColliculocale(@Nullable String value) {
        set(9, value);
    }

    @Nullable
    public String getColliculocale() {
        return (String) get(9);
    }

    public void setCollicurules(@Nullable String value) {
        set(10, value);
    }

    @Nullable
    public String getCollicurules() {
        return (String) get(10);
    }

    public void setCollversion(@Nullable String value) {
        set(11, value);
    }

    @Nullable
    public String getCollversion() {
        return (String) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row12<Long, String, Long, Long, String, Boolean, Integer, String, String, String, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row12<Long, String, Long, Long, String, Boolean, Integer, String, String, String, String, String> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return PgCollation.PG_COLLATION.OID;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return PgCollation.PG_COLLATION.COLLNAME;
    }

    @Override
    @NotNull
    public Field<Long> field3() {
        return PgCollation.PG_COLLATION.COLLNAMESPACE;
    }

    @Override
    @NotNull
    public Field<Long> field4() {
        return PgCollation.PG_COLLATION.COLLOWNER;
    }

    @Override
    @NotNull
    public Field<String> field5() {
        return PgCollation.PG_COLLATION.COLLPROVIDER;
    }

    @Override
    @NotNull
    public Field<Boolean> field6() {
        return PgCollation.PG_COLLATION.COLLISDETERMINISTIC;
    }

    @Override
    @NotNull
    public Field<Integer> field7() {
        return PgCollation.PG_COLLATION.COLLENCODING;
    }

    @Override
    @NotNull
    public Field<String> field8() {
        return PgCollation.PG_COLLATION.COLLCOLLATE;
    }

    @Override
    @NotNull
    public Field<String> field9() {
        return PgCollation.PG_COLLATION.COLLCTYPE;
    }

    @Override
    @NotNull
    public Field<String> field10() {
        return PgCollation.PG_COLLATION.COLLICULOCALE;
    }

    @Override
    @NotNull
    public Field<String> field11() {
        return PgCollation.PG_COLLATION.COLLICURULES;
    }

    @Override
    @NotNull
    public Field<String> field12() {
        return PgCollation.PG_COLLATION.COLLVERSION;
    }

    @Override
    @NotNull
    public Long component1() {
        return getOid();
    }

    @Override
    @NotNull
    public String component2() {
        return getCollname();
    }

    @Override
    @NotNull
    public Long component3() {
        return getCollnamespace();
    }

    @Override
    @NotNull
    public Long component4() {
        return getCollowner();
    }

    @Override
    @NotNull
    public String component5() {
        return getCollprovider();
    }

    @Override
    @NotNull
    public Boolean component6() {
        return getCollisdeterministic();
    }

    @Override
    @NotNull
    public Integer component7() {
        return getCollencoding();
    }

    @Override
    @Nullable
    public String component8() {
        return getCollcollate();
    }

    @Override
    @Nullable
    public String component9() {
        return getCollctype();
    }

    @Override
    @Nullable
    public String component10() {
        return getColliculocale();
    }

    @Override
    @Nullable
    public String component11() {
        return getCollicurules();
    }

    @Override
    @Nullable
    public String component12() {
        return getCollversion();
    }

    @Override
    @NotNull
    public Long value1() {
        return getOid();
    }

    @Override
    @NotNull
    public String value2() {
        return getCollname();
    }

    @Override
    @NotNull
    public Long value3() {
        return getCollnamespace();
    }

    @Override
    @NotNull
    public Long value4() {
        return getCollowner();
    }

    @Override
    @NotNull
    public String value5() {
        return getCollprovider();
    }

    @Override
    @NotNull
    public Boolean value6() {
        return getCollisdeterministic();
    }

    @Override
    @NotNull
    public Integer value7() {
        return getCollencoding();
    }

    @Override
    @Nullable
    public String value8() {
        return getCollcollate();
    }

    @Override
    @Nullable
    public String value9() {
        return getCollctype();
    }

    @Override
    @Nullable
    public String value10() {
        return getColliculocale();
    }

    @Override
    @Nullable
    public String value11() {
        return getCollicurules();
    }

    @Override
    @Nullable
    public String value12() {
        return getCollversion();
    }

    @Override
    @NotNull
    public PgCollationRecord value1(@NotNull Long value) {
        setOid(value);
        return this;
    }

    @Override
    @NotNull
    public PgCollationRecord value2(@NotNull String value) {
        setCollname(value);
        return this;
    }

    @Override
    @NotNull
    public PgCollationRecord value3(@NotNull Long value) {
        setCollnamespace(value);
        return this;
    }

    @Override
    @NotNull
    public PgCollationRecord value4(@NotNull Long value) {
        setCollowner(value);
        return this;
    }

    @Override
    @NotNull
    public PgCollationRecord value5(@NotNull String value) {
        setCollprovider(value);
        return this;
    }

    @Override
    @NotNull
    public PgCollationRecord value6(@NotNull Boolean value) {
        setCollisdeterministic(value);
        return this;
    }

    @Override
    @NotNull
    public PgCollationRecord value7(@NotNull Integer value) {
        setCollencoding(value);
        return this;
    }

    @Override
    @NotNull
    public PgCollationRecord value8(@Nullable String value) {
        setCollcollate(value);
        return this;
    }

    @Override
    @NotNull
    public PgCollationRecord value9(@Nullable String value) {
        setCollctype(value);
        return this;
    }

    @Override
    @NotNull
    public PgCollationRecord value10(@Nullable String value) {
        setColliculocale(value);
        return this;
    }

    @Override
    @NotNull
    public PgCollationRecord value11(@Nullable String value) {
        setCollicurules(value);
        return this;
    }

    @Override
    @NotNull
    public PgCollationRecord value12(@Nullable String value) {
        setCollversion(value);
        return this;
    }

    @Override
    @NotNull
    public PgCollationRecord values(@NotNull Long value1, @NotNull String value2, @NotNull Long value3, @NotNull Long value4, @NotNull String value5, @NotNull Boolean value6, @NotNull Integer value7, @Nullable String value8, @Nullable String value9, @Nullable String value10, @Nullable String value11, @Nullable String value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public PgCollationRecord() {
        super(PgCollation.PG_COLLATION);
    }

    @ConstructorProperties({ "oid", "collname", "collnamespace", "collowner", "collprovider", "collisdeterministic", "collencoding", "collcollate", "collctype", "colliculocale", "collicurules", "collversion" })
    public PgCollationRecord(@NotNull Long oid, @NotNull String collname, @NotNull Long collnamespace, @NotNull Long collowner, @NotNull String collprovider, @NotNull Boolean collisdeterministic, @NotNull Integer collencoding, @Nullable String collcollate, @Nullable String collctype, @Nullable String colliculocale, @Nullable String collicurules, @Nullable String collversion) {
        super(PgCollation.PG_COLLATION);

        setOid(oid);
        setCollname(collname);
        setCollnamespace(collnamespace);
        setCollowner(collowner);
        setCollprovider(collprovider);
        setCollisdeterministic(collisdeterministic);
        setCollencoding(collencoding);
        setCollcollate(collcollate);
        setCollctype(collctype);
        setColliculocale(colliculocale);
        setCollicurules(collicurules);
        setCollversion(collversion);
        resetChangedOnNotNull();
    }

    public PgCollationRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgCollation value) {
        super(PgCollation.PG_COLLATION);

        if (value != null) {
            setOid(value.getOid());
            setCollname(value.getCollname());
            setCollnamespace(value.getCollnamespace());
            setCollowner(value.getCollowner());
            setCollprovider(value.getCollprovider());
            setCollisdeterministic(value.getCollisdeterministic());
            setCollencoding(value.getCollencoding());
            setCollcollate(value.getCollcollate());
            setCollctype(value.getCollctype());
            setColliculocale(value.getColliculocale());
            setCollicurules(value.getCollicurules());
            setCollversion(value.getCollversion());
            resetChangedOnNotNull();
        }
    }
}
