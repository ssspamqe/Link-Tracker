/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.information_schema.tables.records;


import edu.java.domain.jooq.information_schema.tables.CheckConstraints;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CheckConstraintsRecord extends TableRecordImpl<CheckConstraintsRecord> implements Record4<String, String, String, String> {

    private static final long serialVersionUID = 1L;

    public void setConstraintCatalog(@Nullable String value) {
        set(0, value);
    }

    @Nullable
    public String getConstraintCatalog() {
        return (String) get(0);
    }

    public void setConstraintSchema(@Nullable String value) {
        set(1, value);
    }

    @Nullable
    public String getConstraintSchema() {
        return (String) get(1);
    }

    public void setConstraintName(@Nullable String value) {
        set(2, value);
    }

    @Nullable
    public String getConstraintName() {
        return (String) get(2);
    }

    public void setCheckClause(@Nullable String value) {
        set(3, value);
    }

    @Nullable
    public String getCheckClause() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row4<String, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return CheckConstraints.CHECK_CONSTRAINTS.CONSTRAINT_CATALOG;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return CheckConstraints.CHECK_CONSTRAINTS.CONSTRAINT_SCHEMA;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return CheckConstraints.CHECK_CONSTRAINTS.CONSTRAINT_NAME;
    }

    @Override
    @NotNull
    public Field<String> field4() {
        return CheckConstraints.CHECK_CONSTRAINTS.CHECK_CLAUSE;
    }

    @Override
    @Nullable
    public String component1() {
        return getConstraintCatalog();
    }

    @Override
    @Nullable
    public String component2() {
        return getConstraintSchema();
    }

    @Override
    @Nullable
    public String component3() {
        return getConstraintName();
    }

    @Override
    @Nullable
    public String component4() {
        return getCheckClause();
    }

    @Override
    @Nullable
    public String value1() {
        return getConstraintCatalog();
    }

    @Override
    @Nullable
    public String value2() {
        return getConstraintSchema();
    }

    @Override
    @Nullable
    public String value3() {
        return getConstraintName();
    }

    @Override
    @Nullable
    public String value4() {
        return getCheckClause();
    }

    @Override
    @NotNull
    public CheckConstraintsRecord value1(@Nullable String value) {
        setConstraintCatalog(value);
        return this;
    }

    @Override
    @NotNull
    public CheckConstraintsRecord value2(@Nullable String value) {
        setConstraintSchema(value);
        return this;
    }

    @Override
    @NotNull
    public CheckConstraintsRecord value3(@Nullable String value) {
        setConstraintName(value);
        return this;
    }

    @Override
    @NotNull
    public CheckConstraintsRecord value4(@Nullable String value) {
        setCheckClause(value);
        return this;
    }

    @Override
    @NotNull
    public CheckConstraintsRecord values(@Nullable String value1, @Nullable String value2, @Nullable String value3, @Nullable String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public CheckConstraintsRecord() {
        super(CheckConstraints.CHECK_CONSTRAINTS);
    }

    @ConstructorProperties({ "constraintCatalog", "constraintSchema", "constraintName", "checkClause" })
    public CheckConstraintsRecord(@Nullable String constraintCatalog, @Nullable String constraintSchema, @Nullable String constraintName, @Nullable String checkClause) {
        super(CheckConstraints.CHECK_CONSTRAINTS);

        setConstraintCatalog(constraintCatalog);
        setConstraintSchema(constraintSchema);
        setConstraintName(constraintName);
        setCheckClause(checkClause);
        resetChangedOnNotNull();
    }

    public CheckConstraintsRecord(edu.java.domain.jooq.information_schema.tables.pojos.CheckConstraints value) {
        super(CheckConstraints.CHECK_CONSTRAINTS);

        if (value != null) {
            setConstraintCatalog(value.getConstraintCatalog());
            setConstraintSchema(value.getConstraintSchema());
            setConstraintName(value.getConstraintName());
            setCheckClause(value.getCheckClause());
            resetChangedOnNotNull();
        }
    }
}
